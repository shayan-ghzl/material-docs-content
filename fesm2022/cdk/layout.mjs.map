{"version":3,"file":"layout.mjs","sources":["../../../../../../../src/components-examples/cdk/layout/breakpoint-observer-overview/breakpoint-observer-overview-example.ts","../../../../../../../src/components-examples/cdk/layout/breakpoint-observer-overview/breakpoint-observer-overview-example.html","../../../../../../../src/components-examples/cdk/layout/layout_public_index.ts"],"sourcesContent":["import {BreakpointObserver, Breakpoints} from '@angular/cdk/layout';\r\nimport {Component, OnDestroy} from '@angular/core';\r\nimport {Subject} from 'rxjs';\r\nimport {takeUntil} from 'rxjs/operators';\r\n\r\n/** @title Respond to viewport changes with BreakpointObserver */\r\n@Component({\r\n  selector: 'breakpoint-observer-overview-example',\r\n  templateUrl: 'breakpoint-observer-overview-example.html',\r\n  styleUrls: ['breakpoint-observer-overview-example.css'],\r\n  standalone: true,\r\n})\r\nexport class BreakpointObserverOverviewExample implements OnDestroy {\r\n  destroyed = new Subject<void>();\r\n  currentScreenSize: string;\r\n\r\n  // Create a map to display breakpoint names for demonstration purposes.\r\n  displayNameMap = new Map([\r\n    [Breakpoints.XSmall, 'XSmall'],\r\n    [Breakpoints.Small, 'Small'],\r\n    [Breakpoints.Medium, 'Medium'],\r\n    [Breakpoints.Large, 'Large'],\r\n    [Breakpoints.XLarge, 'XLarge'],\r\n  ]);\r\n\r\n  constructor(breakpointObserver: BreakpointObserver) {\r\n    breakpointObserver\r\n      .observe([\r\n        Breakpoints.XSmall,\r\n        Breakpoints.Small,\r\n        Breakpoints.Medium,\r\n        Breakpoints.Large,\r\n        Breakpoints.XLarge,\r\n      ])\r\n      .pipe(takeUntil(this.destroyed))\r\n      .subscribe(result => {\r\n        for (const query of Object.keys(result.breakpoints)) {\r\n          if (result.breakpoints[query]) {\r\n            this.currentScreenSize = this.displayNameMap.get(query) ?? 'Unknown';\r\n          }\r\n        }\r\n      });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroyed.next();\r\n    this.destroyed.complete();\r\n  }\r\n}\r\n","<p>\r\n  Resize your browser window to see the current screen size change.\r\n</p>\r\n<p>\r\n  The current screen size is <strong>{{currentScreenSize}}</strong>\r\n</p>\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":";;;;;;;AAKA;MAOa,iCAAiC,CAAA;AAa5C,IAAA,WAAA,CAAY,kBAAsC,EAAA;AAZlD,QAAA,IAAA,CAAA,SAAS,GAAG,IAAI,OAAO,EAAQ,CAAC;;QAIhC,IAAc,CAAA,cAAA,GAAG,IAAI,GAAG,CAAC;AACvB,YAAA,CAAC,WAAW,CAAC,MAAM,EAAE,QAAQ,CAAC;AAC9B,YAAA,CAAC,WAAW,CAAC,KAAK,EAAE,OAAO,CAAC;AAC5B,YAAA,CAAC,WAAW,CAAC,MAAM,EAAE,QAAQ,CAAC;AAC9B,YAAA,CAAC,WAAW,CAAC,KAAK,EAAE,OAAO,CAAC;AAC5B,YAAA,CAAC,WAAW,CAAC,MAAM,EAAE,QAAQ,CAAC;AAC/B,SAAA,CAAC,CAAC;QAGD,kBAAkB;AACf,aAAA,OAAO,CAAC;AACP,YAAA,WAAW,CAAC,MAAM;AAClB,YAAA,WAAW,CAAC,KAAK;AACjB,YAAA,WAAW,CAAC,MAAM;AAClB,YAAA,WAAW,CAAC,KAAK;AACjB,YAAA,WAAW,CAAC,MAAM;SACnB,CAAC;AACD,aAAA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;aAC/B,SAAS,CAAC,MAAM,IAAG;YAClB,KAAK,MAAM,KAAK,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,EAAE;AACnD,gBAAA,IAAI,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,EAAE;AAC7B,oBAAA,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,SAAS,CAAC;AACtE,iBAAA;AACF,aAAA;AACH,SAAC,CAAC,CAAC;KACN;IAED,WAAW,GAAA;AACT,QAAA,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;AACtB,QAAA,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;KAC3B;8GAnCU,iCAAiC,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,kBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA,EAAA;AAAjC,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,iCAAiC,gGCZ9C,8KAMA,EAAA,MAAA,EAAA,CAAA,oCAAA,CAAA,EAAA,CAAA,CAAA,EAAA;;2FDMa,iCAAiC,EAAA,UAAA,EAAA,CAAA;kBAN7C,SAAS;AACE,YAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,sCAAsC,cAGpC,IAAI,EAAA,QAAA,EAAA,8KAAA,EAAA,MAAA,EAAA,CAAA,oCAAA,CAAA,EAAA,CAAA;;;AEVlB;;AAEG;;;;"}