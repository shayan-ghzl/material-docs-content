{"version":3,"file":"grid-list.mjs","sources":["../../../../../../../src/components-examples/material/grid-list/grid-list-dynamic/grid-list-dynamic-example.ts","../../../../../../../src/components-examples/material/grid-list/grid-list-dynamic/grid-list-dynamic-example.html","../../../../../../../src/components-examples/material/grid-list/grid-list-overview/grid-list-overview-example.ts","../../../../../../../src/components-examples/material/grid-list/grid-list-overview/grid-list-overview-example.html","../../../../../../../src/components-examples/material/grid-list/grid-list-harness/grid-list-harness-example.ts","../../../../../../../src/components-examples/material/grid-list/grid-list-harness/grid-list-harness-example.html","../../../../../../../src/components-examples/material/grid-list/grid-list_public_index.ts"],"sourcesContent":["import {Component} from '@angular/core';\r\nimport {MatGridListModule} from '@angular/material/grid-list';\r\n\r\nexport interface Tile {\r\n  color: string;\r\n  cols: number;\r\n  rows: number;\r\n  text: string;\r\n}\r\n\r\n/**\r\n * @title Dynamic grid-list\r\n */\r\n@Component({\r\n  selector: 'grid-list-dynamic-example',\r\n  templateUrl: 'grid-list-dynamic-example.html',\r\n  standalone: true,\r\n  imports: [MatGridListModule],\r\n})\r\nexport class GridListDynamicExample {\r\n  tiles: Tile[] = [\r\n    {text: 'One', cols: 3, rows: 1, color: 'lightblue'},\r\n    {text: 'Two', cols: 1, rows: 2, color: 'lightgreen'},\r\n    {text: 'Three', cols: 1, rows: 1, color: 'lightpink'},\r\n    {text: 'Four', cols: 2, rows: 1, color: '#DDBDF1'},\r\n  ];\r\n}\r\n","<mat-grid-list cols=\"4\" rowHeight=\"100px\">\r\n  @for (tile of tiles; track tile) {\r\n    <mat-grid-tile\r\n      [colspan]=\"tile.cols\"\r\n      [rowspan]=\"tile.rows\"\r\n      [style.background]=\"tile.color\">{{tile.text}}</mat-grid-tile>\r\n  }\r\n</mat-grid-list>\r\n","import {Component} from '@angular/core';\r\nimport {MatGridListModule} from '@angular/material/grid-list';\r\n\r\n/**\r\n * @title Basic grid-list\r\n */\r\n@Component({\r\n  selector: 'grid-list-overview-example',\r\n  styleUrls: ['grid-list-overview-example.css'],\r\n  templateUrl: 'grid-list-overview-example.html',\r\n  standalone: true,\r\n  imports: [MatGridListModule],\r\n})\r\nexport class GridListOverviewExample {}\r\n","<mat-grid-list cols=\"2\" rowHeight=\"2:1\">\r\n  <mat-grid-tile>1</mat-grid-tile>\r\n  <mat-grid-tile>2</mat-grid-tile>\r\n  <mat-grid-tile>3</mat-grid-tile>\r\n  <mat-grid-tile>4</mat-grid-tile>\r\n</mat-grid-list>\r\n","import {Component} from '@angular/core';\r\nimport {MatGridListModule} from '@angular/material/grid-list';\r\n\r\n/**\r\n * @title Testing with MatGridListHarness\r\n */\r\n@Component({\r\n  selector: 'grid-list-harness-example',\r\n  templateUrl: 'grid-list-harness-example.html',\r\n  standalone: true,\r\n  imports: [MatGridListModule],\r\n})\r\nexport class GridListHarnessExample {}\r\n","<mat-grid-list cols=\"2\" rowHeight=\"100px\">\r\n  <mat-grid-tile>Tile 1 (no header, no footer)</mat-grid-tile>\r\n  <mat-grid-tile>\r\n    <mat-grid-tile-header>Tile 2</mat-grid-tile-header>\r\n  </mat-grid-tile>\r\n  <mat-grid-tile colspan=\"2\">\r\n    <mat-grid-tile-header>Tile 3</mat-grid-tile-header>\r\n    <mat-grid-tile-footer>Tile 3 footer</mat-grid-tile-footer>\r\n  </mat-grid-tile>\r\n  <mat-grid-tile>\r\n    <mat-grid-tile-header>Tile 4</mat-grid-tile-header>\r\n  </mat-grid-tile>\r\n</mat-grid-list>\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}