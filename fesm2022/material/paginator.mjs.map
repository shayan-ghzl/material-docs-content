{"version":3,"file":"paginator.mjs","sources":["../../../../../../../src/components-examples/material/paginator/paginator-configurable/paginator-configurable-example.ts","../../../../../../../src/components-examples/material/paginator/paginator-configurable/paginator-configurable-example.html","../../../../../../../src/components-examples/material/paginator/paginator-overview/paginator-overview-example.ts","../../../../../../../src/components-examples/material/paginator/paginator-overview/paginator-overview-example.html","../../../../../../../src/components-examples/material/paginator/paginator-harness/paginator-harness-example.ts","../../../../../../../src/components-examples/material/paginator/paginator-harness/paginator-harness-example.html","../../../../../../../src/components-examples/material/paginator/paginator-intl/paginator-intl-example.ts","../../../../../../../src/components-examples/material/paginator/paginator-intl/paginator-intl-example.html","../../../../../../../src/components-examples/material/paginator/paginator_public_index.ts"],"sourcesContent":["import {Component} from '@angular/core';\r\nimport {PageEvent, MatPaginatorModule} from '@angular/material/paginator';\r\nimport {JsonPipe} from '@angular/common';\r\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\r\nimport {FormsModule} from '@angular/forms';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\n\r\n/**\r\n * @title Configurable paginator\r\n */\r\n@Component({\r\n  selector: 'paginator-configurable-example',\r\n  templateUrl: 'paginator-configurable-example.html',\r\n  styleUrls: ['paginator-configurable-example.css'],\r\n  standalone: true,\r\n  imports: [\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    FormsModule,\r\n    MatSlideToggleModule,\r\n    MatPaginatorModule,\r\n    JsonPipe,\r\n  ],\r\n})\r\nexport class PaginatorConfigurableExample {\r\n  length = 50;\r\n  pageSize = 10;\r\n  pageIndex = 0;\r\n  pageSizeOptions = [5, 10, 25];\r\n\r\n  hidePageSize = false;\r\n  showPageSizeOptions = true;\r\n  showFirstLastButtons = true;\r\n  disabled = false;\r\n\r\n  pageEvent: PageEvent;\r\n\r\n  handlePageEvent(e: PageEvent) {\r\n    this.pageEvent = e;\r\n    this.length = e.length;\r\n    this.pageSize = e.pageSize;\r\n    this.pageIndex = e.pageIndex;\r\n  }\r\n\r\n  setPageSizeOptions(setPageSizeOptionsInput: string) {\r\n    if (setPageSizeOptionsInput) {\r\n      this.pageSizeOptions = setPageSizeOptionsInput.split(',').map(str => +str);\r\n    }\r\n  }\r\n}\r\n","<div class=\"demo-options\">\r\n  <mat-form-field>\r\n    <mat-label>Length</mat-label>\r\n    <input matInput placeholder=\"Length\" type=\"number\" [(ngModel)]=\"length\">\r\n  </mat-form-field>\r\n\r\n  <mat-form-field>\r\n    <mat-label>Page Size</mat-label>\r\n    <input matInput placeholder=\"Page Size\" type=\"number\" [(ngModel)]=\"pageSize\">\r\n  </mat-form-field>\r\n\r\n  <mat-form-field>\r\n    <mat-label>Page Index</mat-label>\r\n    <input matInput placeholder=\"Page Index\" type=\"number\" [(ngModel)]=\"pageIndex\">\r\n  </mat-form-field>\r\n\r\n  <mat-form-field>\r\n    <mat-label>Page Size Options</mat-label>\r\n    <input matInput [ngModel]=\"pageSizeOptions\" (ngModelChange)=\"setPageSizeOptions($event)\"\r\n           [ngModelOptions]=\"{updateOn: 'blur'}\" placeholder=\"Ex. 10,25,50\">\r\n  </mat-form-field>\r\n\r\n  <div class=\"demo-toggles\">\r\n    <mat-slide-toggle [(ngModel)]=\"hidePageSize\">Hide page size</mat-slide-toggle>\r\n    <mat-slide-toggle [(ngModel)]=\"showPageSizeOptions\">Show multiple page size options</mat-slide-toggle>\r\n    <mat-slide-toggle [(ngModel)]=\"showFirstLastButtons\">Show first/last buttons</mat-slide-toggle>\r\n    <mat-slide-toggle [(ngModel)]=\"disabled\">Disabled</mat-slide-toggle>\r\n  </div>\r\n</div>\r\n\r\n<mat-paginator #paginator\r\n               class=\"demo-paginator\"\r\n               (page)=\"handlePageEvent($event)\"\r\n               [length]=\"length\"\r\n               [pageSize]=\"pageSize\"\r\n               [disabled]=\"disabled\"\r\n               [showFirstLastButtons]=\"showFirstLastButtons\"\r\n               [pageSizeOptions]=\"showPageSizeOptions ? pageSizeOptions : []\"\r\n               [hidePageSize]=\"hidePageSize\"\r\n               [pageIndex]=\"pageIndex\"\r\n               aria-label=\"Select page\">\r\n</mat-paginator>\r\n\r\n<div class=\"demo-data\">\r\n  <div> Output event: {{(pageEvent | json) || 'No events dispatched yet'}} </div>\r\n  <div> getNumberOfPages: {{paginator.getNumberOfPages()}} </div>\r\n</div>\r\n","import {Component} from '@angular/core';\r\nimport {MatPaginatorModule} from '@angular/material/paginator';\r\n\r\n/**\r\n * @title Paginator\r\n */\r\n@Component({\r\n  selector: 'paginator-overview-example',\r\n  templateUrl: 'paginator-overview-example.html',\r\n  standalone: true,\r\n  imports: [MatPaginatorModule],\r\n})\r\nexport class PaginatorOverviewExample {}\r\n","<mat-paginator [length]=\"100\"\r\n              [pageSize]=\"10\"\r\n              [pageSizeOptions]=\"[5, 10, 25, 100]\"\r\n              aria-label=\"Select page\">\r\n</mat-paginator>\r\n","import {Component} from '@angular/core';\r\nimport {PageEvent, MatPaginatorModule} from '@angular/material/paginator';\r\n\r\n/**\r\n * @title Testing with MatPaginatorHarness\r\n */\r\n@Component({\r\n  selector: 'paginator-harness-example',\r\n  templateUrl: 'paginator-harness-example.html',\r\n  standalone: true,\r\n  imports: [MatPaginatorModule],\r\n})\r\nexport class PaginatorHarnessExample {\r\n  length = 500;\r\n  pageSize = 10;\r\n  pageIndex = 0;\r\n  pageSizeOptions = [5, 10, 25];\r\n  showFirstLastButtons = true;\r\n\r\n  handlePageEvent(event: PageEvent) {\r\n    this.length = event.length;\r\n    this.pageSize = event.pageSize;\r\n    this.pageIndex = event.pageIndex;\r\n  }\r\n}\r\n","<mat-paginator\r\n    (page)=\"handlePageEvent($event)\"\r\n    [length]=\"length\"\r\n    [pageSize]=\"pageSize\"\r\n    [showFirstLastButtons]=\"showFirstLastButtons\"\r\n    [pageSizeOptions]=\"pageSizeOptions\"\r\n    [pageIndex]=\"pageIndex\"\r\n    aria-label=\"Select page\">\r\n</mat-paginator>\r\n","import {Component, Injectable} from '@angular/core';\r\nimport {MatPaginatorIntl, MatPaginatorModule} from '@angular/material/paginator';\r\nimport {Subject} from 'rxjs';\r\n\r\n@Injectable()\r\nexport class MyCustomPaginatorIntl implements MatPaginatorIntl {\r\n  changes = new Subject<void>();\r\n\r\n  // For internationalization, the `$localize` function from\r\n  // the `@angular/localize` package can be used.\r\n  firstPageLabel = $localize`First page`;\r\n  itemsPerPageLabel = $localize`Items per page:`;\r\n  lastPageLabel = $localize`Last page`;\r\n\r\n  // You can set labels to an arbitrary string too, or dynamically compute\r\n  // it through other third-party internationalization libraries.\r\n  nextPageLabel = 'Next page';\r\n  previousPageLabel = 'Previous page';\r\n\r\n  getRangeLabel(page: number, pageSize: number, length: number): string {\r\n    if (length === 0) {\r\n      return $localize`Page 1 of 1`;\r\n    }\r\n    const amountPages = Math.ceil(length / pageSize);\r\n    return $localize`Page ${page + 1} of ${amountPages}`;\r\n  }\r\n}\r\n\r\n/**\r\n * @title Paginator internationalization\r\n */\r\n@Component({\r\n  selector: 'paginator-intl-example',\r\n  templateUrl: 'paginator-intl-example.html',\r\n  standalone: true,\r\n  imports: [MatPaginatorModule],\r\n  providers: [{provide: MatPaginatorIntl, useClass: MyCustomPaginatorIntl}],\r\n})\r\nexport class PaginatorIntlExample {}\r\n","<mat-paginator [length]=\"200\" [pageSizeOptions]=\"[10, 50, 100]\" aria-label=\"Select page\">\r\n</mat-paginator>\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["i1"],"mappings":"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"}