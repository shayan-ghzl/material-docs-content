{"version":3,"file":"tabs.mjs","sources":["../../../../../../../src/components-examples/material/tabs/tab-group-align/tab-group-align-example.ts","../../../../../../../src/components-examples/material/tabs/tab-group-align/tab-group-align-example.html","../../../../../../../src/components-examples/material/tabs/tab-group-animations/tab-group-animations-example.ts","../../../../../../../src/components-examples/material/tabs/tab-group-animations/tab-group-animations-example.html","../../../../../../../src/components-examples/material/tabs/tab-group-async/tab-group-async-example.ts","../../../../../../../src/components-examples/material/tabs/tab-group-async/tab-group-async-example.html","../../../../../../../src/components-examples/material/tabs/tab-group-basic/tab-group-basic-example.ts","../../../../../../../src/components-examples/material/tabs/tab-group-basic/tab-group-basic-example.html","../../../../../../../src/components-examples/material/tabs/tab-group-custom-label/tab-group-custom-label-example.ts","../../../../../../../src/components-examples/material/tabs/tab-group-custom-label/tab-group-custom-label-example.html","../../../../../../../src/components-examples/material/tabs/tab-group-dynamic-height/tab-group-dynamic-height-example.ts","../../../../../../../src/components-examples/material/tabs/tab-group-dynamic-height/tab-group-dynamic-height-example.html","../../../../../../../src/components-examples/material/tabs/tab-group-harness/tab-group-harness-example.ts","../../../../../../../src/components-examples/material/tabs/tab-group-harness/tab-group-harness-example.html","../../../../../../../src/components-examples/material/tabs/tab-group-dynamic/tab-group-dynamic-example.ts","../../../../../../../src/components-examples/material/tabs/tab-group-dynamic/tab-group-dynamic-example.html","../../../../../../../src/components-examples/material/tabs/tab-group-header-below/tab-group-header-below-example.ts","../../../../../../../src/components-examples/material/tabs/tab-group-header-below/tab-group-header-below-example.html","../../../../../../../src/components-examples/material/tabs/tab-group-lazy-loaded/tab-group-lazy-loaded-example.ts","../../../../../../../src/components-examples/material/tabs/tab-group-lazy-loaded/tab-group-lazy-loaded-example.html","../../../../../../../src/components-examples/material/tabs/tab-group-preserve-content/tab-group-preserve-content-example.ts","../../../../../../../src/components-examples/material/tabs/tab-group-preserve-content/tab-group-preserve-content-example.html","../../../../../../../src/components-examples/material/tabs/tab-group-stretched/tab-group-stretched-example.ts","../../../../../../../src/components-examples/material/tabs/tab-group-stretched/tab-group-stretched-example.html","../../../../../../../src/components-examples/material/tabs/tab-group-theme/tab-group-theme-example.ts","../../../../../../../src/components-examples/material/tabs/tab-group-theme/tab-group-theme-example.html","../../../../../../../src/components-examples/material/tabs/tab-nav-bar-basic/tab-nav-bar-basic-example.ts","../../../../../../../src/components-examples/material/tabs/tab-nav-bar-basic/tab-nav-bar-basic-example.html","../../../../../../../src/components-examples/material/tabs/tab-group-paginated/tab-group-paginated-example.ts","../../../../../../../src/components-examples/material/tabs/tab-group-paginated/tab-group-paginated-example.html","../../../../../../../src/components-examples/material/tabs/tab-group-inverted/tab-group-inverted-example.ts","../../../../../../../src/components-examples/material/tabs/tab-group-inverted/tab-group-inverted-example.html","../../../../../../../src/components-examples/material/tabs/tab-group-ink-bar/tab-group-ink-bar-example.ts","../../../../../../../src/components-examples/material/tabs/tab-group-ink-bar/tab-group-ink-bar-example.html","../../../../../../../src/components-examples/material/tabs/tabs_public_index.ts"],"sourcesContent":["import {Component} from '@angular/core';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\n\r\n/**\r\n * @title Tab group with aligned labels\r\n */\r\n@Component({\r\n  selector: 'tab-group-align-example',\r\n  templateUrl: 'tab-group-align-example.html',\r\n  styleUrls: ['tab-group-align-example.css'],\r\n  standalone: true,\r\n  imports: [MatTabsModule],\r\n})\r\nexport class TabGroupAlignExample {}\r\n","<!-- #docregion align-start -->\r\n<mat-tab-group mat-stretch-tabs=\"false\" mat-align-tabs=\"start\">\r\n<!-- #enddocregion align-start -->\r\n  <mat-tab label=\"First\">Content 1</mat-tab>\r\n  <mat-tab label=\"Second\">Content 2</mat-tab>\r\n  <mat-tab label=\"Third\">Content 3</mat-tab>\r\n</mat-tab-group>\r\n\r\n<mat-tab-group mat-stretch-tabs=\"false\" mat-align-tabs=\"center\">\r\n  <mat-tab label=\"First\">Content 1</mat-tab>\r\n  <mat-tab label=\"Second\">Content 2</mat-tab>\r\n  <mat-tab label=\"Third\">Content 3</mat-tab>\r\n</mat-tab-group>\r\n\r\n<mat-tab-group mat-stretch-tabs=\"false\" mat-align-tabs=\"end\">\r\n  <mat-tab label=\"First\">Content 1</mat-tab>\r\n  <mat-tab label=\"Second\">Content 2</mat-tab>\r\n  <mat-tab label=\"Third\">Content 3</mat-tab>\r\n</mat-tab-group>\r\n","import {Component} from '@angular/core';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\n\r\n/**\r\n * @title Tab group animations\r\n */\r\n@Component({\r\n  selector: 'tab-group-animations-example',\r\n  templateUrl: 'tab-group-animations-example.html',\r\n  styleUrls: ['tab-group-animations-example.css'],\r\n  standalone: true,\r\n  imports: [MatTabsModule],\r\n})\r\nexport class TabGroupAnimationsExample {}\r\n","<h3>No animation</h3>\r\n\r\n<mat-tab-group animationDuration=\"0ms\">\r\n  <mat-tab label=\"First\">Content 1</mat-tab>\r\n  <mat-tab label=\"Second\">Content 2</mat-tab>\r\n  <mat-tab label=\"Third\">Content 3</mat-tab>\r\n</mat-tab-group>\r\n\r\n<h3>Very slow animation</h3>\r\n<!-- #docregion slow-animation-duration -->\r\n<mat-tab-group animationDuration=\"2000ms\">\r\n<!-- #enddocregion slow-animation-duration -->\r\n  <mat-tab label=\"First\">Content 1</mat-tab>\r\n  <mat-tab label=\"Second\">Content 2</mat-tab>\r\n  <mat-tab label=\"Third\">Content 3</mat-tab>\r\n</mat-tab-group>\r\n","import {Component} from '@angular/core';\r\nimport {Observable, Observer} from 'rxjs';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport {AsyncPipe} from '@angular/common';\r\n\r\nexport interface ExampleTab {\r\n  label: string;\r\n  content: string;\r\n}\r\n\r\n/**\r\n * @title Tab group with asynchronously loading tab contents\r\n */\r\n@Component({\r\n  selector: 'tab-group-async-example',\r\n  templateUrl: 'tab-group-async-example.html',\r\n  standalone: true,\r\n  imports: [MatTabsModule, AsyncPipe],\r\n})\r\nexport class TabGroupAsyncExample {\r\n  asyncTabs: Observable<ExampleTab[]>;\r\n\r\n  constructor() {\r\n    this.asyncTabs = new Observable((observer: Observer<ExampleTab[]>) => {\r\n      setTimeout(() => {\r\n        observer.next([\r\n          {label: 'First', content: 'Content 1'},\r\n          {label: 'Second', content: 'Content 2'},\r\n          {label: 'Third', content: 'Content 3'},\r\n        ]);\r\n      }, 1000);\r\n    });\r\n  }\r\n}\r\n","@if ((asyncTabs | async) === null) {\r\n  Loading tabs...\r\n}\r\n\r\n<mat-tab-group>\r\n  @for (tab of asyncTabs | async; track tab) {\r\n    <mat-tab>\r\n      <ng-template mat-tab-label>{{tab.label}}</ng-template>\r\n      {{tab.content}}\r\n    </mat-tab>\r\n  }\r\n</mat-tab-group>\r\n","import {Component} from '@angular/core';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\n\r\n/**\r\n * @title Basic use of the tab group\r\n */\r\n@Component({\r\n  selector: 'tab-group-basic-example',\r\n  templateUrl: 'tab-group-basic-example.html',\r\n  standalone: true,\r\n  imports: [MatTabsModule],\r\n})\r\nexport class TabGroupBasicExample {}\r\n","<mat-tab-group>\r\n  <mat-tab label=\"First\"> Content 1 </mat-tab>\r\n  <mat-tab label=\"Second\"> Content 2 </mat-tab>\r\n  <mat-tab label=\"Third\"> Content 3 </mat-tab>\r\n</mat-tab-group>\r\n","import {Component} from '@angular/core';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\n\r\n/**\r\n * @title Using tabs with a custom label template\r\n */\r\n@Component({\r\n  selector: 'tab-group-custom-label-example',\r\n  templateUrl: 'tab-group-custom-label-example.html',\r\n  styleUrls: ['tab-group-custom-label-example.css'],\r\n  standalone: true,\r\n  imports: [MatTabsModule, MatIconModule],\r\n})\r\nexport class TabGroupCustomLabelExample {}\r\n","<mat-tab-group>\r\n  <mat-tab>\r\n<!-- #docregion label-directive -->\r\n    <ng-template mat-tab-label>\r\n      <mat-icon class=\"example-tab-icon\">thumb_up</mat-icon>\r\n      First\r\n    </ng-template>\r\n<!-- #enddocregion label-directive -->\r\n    Content 1\r\n  </mat-tab>\r\n\r\n  <mat-tab>\r\n    <ng-template mat-tab-label>\r\n      <mat-icon class=\"example-tab-icon\">thumb_up</mat-icon>\r\n      Second\r\n    </ng-template>\r\n    Content 2\r\n  </mat-tab>\r\n\r\n  <mat-tab>\r\n    <ng-template mat-tab-label>\r\n      <mat-icon class=\"example-tab-icon\">thumb_up</mat-icon>\r\n      Third\r\n    </ng-template>\r\n\r\n    Content 3\r\n  </mat-tab>\r\n</mat-tab-group>\r\n","import {Component} from '@angular/core';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\n\r\n/**\r\n * @title Tab group with dynamic height based on tab contents\r\n */\r\n@Component({\r\n  selector: 'tab-group-dynamic-height-example',\r\n  templateUrl: 'tab-group-dynamic-height-example.html',\r\n  styleUrls: ['tab-group-dynamic-height-example.css'],\r\n  standalone: true,\r\n  imports: [MatTabsModule],\r\n})\r\nexport class TabGroupDynamicHeightExample {}\r\n","<!-- #docregion dynamic-height -->\r\n<mat-tab-group dynamicHeight>\r\n<!-- #enddocregion dynamic-height -->\r\n  <mat-tab label=\"Short tab\">\r\n    <div class=\"example-small-box mat-elevation-z4\">\r\n      Small content\r\n    </div>\r\n  </mat-tab>\r\n  <mat-tab label=\"Long tab\">\r\n    <div class=\"example-large-box mat-elevation-z4\">\r\n      Large content\r\n    </div>\r\n  </mat-tab>\r\n</mat-tab-group>\r\n","import {Component} from '@angular/core';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\n\r\n/**\r\n * @title Testing with MatTabGroupHarness\r\n */\r\n@Component({\r\n  selector: 'tab-group-harness-example',\r\n  templateUrl: 'tab-group-harness-example.html',\r\n  standalone: true,\r\n  imports: [MatTabsModule],\r\n})\r\nexport class TabGroupHarnessExample {}\r\n","<mat-tab-group>\r\n  <mat-tab label=\"Profile\" aria-label=\"Profile tab\">\r\n    <span class=\"test-tab-content\">Your personal information</span>\r\n  </mat-tab>\r\n  <mat-tab label=\"Settings\" aria-label=\"Settings tab\">\r\n    <span class=\"test-tab-content\">Privacy settings</span>\r\n  </mat-tab>\r\n  <mat-tab label=\"FAQ\" aria-label=\"FAQ tab\">\r\n    <span class=\"test-tab-content\">How to update profile picture</span>\r\n  </mat-tab>\r\n</mat-tab-group>\r\n","import {Component} from '@angular/core';\r\nimport {FormControl, FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\n\r\n/**\r\n * @title Tab group with dynamically changing tabs\r\n */\r\n@Component({\r\n  selector: 'tab-group-dynamic-example',\r\n  templateUrl: 'tab-group-dynamic-example.html',\r\n  styleUrls: ['tab-group-dynamic-example.css'],\r\n  standalone: true,\r\n  imports: [\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatButtonModule,\r\n    MatCheckboxModule,\r\n    MatTabsModule,\r\n  ],\r\n})\r\nexport class TabGroupDynamicExample {\r\n  tabs = ['First', 'Second', 'Third'];\r\n  selected = new FormControl(0);\r\n\r\n  addTab(selectAfterAdding: boolean) {\r\n    this.tabs.push('New');\r\n\r\n    if (selectAfterAdding) {\r\n      this.selected.setValue(this.tabs.length - 1);\r\n    }\r\n  }\r\n\r\n  removeTab(index: number) {\r\n    this.tabs.splice(index, 1);\r\n  }\r\n}\r\n","<mat-form-field>\r\n  <mat-label>Selected tab index</mat-label>\r\n  <input matInput type=\"number\" [formControl]=\"selected\">\r\n</mat-form-field>\r\n\r\n<div>\r\n  <button mat-raised-button\r\n          class=\"example-add-tab-button\"\r\n          (click)=\"addTab(selectAfterAdding.checked)\">\r\n    Add new tab\r\n  </button>\r\n  <mat-checkbox #selectAfterAdding> Select tab after adding </mat-checkbox>\r\n</div>\r\n\r\n<mat-tab-group [selectedIndex]=\"selected.value\"\r\n               (selectedIndexChange)=\"selected.setValue($event)\">\r\n  @for (tab of tabs; track tab; let index = $index) {\r\n    <mat-tab [label]=\"tab\">\r\n      Contents for {{tab}} tab\r\n\r\n      <button mat-raised-button\r\n              class=\"example-delete-tab-button\"\r\n              [disabled]=\"tabs.length === 1\"\r\n              (click)=\"removeTab(index)\">\r\n        Delete Tab\r\n      </button>\r\n    </mat-tab>\r\n  }\r\n</mat-tab-group>\r\n","import {Component} from '@angular/core';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\n\r\n/**\r\n * @title Tab group with the headers on the bottom\r\n */\r\n@Component({\r\n  selector: 'tab-group-header-below-example',\r\n  templateUrl: 'tab-group-header-below-example.html',\r\n  standalone: true,\r\n  imports: [MatTabsModule],\r\n})\r\nexport class TabGroupHeaderBelowExample {}\r\n","<mat-tab-group headerPosition=\"below\">\r\n  <mat-tab label=\"First\"> Content 1 </mat-tab>\r\n  <mat-tab label=\"Second\"> Content 2 </mat-tab>\r\n  <mat-tab label=\"Third\"> Content 3 </mat-tab>\r\n</mat-tab-group>\r\n","import {Component} from '@angular/core';\r\nimport {DatePipe} from '@angular/common';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\n\r\n/**\r\n * @title Tab group where the tab content is loaded lazily (when activated)\r\n */\r\n@Component({\r\n  selector: 'tab-group-lazy-loaded-example',\r\n  templateUrl: 'tab-group-lazy-loaded-example.html',\r\n  standalone: true,\r\n  imports: [MatTabsModule, DatePipe],\r\n})\r\nexport class TabGroupLazyLoadedExample {\r\n  tabLoadTimes: Date[] = [];\r\n\r\n  getTimeLoaded(index: number) {\r\n    if (!this.tabLoadTimes[index]) {\r\n      this.tabLoadTimes[index] = new Date();\r\n    }\r\n\r\n    return this.tabLoadTimes[index];\r\n  }\r\n}\r\n","<mat-tab-group>\r\n<!-- #docregion mat-tab-content -->\r\n  <mat-tab label=\"First\">\r\n    <ng-template matTabContent>\r\n      Content 1 - Loaded: {{getTimeLoaded(1) | date:'medium'}}\r\n    </ng-template>\r\n  </mat-tab>\r\n<!-- #enddocregion mat-tab-content -->\r\n  <mat-tab label=\"Second\">\r\n    <ng-template matTabContent>\r\n      Content 2 - Loaded: {{getTimeLoaded(2) | date:'medium'}}\r\n    </ng-template>\r\n  </mat-tab>\r\n  <mat-tab label=\"Third\">\r\n    <ng-template matTabContent>\r\n      Content 3 - Loaded: {{getTimeLoaded(3) | date:'medium'}}\r\n    </ng-template>\r\n  </mat-tab>\r\n</mat-tab-group>\r\n","import {Component} from '@angular/core';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\n\r\n/**\r\n * @title Tab group that keeps its content inside the DOM when it's off-screen.\r\n */\r\n@Component({\r\n  selector: 'tab-group-preserve-content-example',\r\n  templateUrl: 'tab-group-preserve-content-example.html',\r\n  standalone: true,\r\n  imports: [MatTabsModule],\r\n})\r\nexport class TabGroupPreserveContentExample {}\r\n","<p>Start the video in the first tab and navigate to the second one to see how it keeps playing.</p>\r\n\r\n<mat-tab-group preserveContent>\r\n  <mat-tab label=\"First\">\r\n    <iframe\r\n      width=\"560\"\r\n      height=\"315\"\r\n      src=\"https://www.youtube.com/embed/B-lipaiZII8\"\r\n      style=\"border: 0\"\r\n      allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\r\n      allowfullscreen></iframe>\r\n  </mat-tab>\r\n  <mat-tab label=\"Second\">Note how the video from the previous tab is still playing.</mat-tab>\r\n</mat-tab-group>\r\n","import {Component} from '@angular/core';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\n\r\n/**\r\n * @title Tab group with stretched labels\r\n */\r\n@Component({\r\n  selector: 'tab-group-stretched-example',\r\n  templateUrl: 'tab-group-stretched-example.html',\r\n  styleUrls: ['tab-group-stretched-example.css'],\r\n  standalone: true,\r\n  imports: [MatTabsModule],\r\n})\r\nexport class TabGroupStretchedExample {}\r\n","<mat-tab-group mat-stretch-tabs class=\"example-stretched-tabs mat-elevation-z4\">\r\n  <mat-tab label=\"First\"> Content 1 </mat-tab>\r\n  <mat-tab label=\"Second\"> Content 2 </mat-tab>\r\n  <mat-tab label=\"Third\"> Content 3 </mat-tab>\r\n</mat-tab-group>\r\n","import {Component} from '@angular/core';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\r\n\r\n/**\r\n * @title Customizing the theme options on the tab group\r\n */\r\n@Component({\r\n  selector: 'tab-group-theme-example',\r\n  templateUrl: 'tab-group-theme-example.html',\r\n  styleUrls: ['tab-group-theme-example.css'],\r\n  standalone: true,\r\n  imports: [MatButtonToggleModule, MatTabsModule],\r\n})\r\nexport class TabGroupThemeExample {}\r\n","<div>\r\n  <mat-button-toggle-group #colorToggle=\"matButtonToggleGroup\"\r\n                           value=\"primary\"\r\n                           aria-label=\"Change color\">\r\n    <mat-button-toggle value=\"primary\">Primary</mat-button-toggle>\r\n    <mat-button-toggle value=\"accent\">Accent</mat-button-toggle>\r\n    <mat-button-toggle value=\"warn\">Warn</mat-button-toggle>\r\n  </mat-button-toggle-group>\r\n  <span class=\"example-button-toggle-label\">Color</span>\r\n</div>\r\n\r\n<div>\r\n  <mat-button-toggle-group #backgroundColorToggle=\"matButtonToggleGroup\"\r\n                           value=\"primary\"\r\n                           aria-label=\"Change color\">\r\n    <mat-button-toggle value=\"primary\">Primary</mat-button-toggle>\r\n    <mat-button-toggle value=\"accent\">Accent</mat-button-toggle>\r\n    <mat-button-toggle value=\"warn\">Warn</mat-button-toggle>\r\n  </mat-button-toggle-group>\r\n  <span class=\"example-button-toggle-label\">Background Color</span>\r\n</div>\r\n\r\n<mat-tab-group [color]=\"colorToggle.value\" [backgroundColor]=\"backgroundColorToggle.value\">\r\n  <mat-tab label=\"First\">Content 1</mat-tab>\r\n  <mat-tab label=\"Second\">Content 2</mat-tab>\r\n  <mat-tab label=\"Third\">Content 3</mat-tab>\r\n</mat-tab-group>\r\n","import {Component} from '@angular/core';\r\nimport {ThemePalette} from '@angular/material/core';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\n\r\n/**\r\n * @title Basic use of the tab nav bar\r\n */\r\n@Component({\r\n  selector: 'tab-nav-bar-basic-example',\r\n  templateUrl: 'tab-nav-bar-basic-example.html',\r\n  styleUrls: ['tab-nav-bar-basic-example.css'],\r\n  standalone: true,\r\n  imports: [MatTabsModule, MatButtonModule],\r\n})\r\nexport class TabNavBarBasicExample {\r\n  links = ['First', 'Second', 'Third'];\r\n  activeLink = this.links[0];\r\n  background: ThemePalette = undefined;\r\n\r\n  toggleBackground() {\r\n    this.background = this.background ? undefined : 'primary';\r\n  }\r\n\r\n  addLink() {\r\n    this.links.push(`Link ${this.links.length + 1}`);\r\n  }\r\n}\r\n","<!-- #docregion mat-tab-nav -->\r\n<nav mat-tab-nav-bar [backgroundColor]=\"background\" [tabPanel]=\"tabPanel\">\r\n  @for (link of links; track link) {\r\n    <a mat-tab-link\r\n      (click)=\"activeLink = link\"\r\n      [active]=\"activeLink == link\"> {{link}} </a>\r\n  }\r\n  <a mat-tab-link disabled>Disabled Link</a>\r\n</nav>\r\n<mat-tab-nav-panel #tabPanel></mat-tab-nav-panel>\r\n<!-- #enddocregion mat-tab-nav -->\r\n\r\n<button mat-raised-button class=\"example-action-button\" (click)=\"toggleBackground()\">\r\n  Toggle background\r\n</button>\r\n<button mat-raised-button class=\"example-action-button\" (click)=\"addLink()\">\r\n  Add link\r\n</button>\r\n","import {Component} from '@angular/core';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\n\r\n/**\r\n * @title Tab group with paginated tabs\r\n */\r\n@Component({\r\n  selector: 'tab-group-paginated-example',\r\n  templateUrl: 'tab-group-paginated-example.html',\r\n  standalone: true,\r\n  imports: [MatTabsModule],\r\n})\r\nexport class TabGroupPaginatedExample {\r\n  lotsOfTabs = new Array(30).fill(0).map((_, index) => `Tab ${index}`);\r\n}\r\n","<mat-tab-group>\r\n  @for (tab of lotsOfTabs; track tab) {\r\n    <mat-tab [label]=\"tab\">Content</mat-tab>\r\n  }\r\n</mat-tab-group>\r\n","import {Component} from '@angular/core';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\n\r\n/**\r\n * @title Tab group with inverted tabs\r\n */\r\n@Component({\r\n  selector: 'tab-group-inverted-example',\r\n  templateUrl: 'tab-group-inverted-example.html',\r\n  standalone: true,\r\n  imports: [MatTabsModule],\r\n})\r\nexport class TabGroupInvertedExample {}\r\n","<mat-tab-group headerPosition=\"below\">\r\n  <mat-tab label=\"First\">Content 1</mat-tab>\r\n  <mat-tab label=\"Second\">Content 2</mat-tab>\r\n  <mat-tab label=\"Third\">Content 3</mat-tab>\r\n</mat-tab-group>","import {Component} from '@angular/core';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\n\r\n/**\r\n * @title Tab group with ink bar fit to content\r\n */\r\n@Component({\r\n  selector: 'tab-group-ink-bar-example',\r\n  templateUrl: 'tab-group-ink-bar-example.html',\r\n  standalone: true,\r\n  imports: [MatTabsModule],\r\n})\r\nexport class TabGroupInkBarExample {}\r\n","<mat-tab-group fitInkBarToContent>\r\n  <mat-tab label=\"First\">Content 1</mat-tab>\r\n  <mat-tab label=\"Second\">Content 2</mat-tab>\r\n  <mat-tab label=\"Third\">Content 3</mat-tab>\r\n  <mat-tab label=\"Fourth\" disabled>Content 4</mat-tab>\r\n</mat-tab-group>\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["i2","i6"],"mappings":"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"}