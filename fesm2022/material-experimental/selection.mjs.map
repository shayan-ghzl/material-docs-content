{"version":3,"file":"selection.mjs","sources":["../../../../../../../src/components-examples/material-experimental/selection/mat-selection-column/mat-selection-column-example.ts","../../../../../../../src/components-examples/material-experimental/selection/mat-selection-column/mat-selection-column-example.html","../../../../../../../src/components-examples/material-experimental/selection/mat-selection-list/mat-selection-list-example.ts","../../../../../../../src/components-examples/material-experimental/selection/mat-selection-list/mat-selection-list-example.html","../../../../../../../src/components-examples/material-experimental/selection/selection_public_index.ts"],"sourcesContent":["import {Component} from '@angular/core';\r\nimport {SelectionChange, MatSelectionModule} from '@angular/material-experimental/selection';\r\nimport {MatTableModule} from '@angular/material/table';\r\n\r\n/**\r\n * @title Table that uses `matSelectionColumn` which allows users to select rows.\r\n */\r\n@Component({\r\n  selector: 'mat-selection-column-example',\r\n  templateUrl: 'mat-selection-column-example.html',\r\n  styleUrls: ['mat-selection-column-example.css'],\r\n  standalone: true,\r\n  imports: [MatTableModule, MatSelectionModule],\r\n})\r\nexport class MatSelectionColumnExample {\r\n  displayedColumns: string[] = ['select', 'position', 'name', 'weight', 'symbol'];\r\n  dataSource = ELEMENT_DATA;\r\n  selected: string[] = [];\r\n\r\n  selectionChanged(event: SelectionChange<PeriodicElement>) {\r\n    this.selected = event.after.map(select => select.value.name);\r\n  }\r\n}\r\n\r\ninterface PeriodicElement {\r\n  name: string;\r\n  position: number;\r\n  weight: number;\r\n  symbol: string;\r\n}\r\n\r\nconst ELEMENT_DATA: PeriodicElement[] = [\r\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\r\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\r\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\r\n  {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\r\n  {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\r\n  {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\r\n  {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\r\n  {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\r\n  {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\r\n  {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\r\n  {position: 11, name: 'Sodium', weight: 22.9897, symbol: 'Na'},\r\n  {position: 12, name: 'Magnesium', weight: 24.305, symbol: 'Mg'},\r\n  {position: 13, name: 'Aluminum', weight: 26.9815, symbol: 'Al'},\r\n  {position: 14, name: 'Silicon', weight: 28.0855, symbol: 'Si'},\r\n  {position: 15, name: 'Phosphorus', weight: 30.9738, symbol: 'P'},\r\n  {position: 16, name: 'Sulfur', weight: 32.065, symbol: 'S'},\r\n  {position: 17, name: 'Chlorine', weight: 35.453, symbol: 'Cl'},\r\n  {position: 18, name: 'Argon', weight: 39.948, symbol: 'Ar'},\r\n  {position: 19, name: 'Potassium', weight: 39.0983, symbol: 'K'},\r\n  {position: 20, name: 'Calcium', weight: 40.078, symbol: 'Ca'},\r\n];\r\n","Selected: {{selected}}\r\n<table class=\"example-table\" mat-table [dataSource]=\"dataSource\" matSelection [matSelectionMultiple]=\"true\" (matSelectionChange)=\"selectionChanged($event)\">\r\n    <mat-selection-column name=\"select\"></mat-selection-column>\r\n    <!-- Position Column -->\r\n    <ng-container matColumnDef=\"position\">\r\n      <th mat-header-cell *matHeaderCellDef> No. </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.position}} </td>\r\n    </ng-container>\r\n\r\n    <!-- Name Column -->\r\n    <ng-container matColumnDef=\"name\">\r\n      <th mat-header-cell *matHeaderCellDef> Name </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\r\n    </ng-container>\r\n\r\n    <!-- Weight Column -->\r\n    <ng-container matColumnDef=\"weight\">\r\n      <th mat-header-cell *matHeaderCellDef> Weight </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.weight}} </td>\r\n    </ng-container>\r\n\r\n    <!-- Symbol Column -->\r\n    <ng-container matColumnDef=\"symbol\">\r\n      <th mat-header-cell *matHeaderCellDef> Symbol </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.symbol}} </td>\r\n    </ng-container>\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" matRowSelection [matRowSelectionValue]=\"row\"></tr>\r\n</table>\r\n","import {SelectionChange} from '@angular/cdk-experimental/selection';\r\nimport {Component} from '@angular/core';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {AsyncPipe} from '@angular/common';\r\nimport {MatSelectionModule} from '@angular/material-experimental/selection';\r\n\r\n/**\r\n * @title Mat Selection on a simple list.\r\n */\r\n@Component({\r\n  selector: 'mat-selection-list-example',\r\n  templateUrl: 'mat-selection-list-example.html',\r\n  standalone: true,\r\n  imports: [MatSelectionModule, MatCheckboxModule, AsyncPipe],\r\n})\r\nexport class MatSelectionListExample {\r\n  data = ELEMENT_NAMES;\r\n  selected1: string[] = [];\r\n  selected2: string[] = [];\r\n  selected3: string[] = [];\r\n  selected4: string[] = [];\r\n\r\n  getCurrentSelected(event: SelectionChange<string>) {\r\n    return event.after.map(select => select.value);\r\n  }\r\n\r\n  trackByFn(index: number, value: string) {\r\n    return index;\r\n  }\r\n\r\n  changeElementName() {\r\n    this.data = ELEMENT_SYMBOLS;\r\n  }\r\n\r\n  reset() {\r\n    this.data = ELEMENT_NAMES;\r\n  }\r\n}\r\n\r\nconst ELEMENT_NAMES = [\r\n  'Hydrogen',\r\n  'Helium',\r\n  'Lithium',\r\n  'Beryllium',\r\n  'Boron',\r\n  'Carbon',\r\n  'Nitrogen',\r\n  'Oxygen',\r\n  'Fluorine',\r\n  'Neon',\r\n  'Sodium',\r\n  'Magnesium',\r\n  'Aluminum',\r\n  'Silicon',\r\n  'Phosphorus',\r\n  'Sulfur',\r\n  'Chlorine',\r\n  'Argon',\r\n  'Potassium',\r\n  'Calcium',\r\n];\r\n\r\nconst ELEMENT_SYMBOLS = [\r\n  'H',\r\n  'He',\r\n  'Li',\r\n  'Be',\r\n  'B',\r\n  'C',\r\n  'N',\r\n  'O',\r\n  'F',\r\n  'Ne',\r\n  'Na',\r\n  'Mg',\r\n  'Al',\r\n  'Si',\r\n  'P',\r\n  'S',\r\n  'Cl',\r\n  'Ar',\r\n  'K',\r\n  'Ca',\r\n];\r\n","<h3><code>native input</code></h3>\r\nSelected: {{selected1}}\r\n<ul matSelection [dataSource]=\"data\" [matSelectionMultiple]=\"true\" (matSelectionChange)=\"selected1 = getCurrentSelected($event)\">\r\n  <input type=\"checkbox\" matSelectAll #allToggler=\"matSelectAll\"\r\n      [checked]=\"allToggler.checked | async\"\r\n      [indeterminate]=\"allToggler.indeterminate | async\"\r\n      (click)=\"allToggler.toggle($event)\">\r\n  @for (item of data; track item) {\r\n    <li>\r\n      <input type=\"checkbox\" matSelectionToggle #toggler=\"matSelectionToggle\" [matSelectionToggleValue]=\"item\"\r\n        [checked]=\"toggler.checked | async\" (click)=\"toggler.toggle()\">\r\n      {{item}}\r\n    </li>\r\n  }\r\n</ul>\r\n\r\n<h3><code>mat-checkbox</code></h3>\r\nSelected: {{selected2}}\r\n<ul matSelection [dataSource]=\"data\" [matSelectionMultiple]=\"true\" (matSelectionChange)=\"selected2 = getCurrentSelected($event)\">\r\n  <mat-checkbox matSelectAll #toggle1=\"matSelectAll\" [indeterminate]=\"toggle1.indeterminate | async\"></mat-checkbox>\r\n  @for (item of data; track item) {\r\n  <li>\r\n    <mat-checkbox matSelectionToggle [matSelectionToggleValue]=\"item\"></mat-checkbox>\r\n    {{item}}\r\n  </li>\r\n}\r\n</ul>\r\n\r\n<h3><code>Single select with mat-checkbox</code></h3>\r\nSelected: {{selected3}}\r\n<ul matSelection [dataSource]=\"data\" [matSelectionMultiple]=\"false\" (matSelectionChange)=\"selected3 = getCurrentSelected($event)\">\r\n  @for (item of data; track item) {\r\n    <li>\r\n      <mat-checkbox matSelectionToggle [matSelectionToggleValue]=\"item\"></mat-checkbox>\r\n      {{item}}\r\n    </li>\r\n  }\r\n</ul>\r\n\r\n<h3><code>with trackBy</code></h3>\r\nSelected: {{selected4}}\r\n<ul matSelection [dataSource]=\"data\" [matSelectionMultiple]=\"true\" [trackBy]=\"trackByFn\" (matSelectionChange)=\"selected4 = getCurrentSelected($event)\">\r\n  <mat-checkbox matSelectAll #toggle2=\"matSelectAll\" [indeterminate]=\"toggle2.indeterminate | async\"></mat-checkbox>\r\n  @for (item of data; track trackByFn(i, item); let i = $index) {\r\n    <li>\r\n      <mat-checkbox matSelectionToggle [matSelectionToggleValue]=\"item\" [matSelectionToggleIndex]=\"i\"></mat-checkbox>\r\n      {{item}}\r\n    </li>\r\n  }\r\n</ul>\r\n\r\n<button (click)=\"changeElementName()\">Change element names and the already selected stays</button>\r\n<button (click)=\"reset()\">reset</button>\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["i1"],"mappings":"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"}