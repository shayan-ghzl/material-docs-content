import { Component } from '@angular/core';
import { MatIconModule } from '@angular/material/icon';
import { MatChipsModule } from '@angular/material/chips';
import * as i0 from "@angular/core";
import * as i1 from "@angular/material/chips";
import * as i2 from "@angular/material/icon";
/**
 * @title Testing with MatChipsHarness
 */
export class ChipsHarnessExample {
    constructor() {
        this.isDisabled = false;
        this.remove = jasmine.createSpy('remove spy');
        this.add = jasmine.createSpy('add spy');
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.0.4", ngImport: i0, type: ChipsHarnessExample, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "17.0.4", type: ChipsHarnessExample, isStandalone: true, selector: "chips-harness-example", ngImport: i0, template: "<mat-chip-listbox\r\n    [disabled]=\"isDisabled\"\r\n    [aria-orientation]=\"'horizontal'\">\r\n  <mat-chip-option (removed)=\"remove()\">Chip 1</mat-chip-option>\r\n  <mat-chip-option (removed)=\"remove()\">\r\n    Chip 2\r\n    <button matChipRemove aria-label=\"remove Chip 2\"><mat-icon>remove_icon</mat-icon></button>\r\n  </mat-chip-option>\r\n  <mat-chip-option (removed)=\"remove()\"><mat-chip-avatar>C</mat-chip-avatar>Chip 4</mat-chip-option>\r\n</mat-chip-listbox>", dependencies: [{ kind: "ngmodule", type: MatChipsModule }, { kind: "directive", type: i1.MatChipAvatar, selector: "mat-chip-avatar, [matChipAvatar]" }, { kind: "component", type: i1.MatChipListbox, selector: "mat-chip-listbox", inputs: ["multiple", "aria-orientation", "selectable", "compareWith", "required", "hideSingleSelectionIndicator", "value"], outputs: ["change"] }, { kind: "component", type: i1.MatChipOption, selector: "mat-basic-chip-option, [mat-basic-chip-option], mat-chip-option, [mat-chip-option]", inputs: ["selectable", "selected"], outputs: ["selectionChange"] }, { kind: "directive", type: i1.MatChipRemove, selector: "[matChipRemove]" }, { kind: "ngmodule", type: MatIconModule }, { kind: "component", type: i2.MatIcon, selector: "mat-icon", inputs: ["color", "inline", "svgIcon", "fontSet", "fontIcon"], exportAs: ["matIcon"] }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.0.4", ngImport: i0, type: ChipsHarnessExample, decorators: [{
            type: Component,
            args: [{ selector: 'chips-harness-example', standalone: true, imports: [MatChipsModule, MatIconModule], template: "<mat-chip-listbox\r\n    [disabled]=\"isDisabled\"\r\n    [aria-orientation]=\"'horizontal'\">\r\n  <mat-chip-option (removed)=\"remove()\">Chip 1</mat-chip-option>\r\n  <mat-chip-option (removed)=\"remove()\">\r\n    Chip 2\r\n    <button matChipRemove aria-label=\"remove Chip 2\"><mat-icon>remove_icon</mat-icon></button>\r\n  </mat-chip-option>\r\n  <mat-chip-option (removed)=\"remove()\"><mat-chip-avatar>C</mat-chip-avatar>Chip 4</mat-chip-option>\r\n</mat-chip-listbox>" }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hpcHMtaGFybmVzcy1leGFtcGxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMtZXhhbXBsZXMvbWF0ZXJpYWwvY2hpcHMvY2hpcHMtaGFybmVzcy9jaGlwcy1oYXJuZXNzLWV4YW1wbGUudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9zcmMvY29tcG9uZW50cy1leGFtcGxlcy9tYXRlcmlhbC9jaGlwcy9jaGlwcy1oYXJuZXNzL2NoaXBzLWhhcm5lc3MtZXhhbXBsZS5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBQyxTQUFTLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDeEMsT0FBTyxFQUFDLGFBQWEsRUFBQyxNQUFNLHdCQUF3QixDQUFDO0FBQ3JELE9BQU8sRUFBQyxjQUFjLEVBQUMsTUFBTSx5QkFBeUIsQ0FBQzs7OztBQUV2RDs7R0FFRztBQU9ILE1BQU0sT0FBTyxtQkFBbUI7SUFOaEM7UUFPRSxlQUFVLEdBQUcsS0FBSyxDQUFDO1FBQ25CLFdBQU0sR0FBZSxPQUFPLENBQUMsU0FBUyxDQUFDLFlBQVksQ0FBQyxDQUFDO1FBQ3JELFFBQUcsR0FBZSxPQUFPLENBQUMsU0FBUyxDQUFDLFNBQVMsQ0FBQyxDQUFDO0tBQ2hEOzhHQUpZLG1CQUFtQjtrR0FBbkIsbUJBQW1CLGlGQ2JoQywrZEFTbUIsMkNERVAsY0FBYyx1bkJBQUUsYUFBYTs7MkZBRTVCLG1CQUFtQjtrQkFOL0IsU0FBUzsrQkFDRSx1QkFBdUIsY0FFckIsSUFBSSxXQUNQLENBQUMsY0FBYyxFQUFFLGFBQWEsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q29tcG9uZW50fSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHtNYXRJY29uTW9kdWxlfSBmcm9tICdAYW5ndWxhci9tYXRlcmlhbC9pY29uJztcclxuaW1wb3J0IHtNYXRDaGlwc01vZHVsZX0gZnJvbSAnQGFuZ3VsYXIvbWF0ZXJpYWwvY2hpcHMnO1xyXG5cclxuLyoqXHJcbiAqIEB0aXRsZSBUZXN0aW5nIHdpdGggTWF0Q2hpcHNIYXJuZXNzXHJcbiAqL1xyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ2NoaXBzLWhhcm5lc3MtZXhhbXBsZScsXHJcbiAgdGVtcGxhdGVVcmw6ICdjaGlwcy1oYXJuZXNzLWV4YW1wbGUuaHRtbCcsXHJcbiAgc3RhbmRhbG9uZTogdHJ1ZSxcclxuICBpbXBvcnRzOiBbTWF0Q2hpcHNNb2R1bGUsIE1hdEljb25Nb2R1bGVdLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgQ2hpcHNIYXJuZXNzRXhhbXBsZSB7XHJcbiAgaXNEaXNhYmxlZCA9IGZhbHNlO1xyXG4gIHJlbW92ZTogKCkgPT4gdm9pZCA9IGphc21pbmUuY3JlYXRlU3B5KCdyZW1vdmUgc3B5Jyk7XHJcbiAgYWRkOiAoKSA9PiB2b2lkID0gamFzbWluZS5jcmVhdGVTcHkoJ2FkZCBzcHknKTtcclxufVxyXG4iLCI8bWF0LWNoaXAtbGlzdGJveFxyXG4gICAgW2Rpc2FibGVkXT1cImlzRGlzYWJsZWRcIlxyXG4gICAgW2FyaWEtb3JpZW50YXRpb25dPVwiJ2hvcml6b250YWwnXCI+XHJcbiAgPG1hdC1jaGlwLW9wdGlvbiAocmVtb3ZlZCk9XCJyZW1vdmUoKVwiPkNoaXAgMTwvbWF0LWNoaXAtb3B0aW9uPlxyXG4gIDxtYXQtY2hpcC1vcHRpb24gKHJlbW92ZWQpPVwicmVtb3ZlKClcIj5cclxuICAgIENoaXAgMlxyXG4gICAgPGJ1dHRvbiBtYXRDaGlwUmVtb3ZlIGFyaWEtbGFiZWw9XCJyZW1vdmUgQ2hpcCAyXCI+PG1hdC1pY29uPnJlbW92ZV9pY29uPC9tYXQtaWNvbj48L2J1dHRvbj5cclxuICA8L21hdC1jaGlwLW9wdGlvbj5cclxuICA8bWF0LWNoaXAtb3B0aW9uIChyZW1vdmVkKT1cInJlbW92ZSgpXCI+PG1hdC1jaGlwLWF2YXRhcj5DPC9tYXQtY2hpcC1hdmF0YXI+Q2hpcCA0PC9tYXQtY2hpcC1vcHRpb24+XHJcbjwvbWF0LWNoaXAtbGlzdGJveD4iXX0=