import { Component } from '@angular/core';
import { MatExpansionModule } from '@angular/material/expansion';
import * as i0 from "@angular/core";
import * as i1 from "@angular/material/expansion";
/**
 * @title Basic expansion panel
 */
export class ExpansionOverviewExample {
    constructor() {
        this.panelOpenState = false;
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.0.4", ngImport: i0, type: ExpansionOverviewExample, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "17.0.4", type: ExpansionOverviewExample, isStandalone: true, selector: "expansion-overview-example", ngImport: i0, template: "<mat-accordion>\r\n<!-- #docregion basic-panel -->\r\n<!-- #docregion hide-toggle -->\r\n  <mat-expansion-panel hideToggle>\r\n<!-- #enddocregion hide-toggle -->\r\n    <mat-expansion-panel-header>\r\n      <mat-panel-title>\r\n        This is the expansion title\r\n      </mat-panel-title>\r\n      <mat-panel-description>\r\n        This is a summary of the content\r\n      </mat-panel-description>\r\n    </mat-expansion-panel-header>\r\n    <p>This is the primary content of the panel.</p>\r\n  </mat-expansion-panel>\r\n<!-- #enddocregion basic-panel -->\r\n  <mat-expansion-panel (opened)=\"panelOpenState = true\"\r\n                       (closed)=\"panelOpenState = false\">\r\n    <mat-expansion-panel-header>\r\n      <mat-panel-title>\r\n        Self aware panel\r\n      </mat-panel-title>\r\n      <mat-panel-description>\r\n        Currently I am {{panelOpenState ? 'open' : 'closed'}}\r\n      </mat-panel-description>\r\n    </mat-expansion-panel-header>\r\n    <p>I'm visible because I am open</p>\r\n  </mat-expansion-panel>\r\n</mat-accordion>\r\n", dependencies: [{ kind: "ngmodule", type: MatExpansionModule }, { kind: "directive", type: i1.MatAccordion, selector: "mat-accordion", inputs: ["multi", "hideToggle", "displayMode", "togglePosition"], exportAs: ["matAccordion"] }, { kind: "component", type: i1.MatExpansionPanel, selector: "mat-expansion-panel", inputs: ["disabled", "expanded", "hideToggle", "togglePosition"], outputs: ["opened", "closed", "expandedChange", "afterExpand", "afterCollapse"], exportAs: ["matExpansionPanel"] }, { kind: "component", type: i1.MatExpansionPanelHeader, selector: "mat-expansion-panel-header", inputs: ["expandedHeight", "collapsedHeight", "tabIndex"] }, { kind: "directive", type: i1.MatExpansionPanelTitle, selector: "mat-panel-title" }, { kind: "directive", type: i1.MatExpansionPanelDescription, selector: "mat-panel-description" }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.0.4", ngImport: i0, type: ExpansionOverviewExample, decorators: [{
            type: Component,
            args: [{ selector: 'expansion-overview-example', standalone: true, imports: [MatExpansionModule], template: "<mat-accordion>\r\n<!-- #docregion basic-panel -->\r\n<!-- #docregion hide-toggle -->\r\n  <mat-expansion-panel hideToggle>\r\n<!-- #enddocregion hide-toggle -->\r\n    <mat-expansion-panel-header>\r\n      <mat-panel-title>\r\n        This is the expansion title\r\n      </mat-panel-title>\r\n      <mat-panel-description>\r\n        This is a summary of the content\r\n      </mat-panel-description>\r\n    </mat-expansion-panel-header>\r\n    <p>This is the primary content of the panel.</p>\r\n  </mat-expansion-panel>\r\n<!-- #enddocregion basic-panel -->\r\n  <mat-expansion-panel (opened)=\"panelOpenState = true\"\r\n                       (closed)=\"panelOpenState = false\">\r\n    <mat-expansion-panel-header>\r\n      <mat-panel-title>\r\n        Self aware panel\r\n      </mat-panel-title>\r\n      <mat-panel-description>\r\n        Currently I am {{panelOpenState ? 'open' : 'closed'}}\r\n      </mat-panel-description>\r\n    </mat-expansion-panel-header>\r\n    <p>I'm visible because I am open</p>\r\n  </mat-expansion-panel>\r\n</mat-accordion>\r\n" }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXhwYW5zaW9uLW92ZXJ2aWV3LWV4YW1wbGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9zcmMvY29tcG9uZW50cy1leGFtcGxlcy9tYXRlcmlhbC9leHBhbnNpb24vZXhwYW5zaW9uLW92ZXJ2aWV3L2V4cGFuc2lvbi1vdmVydmlldy1leGFtcGxlLnRzIiwiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMtZXhhbXBsZXMvbWF0ZXJpYWwvZXhwYW5zaW9uL2V4cGFuc2lvbi1vdmVydmlldy9leHBhbnNpb24tb3ZlcnZpZXctZXhhbXBsZS5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBQyxTQUFTLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDeEMsT0FBTyxFQUFDLGtCQUFrQixFQUFDLE1BQU0sNkJBQTZCLENBQUM7OztBQUUvRDs7R0FFRztBQU9ILE1BQU0sT0FBTyx3QkFBd0I7SUFOckM7UUFPRSxtQkFBYyxHQUFHLEtBQUssQ0FBQztLQUN4Qjs4R0FGWSx3QkFBd0I7a0dBQXhCLHdCQUF3QixzRkNackMsK2lDQTZCQSwyQ0RuQlksa0JBQWtCOzsyRkFFakIsd0JBQXdCO2tCQU5wQyxTQUFTOytCQUNFLDRCQUE0QixjQUUxQixJQUFJLFdBQ1AsQ0FBQyxrQkFBa0IsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q29tcG9uZW50fSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHtNYXRFeHBhbnNpb25Nb2R1bGV9IGZyb20gJ0Bhbmd1bGFyL21hdGVyaWFsL2V4cGFuc2lvbic7XHJcblxyXG4vKipcclxuICogQHRpdGxlIEJhc2ljIGV4cGFuc2lvbiBwYW5lbFxyXG4gKi9cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdleHBhbnNpb24tb3ZlcnZpZXctZXhhbXBsZScsXHJcbiAgdGVtcGxhdGVVcmw6ICdleHBhbnNpb24tb3ZlcnZpZXctZXhhbXBsZS5odG1sJyxcclxuICBzdGFuZGFsb25lOiB0cnVlLFxyXG4gIGltcG9ydHM6IFtNYXRFeHBhbnNpb25Nb2R1bGVdLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgRXhwYW5zaW9uT3ZlcnZpZXdFeGFtcGxlIHtcclxuICBwYW5lbE9wZW5TdGF0ZSA9IGZhbHNlO1xyXG59XHJcbiIsIjxtYXQtYWNjb3JkaW9uPlxyXG48IS0tICNkb2NyZWdpb24gYmFzaWMtcGFuZWwgLS0+XHJcbjwhLS0gI2RvY3JlZ2lvbiBoaWRlLXRvZ2dsZSAtLT5cclxuICA8bWF0LWV4cGFuc2lvbi1wYW5lbCBoaWRlVG9nZ2xlPlxyXG48IS0tICNlbmRkb2NyZWdpb24gaGlkZS10b2dnbGUgLS0+XHJcbiAgICA8bWF0LWV4cGFuc2lvbi1wYW5lbC1oZWFkZXI+XHJcbiAgICAgIDxtYXQtcGFuZWwtdGl0bGU+XHJcbiAgICAgICAgVGhpcyBpcyB0aGUgZXhwYW5zaW9uIHRpdGxlXHJcbiAgICAgIDwvbWF0LXBhbmVsLXRpdGxlPlxyXG4gICAgICA8bWF0LXBhbmVsLWRlc2NyaXB0aW9uPlxyXG4gICAgICAgIFRoaXMgaXMgYSBzdW1tYXJ5IG9mIHRoZSBjb250ZW50XHJcbiAgICAgIDwvbWF0LXBhbmVsLWRlc2NyaXB0aW9uPlxyXG4gICAgPC9tYXQtZXhwYW5zaW9uLXBhbmVsLWhlYWRlcj5cclxuICAgIDxwPlRoaXMgaXMgdGhlIHByaW1hcnkgY29udGVudCBvZiB0aGUgcGFuZWwuPC9wPlxyXG4gIDwvbWF0LWV4cGFuc2lvbi1wYW5lbD5cclxuPCEtLSAjZW5kZG9jcmVnaW9uIGJhc2ljLXBhbmVsIC0tPlxyXG4gIDxtYXQtZXhwYW5zaW9uLXBhbmVsIChvcGVuZWQpPVwicGFuZWxPcGVuU3RhdGUgPSB0cnVlXCJcclxuICAgICAgICAgICAgICAgICAgICAgICAoY2xvc2VkKT1cInBhbmVsT3BlblN0YXRlID0gZmFsc2VcIj5cclxuICAgIDxtYXQtZXhwYW5zaW9uLXBhbmVsLWhlYWRlcj5cclxuICAgICAgPG1hdC1wYW5lbC10aXRsZT5cclxuICAgICAgICBTZWxmIGF3YXJlIHBhbmVsXHJcbiAgICAgIDwvbWF0LXBhbmVsLXRpdGxlPlxyXG4gICAgICA8bWF0LXBhbmVsLWRlc2NyaXB0aW9uPlxyXG4gICAgICAgIEN1cnJlbnRseSBJIGFtIHt7cGFuZWxPcGVuU3RhdGUgPyAnb3BlbicgOiAnY2xvc2VkJ319XHJcbiAgICAgIDwvbWF0LXBhbmVsLWRlc2NyaXB0aW9uPlxyXG4gICAgPC9tYXQtZXhwYW5zaW9uLXBhbmVsLWhlYWRlcj5cclxuICAgIDxwPkknbSB2aXNpYmxlIGJlY2F1c2UgSSBhbSBvcGVuPC9wPlxyXG4gIDwvbWF0LWV4cGFuc2lvbi1wYW5lbD5cclxuPC9tYXQtYWNjb3JkaW9uPlxyXG4iXX0=