import { Component } from '@angular/core';
import { MatButtonModule } from '@angular/material/button';
import { MatStepperModule } from '@angular/material/stepper';
import * as i0 from "@angular/core";
import * as i1 from "@angular/material/stepper";
import * as i2 from "@angular/material/button";
/**
 * @title Stepper lazy content rendering
 */
export class StepperLazyContentExample {
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.0.4", ngImport: i0, type: StepperLazyContentExample, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "17.0.4", type: StepperLazyContentExample, isStandalone: true, selector: "stepper-lazy-content-example", ngImport: i0, template: "<mat-stepper orientation=\"vertical\">\r\n  <mat-step>\r\n    <ng-template matStepLabel>Step 1</ng-template>\r\n    <ng-template matStepContent>\r\n      <p>This content was rendered lazily</p>\r\n      <button mat-button matStepperNext>Next</button>\r\n    </ng-template>\r\n  </mat-step>\r\n  <mat-step>\r\n    <ng-template matStepLabel>Step 2</ng-template>\r\n    <ng-template matStepContent>\r\n      <p>This content was also rendered lazily</p>\r\n      <button mat-button matStepperPrevious>Back</button>\r\n      <button mat-button matStepperNext>Next</button>\r\n    </ng-template>\r\n  </mat-step>\r\n  <mat-step>\r\n    <ng-template matStepLabel>Step 3</ng-template>\r\n    <p>This content was rendered eagerly</p>\r\n    <button mat-button matStepperPrevious>Back</button>\r\n  </mat-step>\r\n</mat-stepper>\r\n", dependencies: [{ kind: "ngmodule", type: MatStepperModule }, { kind: "component", type: i1.MatStep, selector: "mat-step", inputs: ["color"], exportAs: ["matStep"] }, { kind: "directive", type: i1.MatStepLabel, selector: "[matStepLabel]" }, { kind: "component", type: i1.MatStepper, selector: "mat-stepper, mat-vertical-stepper, mat-horizontal-stepper, [matStepper]", inputs: ["selectedIndex", "disableRipple", "color", "labelPosition", "headerPosition", "animationDuration"], outputs: ["animationDone"], exportAs: ["matStepper", "matVerticalStepper", "matHorizontalStepper"] }, { kind: "directive", type: i1.MatStepperNext, selector: "button[matStepperNext]", inputs: ["type"] }, { kind: "directive", type: i1.MatStepperPrevious, selector: "button[matStepperPrevious]", inputs: ["type"] }, { kind: "directive", type: i1.MatStepContent, selector: "ng-template[matStepContent]" }, { kind: "ngmodule", type: MatButtonModule }, { kind: "component", type: i2.MatButton, selector: "    button[mat-button], button[mat-raised-button], button[mat-flat-button],    button[mat-stroked-button]  ", exportAs: ["matButton"] }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.0.4", ngImport: i0, type: StepperLazyContentExample, decorators: [{
            type: Component,
            args: [{ selector: 'stepper-lazy-content-example', standalone: true, imports: [MatStepperModule, MatButtonModule], template: "<mat-stepper orientation=\"vertical\">\r\n  <mat-step>\r\n    <ng-template matStepLabel>Step 1</ng-template>\r\n    <ng-template matStepContent>\r\n      <p>This content was rendered lazily</p>\r\n      <button mat-button matStepperNext>Next</button>\r\n    </ng-template>\r\n  </mat-step>\r\n  <mat-step>\r\n    <ng-template matStepLabel>Step 2</ng-template>\r\n    <ng-template matStepContent>\r\n      <p>This content was also rendered lazily</p>\r\n      <button mat-button matStepperPrevious>Back</button>\r\n      <button mat-button matStepperNext>Next</button>\r\n    </ng-template>\r\n  </mat-step>\r\n  <mat-step>\r\n    <ng-template matStepLabel>Step 3</ng-template>\r\n    <p>This content was rendered eagerly</p>\r\n    <button mat-button matStepperPrevious>Back</button>\r\n  </mat-step>\r\n</mat-stepper>\r\n" }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RlcHBlci1sYXp5LWNvbnRlbnQtZXhhbXBsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzLWV4YW1wbGVzL21hdGVyaWFsL3N0ZXBwZXIvc3RlcHBlci1sYXp5LWNvbnRlbnQvc3RlcHBlci1sYXp5LWNvbnRlbnQtZXhhbXBsZS50cyIsIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzLWV4YW1wbGVzL21hdGVyaWFsL3N0ZXBwZXIvc3RlcHBlci1sYXp5LWNvbnRlbnQvc3RlcHBlci1sYXp5LWNvbnRlbnQtZXhhbXBsZS5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBQyxTQUFTLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDeEMsT0FBTyxFQUFDLGVBQWUsRUFBQyxNQUFNLDBCQUEwQixDQUFDO0FBQ3pELE9BQU8sRUFBQyxnQkFBZ0IsRUFBQyxNQUFNLDJCQUEyQixDQUFDOzs7O0FBRTNEOztHQUVHO0FBT0gsTUFBTSxPQUFPLHlCQUF5Qjs4R0FBekIseUJBQXlCO2tHQUF6Qix5QkFBeUIsd0ZDYnRDLHd6QkFzQkEsMkNEWFksZ0JBQWdCLGcxQkFBRSxlQUFlOzsyRkFFaEMseUJBQXlCO2tCQU5yQyxTQUFTOytCQUNFLDhCQUE4QixjQUU1QixJQUFJLFdBQ1AsQ0FBQyxnQkFBZ0IsRUFBRSxlQUFlLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0NvbXBvbmVudH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7TWF0QnV0dG9uTW9kdWxlfSBmcm9tICdAYW5ndWxhci9tYXRlcmlhbC9idXR0b24nO1xyXG5pbXBvcnQge01hdFN0ZXBwZXJNb2R1bGV9IGZyb20gJ0Bhbmd1bGFyL21hdGVyaWFsL3N0ZXBwZXInO1xyXG5cclxuLyoqXHJcbiAqIEB0aXRsZSBTdGVwcGVyIGxhenkgY29udGVudCByZW5kZXJpbmdcclxuICovXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnc3RlcHBlci1sYXp5LWNvbnRlbnQtZXhhbXBsZScsXHJcbiAgdGVtcGxhdGVVcmw6ICdzdGVwcGVyLWxhenktY29udGVudC1leGFtcGxlLmh0bWwnLFxyXG4gIHN0YW5kYWxvbmU6IHRydWUsXHJcbiAgaW1wb3J0czogW01hdFN0ZXBwZXJNb2R1bGUsIE1hdEJ1dHRvbk1vZHVsZV0sXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBTdGVwcGVyTGF6eUNvbnRlbnRFeGFtcGxlIHt9XHJcbiIsIjxtYXQtc3RlcHBlciBvcmllbnRhdGlvbj1cInZlcnRpY2FsXCI+XHJcbiAgPG1hdC1zdGVwPlxyXG4gICAgPG5nLXRlbXBsYXRlIG1hdFN0ZXBMYWJlbD5TdGVwIDE8L25nLXRlbXBsYXRlPlxyXG4gICAgPG5nLXRlbXBsYXRlIG1hdFN0ZXBDb250ZW50PlxyXG4gICAgICA8cD5UaGlzIGNvbnRlbnQgd2FzIHJlbmRlcmVkIGxhemlseTwvcD5cclxuICAgICAgPGJ1dHRvbiBtYXQtYnV0dG9uIG1hdFN0ZXBwZXJOZXh0Pk5leHQ8L2J1dHRvbj5cclxuICAgIDwvbmctdGVtcGxhdGU+XHJcbiAgPC9tYXQtc3RlcD5cclxuICA8bWF0LXN0ZXA+XHJcbiAgICA8bmctdGVtcGxhdGUgbWF0U3RlcExhYmVsPlN0ZXAgMjwvbmctdGVtcGxhdGU+XHJcbiAgICA8bmctdGVtcGxhdGUgbWF0U3RlcENvbnRlbnQ+XHJcbiAgICAgIDxwPlRoaXMgY29udGVudCB3YXMgYWxzbyByZW5kZXJlZCBsYXppbHk8L3A+XHJcbiAgICAgIDxidXR0b24gbWF0LWJ1dHRvbiBtYXRTdGVwcGVyUHJldmlvdXM+QmFjazwvYnV0dG9uPlxyXG4gICAgICA8YnV0dG9uIG1hdC1idXR0b24gbWF0U3RlcHBlck5leHQ+TmV4dDwvYnV0dG9uPlxyXG4gICAgPC9uZy10ZW1wbGF0ZT5cclxuICA8L21hdC1zdGVwPlxyXG4gIDxtYXQtc3RlcD5cclxuICAgIDxuZy10ZW1wbGF0ZSBtYXRTdGVwTGFiZWw+U3RlcCAzPC9uZy10ZW1wbGF0ZT5cclxuICAgIDxwPlRoaXMgY29udGVudCB3YXMgcmVuZGVyZWQgZWFnZXJseTwvcD5cclxuICAgIDxidXR0b24gbWF0LWJ1dHRvbiBtYXRTdGVwcGVyUHJldmlvdXM+QmFjazwvYnV0dG9uPlxyXG4gIDwvbWF0LXN0ZXA+XHJcbjwvbWF0LXN0ZXBwZXI+XHJcbiJdfQ==