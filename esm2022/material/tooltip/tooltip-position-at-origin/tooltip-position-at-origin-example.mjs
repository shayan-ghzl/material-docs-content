import { Component } from '@angular/core';
import { FormControl, FormsModule, ReactiveFormsModule } from '@angular/forms';
import { MatCheckboxModule } from '@angular/material/checkbox';
import { MatTooltipModule } from '@angular/material/tooltip';
import { MatButtonModule } from '@angular/material/button';
import * as i0 from "@angular/core";
import * as i1 from "@angular/material/button";
import * as i2 from "@angular/material/tooltip";
import * as i3 from "@angular/material/checkbox";
import * as i4 from "@angular/forms";
/**
 * @title Basic tooltip
 */
export class TooltipPositionAtOriginExample {
    constructor() {
        this.enabled = new FormControl(false);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.0.4", ngImport: i0, type: TooltipPositionAtOriginExample, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "17.0.4", type: TooltipPositionAtOriginExample, isStandalone: true, selector: "tooltip-position-at-origin-example", ngImport: i0, template: "<button mat-raised-button\r\n        class=\"demo-button\"\r\n        matTooltip=\"Info about the action\"\r\n        [matTooltipPositionAtOrigin]=\"enabled.value\"\r\n        aria-label=\"Button that displays a tooltip when focused or hovered over\">\r\n  Action\r\n</button>\r\n\r\n<mat-checkbox [formControl]=\"enabled\" class=\"example-enabled-checkbox\">\r\n  Position at origin enabled\r\n</mat-checkbox>\r\n", styles: ["button.demo-button {\r\n  width: 500px;\r\n  height: 500px;\r\n}\r\n\r\n.example-enabled-checkbox {\r\n  margin-left: 8px;\r\n}\r\n"], dependencies: [{ kind: "ngmodule", type: MatButtonModule }, { kind: "component", type: i1.MatButton, selector: "    button[mat-button], button[mat-raised-button], button[mat-flat-button],    button[mat-stroked-button]  ", exportAs: ["matButton"] }, { kind: "ngmodule", type: MatTooltipModule }, { kind: "directive", type: i2.MatTooltip, selector: "[matTooltip]", inputs: ["matTooltipPosition", "matTooltipPositionAtOrigin", "matTooltipDisabled", "matTooltipShowDelay", "matTooltipHideDelay", "matTooltipTouchGestures", "matTooltip", "matTooltipClass"], exportAs: ["matTooltip"] }, { kind: "ngmodule", type: MatCheckboxModule }, { kind: "component", type: i3.MatCheckbox, selector: "mat-checkbox", inputs: ["aria-label", "aria-labelledby", "aria-describedby", "id", "required", "labelPosition", "name", "value", "disableRipple", "tabIndex", "color", "checked", "disabled", "indeterminate"], outputs: ["change", "indeterminateChange"], exportAs: ["matCheckbox"] }, { kind: "ngmodule", type: FormsModule }, { kind: "directive", type: i4.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "ngmodule", type: ReactiveFormsModule }, { kind: "directive", type: i4.FormControlDirective, selector: "[formControl]", inputs: ["formControl", "disabled", "ngModel"], outputs: ["ngModelChange"], exportAs: ["ngForm"] }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.0.4", ngImport: i0, type: TooltipPositionAtOriginExample, decorators: [{
            type: Component,
            args: [{ selector: 'tooltip-position-at-origin-example', standalone: true, imports: [MatButtonModule, MatTooltipModule, MatCheckboxModule, FormsModule, ReactiveFormsModule], template: "<button mat-raised-button\r\n        class=\"demo-button\"\r\n        matTooltip=\"Info about the action\"\r\n        [matTooltipPositionAtOrigin]=\"enabled.value\"\r\n        aria-label=\"Button that displays a tooltip when focused or hovered over\">\r\n  Action\r\n</button>\r\n\r\n<mat-checkbox [formControl]=\"enabled\" class=\"example-enabled-checkbox\">\r\n  Position at origin enabled\r\n</mat-checkbox>\r\n", styles: ["button.demo-button {\r\n  width: 500px;\r\n  height: 500px;\r\n}\r\n\r\n.example-enabled-checkbox {\r\n  margin-left: 8px;\r\n}\r\n"] }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9vbHRpcC1wb3NpdGlvbi1hdC1vcmlnaW4tZXhhbXBsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzLWV4YW1wbGVzL21hdGVyaWFsL3Rvb2x0aXAvdG9vbHRpcC1wb3NpdGlvbi1hdC1vcmlnaW4vdG9vbHRpcC1wb3NpdGlvbi1hdC1vcmlnaW4tZXhhbXBsZS50cyIsIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzLWV4YW1wbGVzL21hdGVyaWFsL3Rvb2x0aXAvdG9vbHRpcC1wb3NpdGlvbi1hdC1vcmlnaW4vdG9vbHRpcC1wb3NpdGlvbi1hdC1vcmlnaW4tZXhhbXBsZS5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBQyxTQUFTLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDeEMsT0FBTyxFQUFDLFdBQVcsRUFBRSxXQUFXLEVBQUUsbUJBQW1CLEVBQUMsTUFBTSxnQkFBZ0IsQ0FBQztBQUM3RSxPQUFPLEVBQUMsaUJBQWlCLEVBQUMsTUFBTSw0QkFBNEIsQ0FBQztBQUM3RCxPQUFPLEVBQUMsZ0JBQWdCLEVBQUMsTUFBTSwyQkFBMkIsQ0FBQztBQUMzRCxPQUFPLEVBQUMsZUFBZSxFQUFDLE1BQU0sMEJBQTBCLENBQUM7Ozs7OztBQUV6RDs7R0FFRztBQVFILE1BQU0sT0FBTyw4QkFBOEI7SUFQM0M7UUFRRSxZQUFPLEdBQUcsSUFBSSxXQUFXLENBQUMsS0FBSyxDQUFDLENBQUM7S0FDbEM7OEdBRlksOEJBQThCO2tHQUE5Qiw4QkFBOEIsOEZDaEIzQyxnYUFXQSw0TERHWSxlQUFlLDJOQUFFLGdCQUFnQiw0VEFBRSxpQkFBaUIsNldBQUUsV0FBVyxzSUFBRSxtQkFBbUI7OzJGQUVyRiw4QkFBOEI7a0JBUDFDLFNBQVM7K0JBQ0Usb0NBQW9DLGNBR2xDLElBQUksV0FDUCxDQUFDLGVBQWUsRUFBRSxnQkFBZ0IsRUFBRSxpQkFBaUIsRUFBRSxXQUFXLEVBQUUsbUJBQW1CLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0NvbXBvbmVudH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7Rm9ybUNvbnRyb2wsIEZvcm1zTW9kdWxlLCBSZWFjdGl2ZUZvcm1zTW9kdWxlfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XHJcbmltcG9ydCB7TWF0Q2hlY2tib3hNb2R1bGV9IGZyb20gJ0Bhbmd1bGFyL21hdGVyaWFsL2NoZWNrYm94JztcclxuaW1wb3J0IHtNYXRUb29sdGlwTW9kdWxlfSBmcm9tICdAYW5ndWxhci9tYXRlcmlhbC90b29sdGlwJztcclxuaW1wb3J0IHtNYXRCdXR0b25Nb2R1bGV9IGZyb20gJ0Bhbmd1bGFyL21hdGVyaWFsL2J1dHRvbic7XHJcblxyXG4vKipcclxuICogQHRpdGxlIEJhc2ljIHRvb2x0aXBcclxuICovXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAndG9vbHRpcC1wb3NpdGlvbi1hdC1vcmlnaW4tZXhhbXBsZScsXHJcbiAgdGVtcGxhdGVVcmw6ICd0b29sdGlwLXBvc2l0aW9uLWF0LW9yaWdpbi1leGFtcGxlLmh0bWwnLFxyXG4gIHN0eWxlVXJsczogWyd0b29sdGlwLXBvc2l0aW9uLWF0LW9yaWdpbi1leGFtcGxlLmNzcyddLFxyXG4gIHN0YW5kYWxvbmU6IHRydWUsXHJcbiAgaW1wb3J0czogW01hdEJ1dHRvbk1vZHVsZSwgTWF0VG9vbHRpcE1vZHVsZSwgTWF0Q2hlY2tib3hNb2R1bGUsIEZvcm1zTW9kdWxlLCBSZWFjdGl2ZUZvcm1zTW9kdWxlXSxcclxufSlcclxuZXhwb3J0IGNsYXNzIFRvb2x0aXBQb3NpdGlvbkF0T3JpZ2luRXhhbXBsZSB7XHJcbiAgZW5hYmxlZCA9IG5ldyBGb3JtQ29udHJvbChmYWxzZSk7XHJcbn1cclxuIiwiPGJ1dHRvbiBtYXQtcmFpc2VkLWJ1dHRvblxyXG4gICAgICAgIGNsYXNzPVwiZGVtby1idXR0b25cIlxyXG4gICAgICAgIG1hdFRvb2x0aXA9XCJJbmZvIGFib3V0IHRoZSBhY3Rpb25cIlxyXG4gICAgICAgIFttYXRUb29sdGlwUG9zaXRpb25BdE9yaWdpbl09XCJlbmFibGVkLnZhbHVlXCJcclxuICAgICAgICBhcmlhLWxhYmVsPVwiQnV0dG9uIHRoYXQgZGlzcGxheXMgYSB0b29sdGlwIHdoZW4gZm9jdXNlZCBvciBob3ZlcmVkIG92ZXJcIj5cclxuICBBY3Rpb25cclxuPC9idXR0b24+XHJcblxyXG48bWF0LWNoZWNrYm94IFtmb3JtQ29udHJvbF09XCJlbmFibGVkXCIgY2xhc3M9XCJleGFtcGxlLWVuYWJsZWQtY2hlY2tib3hcIj5cclxuICBQb3NpdGlvbiBhdCBvcmlnaW4gZW5hYmxlZFxyXG48L21hdC1jaGVja2JveD5cclxuIl19