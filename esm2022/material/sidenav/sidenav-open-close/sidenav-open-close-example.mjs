import { Component } from '@angular/core';
import { MatButtonModule } from '@angular/material/button';
import { FormsModule } from '@angular/forms';
import { MatCheckboxModule } from '@angular/material/checkbox';
import { MatSidenavModule } from '@angular/material/sidenav';
import * as i0 from "@angular/core";
import * as i1 from "@angular/material/sidenav";
import * as i2 from "@angular/material/checkbox";
import * as i3 from "@angular/forms";
import * as i4 from "@angular/material/button";
/** @title Sidenav open & close behavior */
export class SidenavOpenCloseExample {
    constructor() {
        this.events = [];
        this.shouldRun = /(^|.)(stackblitz|webcontainer).(io|com)$/.test(window.location.host);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.0.4", ngImport: i0, type: SidenavOpenCloseExample, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.0.0", version: "17.0.4", type: SidenavOpenCloseExample, isStandalone: true, selector: "sidenav-open-close-example", ngImport: i0, template: "@if (shouldRun) {\r\n  <mat-sidenav-container class=\"example-container\">\r\n    <mat-sidenav #sidenav mode=\"side\" [(opened)]=\"opened\" (opened)=\"events.push('open!')\"\r\n                (closed)=\"events.push('close!')\">\r\n      Sidenav content\r\n    </mat-sidenav>\r\n\r\n    <mat-sidenav-content>\r\n      <p><mat-checkbox [(ngModel)]=\"opened\">sidenav.opened</mat-checkbox></p>\r\n      <p><button mat-button (click)=\"sidenav.toggle()\">sidenav.toggle()</button></p>\r\n      <p>Events:</p>\r\n      <div class=\"example-events\">\r\n        @for (e of events; track e) {\r\n          <div>{{e}}</div>\r\n        }\r\n      </div>\r\n    </mat-sidenav-content>\r\n  </mat-sidenav-container>\r\n} @else {\r\n  <div>Please open on Stackblitz to see result</div>\r\n}\r\n\r\n", styles: [".example-container {\r\n  position: absolute;\r\n  top: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n}\r\n\r\n.example-events {\r\n  width: 300px;\r\n  height: 200px;\r\n  overflow: auto;\r\n  border: 1px solid #555;\r\n}\r\n"], dependencies: [{ kind: "ngmodule", type: MatSidenavModule }, { kind: "component", type: i1.MatSidenav, selector: "mat-sidenav", inputs: ["fixedInViewport", "fixedTopGap", "fixedBottomGap"], exportAs: ["matSidenav"] }, { kind: "component", type: i1.MatSidenavContainer, selector: "mat-sidenav-container", exportAs: ["matSidenavContainer"] }, { kind: "component", type: i1.MatSidenavContent, selector: "mat-sidenav-content" }, { kind: "ngmodule", type: MatCheckboxModule }, { kind: "component", type: i2.MatCheckbox, selector: "mat-checkbox", inputs: ["aria-label", "aria-labelledby", "aria-describedby", "id", "required", "labelPosition", "name", "value", "disableRipple", "tabIndex", "color", "checked", "disabled", "indeterminate"], outputs: ["change", "indeterminateChange"], exportAs: ["matCheckbox"] }, { kind: "ngmodule", type: FormsModule }, { kind: "directive", type: i3.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i3.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }, { kind: "ngmodule", type: MatButtonModule }, { kind: "component", type: i4.MatButton, selector: "    button[mat-button], button[mat-raised-button], button[mat-flat-button],    button[mat-stroked-button]  ", exportAs: ["matButton"] }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.0.4", ngImport: i0, type: SidenavOpenCloseExample, decorators: [{
            type: Component,
            args: [{ selector: 'sidenav-open-close-example', standalone: true, imports: [MatSidenavModule, MatCheckboxModule, FormsModule, MatButtonModule], template: "@if (shouldRun) {\r\n  <mat-sidenav-container class=\"example-container\">\r\n    <mat-sidenav #sidenav mode=\"side\" [(opened)]=\"opened\" (opened)=\"events.push('open!')\"\r\n                (closed)=\"events.push('close!')\">\r\n      Sidenav content\r\n    </mat-sidenav>\r\n\r\n    <mat-sidenav-content>\r\n      <p><mat-checkbox [(ngModel)]=\"opened\">sidenav.opened</mat-checkbox></p>\r\n      <p><button mat-button (click)=\"sidenav.toggle()\">sidenav.toggle()</button></p>\r\n      <p>Events:</p>\r\n      <div class=\"example-events\">\r\n        @for (e of events; track e) {\r\n          <div>{{e}}</div>\r\n        }\r\n      </div>\r\n    </mat-sidenav-content>\r\n  </mat-sidenav-container>\r\n} @else {\r\n  <div>Please open on Stackblitz to see result</div>\r\n}\r\n\r\n", styles: [".example-container {\r\n  position: absolute;\r\n  top: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n}\r\n\r\n.example-events {\r\n  width: 300px;\r\n  height: 200px;\r\n  overflow: auto;\r\n  border: 1px solid #555;\r\n}\r\n"] }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2lkZW5hdi1vcGVuLWNsb3NlLWV4YW1wbGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9zcmMvY29tcG9uZW50cy1leGFtcGxlcy9tYXRlcmlhbC9zaWRlbmF2L3NpZGVuYXYtb3Blbi1jbG9zZS9zaWRlbmF2LW9wZW4tY2xvc2UtZXhhbXBsZS50cyIsIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzLWV4YW1wbGVzL21hdGVyaWFsL3NpZGVuYXYvc2lkZW5hdi1vcGVuLWNsb3NlL3NpZGVuYXYtb3Blbi1jbG9zZS1leGFtcGxlLmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFDLFNBQVMsRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUN4QyxPQUFPLEVBQUMsZUFBZSxFQUFDLE1BQU0sMEJBQTBCLENBQUM7QUFDekQsT0FBTyxFQUFDLFdBQVcsRUFBQyxNQUFNLGdCQUFnQixDQUFDO0FBQzNDLE9BQU8sRUFBQyxpQkFBaUIsRUFBQyxNQUFNLDRCQUE0QixDQUFDO0FBQzdELE9BQU8sRUFBQyxnQkFBZ0IsRUFBQyxNQUFNLDJCQUEyQixDQUFDOzs7Ozs7QUFFM0QsMkNBQTJDO0FBUTNDLE1BQU0sT0FBTyx1QkFBdUI7SUFQcEM7UUFRRSxXQUFNLEdBQWEsRUFBRSxDQUFDO1FBR3RCLGNBQVMsR0FBRywwQ0FBMEMsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsQ0FBQztLQUNuRjs4R0FMWSx1QkFBdUI7a0dBQXZCLHVCQUF1QixzRkNkcEMscXhCQXNCQSxnU0RWWSxnQkFBZ0IsMFlBQUUsaUJBQWlCLDZXQUFFLFdBQVcsOFZBQUUsZUFBZTs7MkZBRWhFLHVCQUF1QjtrQkFQbkMsU0FBUzsrQkFDRSw0QkFBNEIsY0FHMUIsSUFBSSxXQUNQLENBQUMsZ0JBQWdCLEVBQUUsaUJBQWlCLEVBQUUsV0FBVyxFQUFFLGVBQWUsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q29tcG9uZW50fSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHtNYXRCdXR0b25Nb2R1bGV9IGZyb20gJ0Bhbmd1bGFyL21hdGVyaWFsL2J1dHRvbic7XHJcbmltcG9ydCB7Rm9ybXNNb2R1bGV9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcclxuaW1wb3J0IHtNYXRDaGVja2JveE1vZHVsZX0gZnJvbSAnQGFuZ3VsYXIvbWF0ZXJpYWwvY2hlY2tib3gnO1xyXG5pbXBvcnQge01hdFNpZGVuYXZNb2R1bGV9IGZyb20gJ0Bhbmd1bGFyL21hdGVyaWFsL3NpZGVuYXYnO1xyXG5cclxuLyoqIEB0aXRsZSBTaWRlbmF2IG9wZW4gJiBjbG9zZSBiZWhhdmlvciAqL1xyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ3NpZGVuYXYtb3Blbi1jbG9zZS1leGFtcGxlJyxcclxuICB0ZW1wbGF0ZVVybDogJ3NpZGVuYXYtb3Blbi1jbG9zZS1leGFtcGxlLmh0bWwnLFxyXG4gIHN0eWxlVXJsczogWydzaWRlbmF2LW9wZW4tY2xvc2UtZXhhbXBsZS5jc3MnXSxcclxuICBzdGFuZGFsb25lOiB0cnVlLFxyXG4gIGltcG9ydHM6IFtNYXRTaWRlbmF2TW9kdWxlLCBNYXRDaGVja2JveE1vZHVsZSwgRm9ybXNNb2R1bGUsIE1hdEJ1dHRvbk1vZHVsZV0sXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBTaWRlbmF2T3BlbkNsb3NlRXhhbXBsZSB7XHJcbiAgZXZlbnRzOiBzdHJpbmdbXSA9IFtdO1xyXG4gIG9wZW5lZDogYm9vbGVhbjtcclxuXHJcbiAgc2hvdWxkUnVuID0gLyhefC4pKHN0YWNrYmxpdHp8d2ViY29udGFpbmVyKS4oaW98Y29tKSQvLnRlc3Qod2luZG93LmxvY2F0aW9uLmhvc3QpO1xyXG59XHJcbiIsIkBpZiAoc2hvdWxkUnVuKSB7XHJcbiAgPG1hdC1zaWRlbmF2LWNvbnRhaW5lciBjbGFzcz1cImV4YW1wbGUtY29udGFpbmVyXCI+XHJcbiAgICA8bWF0LXNpZGVuYXYgI3NpZGVuYXYgbW9kZT1cInNpZGVcIiBbKG9wZW5lZCldPVwib3BlbmVkXCIgKG9wZW5lZCk9XCJldmVudHMucHVzaCgnb3BlbiEnKVwiXHJcbiAgICAgICAgICAgICAgICAoY2xvc2VkKT1cImV2ZW50cy5wdXNoKCdjbG9zZSEnKVwiPlxyXG4gICAgICBTaWRlbmF2IGNvbnRlbnRcclxuICAgIDwvbWF0LXNpZGVuYXY+XHJcblxyXG4gICAgPG1hdC1zaWRlbmF2LWNvbnRlbnQ+XHJcbiAgICAgIDxwPjxtYXQtY2hlY2tib3ggWyhuZ01vZGVsKV09XCJvcGVuZWRcIj5zaWRlbmF2Lm9wZW5lZDwvbWF0LWNoZWNrYm94PjwvcD5cclxuICAgICAgPHA+PGJ1dHRvbiBtYXQtYnV0dG9uIChjbGljayk9XCJzaWRlbmF2LnRvZ2dsZSgpXCI+c2lkZW5hdi50b2dnbGUoKTwvYnV0dG9uPjwvcD5cclxuICAgICAgPHA+RXZlbnRzOjwvcD5cclxuICAgICAgPGRpdiBjbGFzcz1cImV4YW1wbGUtZXZlbnRzXCI+XHJcbiAgICAgICAgQGZvciAoZSBvZiBldmVudHM7IHRyYWNrIGUpIHtcclxuICAgICAgICAgIDxkaXY+e3tlfX08L2Rpdj5cclxuICAgICAgICB9XHJcbiAgICAgIDwvZGl2PlxyXG4gICAgPC9tYXQtc2lkZW5hdi1jb250ZW50PlxyXG4gIDwvbWF0LXNpZGVuYXYtY29udGFpbmVyPlxyXG59IEBlbHNlIHtcclxuICA8ZGl2PlBsZWFzZSBvcGVuIG9uIFN0YWNrYmxpdHogdG8gc2VlIHJlc3VsdDwvZGl2PlxyXG59XHJcblxyXG4iXX0=