import { Component } from '@angular/core';
import { FormControl, FormsModule, ReactiveFormsModule } from '@angular/forms';
import { MatSidenavModule } from '@angular/material/sidenav';
import { MatRadioModule } from '@angular/material/radio';
import { MatButtonModule } from '@angular/material/button';
import * as i0 from "@angular/core";
import * as i1 from "@angular/material/sidenav";
import * as i2 from "@angular/material/button";
import * as i3 from "@angular/material/radio";
import * as i4 from "@angular/forms";
/** @title Sidenav with configurable mode */
export class SidenavModeExample {
    constructor() {
        this.mode = new FormControl('over');
        this.shouldRun = /(^|.)(stackblitz|webcontainer).(io|com)$/.test(window.location.host);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.0.4", ngImport: i0, type: SidenavModeExample, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.0.0", version: "17.0.4", type: SidenavModeExample, isStandalone: true, selector: "sidenav-mode-example", ngImport: i0, template: "@if (shouldRun) {\r\n  <mat-sidenav-container class=\"example-container\">\r\n    <mat-sidenav #sidenav [mode]=\"mode.value || 'over'\">\r\n      <p><button mat-button (click)=\"sidenav.toggle()\">Toggle</button></p>\r\n      <p>\r\n        <mat-radio-group class=\"example-radio-group\" [formControl]=\"mode\">\r\n          <label>Mode:</label>\r\n          <mat-radio-button value=\"over\">Over</mat-radio-button>\r\n          <mat-radio-button value=\"side\">Side</mat-radio-button>\r\n          <mat-radio-button value=\"push\">Push</mat-radio-button>\r\n        </mat-radio-group>\r\n      </p>\r\n    </mat-sidenav>\r\n\r\n    <mat-sidenav-content>\r\n      <p><button mat-button (click)=\"sidenav.toggle()\">Toggle</button></p>\r\n      <p>\r\n        <mat-radio-group class=\"example-radio-group\" [formControl]=\"mode\">\r\n          <label>Mode:</label>\r\n          <mat-radio-button value=\"over\">Over</mat-radio-button>\r\n          <mat-radio-button value=\"side\">Side</mat-radio-button>\r\n          <mat-radio-button value=\"push\">Push</mat-radio-button>\r\n        </mat-radio-group>\r\n      </p>\r\n    </mat-sidenav-content>\r\n  </mat-sidenav-container>\r\n} @else {\r\n  <div>Please open on Stackblitz to see result</div>\r\n}\r\n\r\n", styles: [".example-container {\r\n  position: absolute;\r\n  top: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n}\r\n\r\n.example-radio-group {\r\n  display: block;\r\n  border: 1px solid #555;\r\n  margin: 20px;\r\n  padding: 10px;\r\n}\r\n"], dependencies: [{ kind: "ngmodule", type: MatSidenavModule }, { kind: "component", type: i1.MatSidenav, selector: "mat-sidenav", inputs: ["fixedInViewport", "fixedTopGap", "fixedBottomGap"], exportAs: ["matSidenav"] }, { kind: "component", type: i1.MatSidenavContainer, selector: "mat-sidenav-container", exportAs: ["matSidenavContainer"] }, { kind: "component", type: i1.MatSidenavContent, selector: "mat-sidenav-content" }, { kind: "ngmodule", type: MatButtonModule }, { kind: "component", type: i2.MatButton, selector: "    button[mat-button], button[mat-raised-button], button[mat-flat-button],    button[mat-stroked-button]  ", exportAs: ["matButton"] }, { kind: "ngmodule", type: MatRadioModule }, { kind: "directive", type: i3.MatRadioGroup, selector: "mat-radio-group", inputs: ["color", "name", "labelPosition", "value", "selected", "disabled", "required"], outputs: ["change"], exportAs: ["matRadioGroup"] }, { kind: "component", type: i3.MatRadioButton, selector: "mat-radio-button", inputs: ["id", "name", "aria-label", "aria-labelledby", "aria-describedby", "disableRipple", "tabIndex", "checked", "value", "labelPosition", "disabled", "required", "color"], outputs: ["change"], exportAs: ["matRadioButton"] }, { kind: "ngmodule", type: FormsModule }, { kind: "directive", type: i4.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "ngmodule", type: ReactiveFormsModule }, { kind: "directive", type: i4.FormControlDirective, selector: "[formControl]", inputs: ["formControl", "disabled", "ngModel"], outputs: ["ngModelChange"], exportAs: ["ngForm"] }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.0.4", ngImport: i0, type: SidenavModeExample, decorators: [{
            type: Component,
            args: [{ selector: 'sidenav-mode-example', standalone: true, imports: [MatSidenavModule, MatButtonModule, MatRadioModule, FormsModule, ReactiveFormsModule], template: "@if (shouldRun) {\r\n  <mat-sidenav-container class=\"example-container\">\r\n    <mat-sidenav #sidenav [mode]=\"mode.value || 'over'\">\r\n      <p><button mat-button (click)=\"sidenav.toggle()\">Toggle</button></p>\r\n      <p>\r\n        <mat-radio-group class=\"example-radio-group\" [formControl]=\"mode\">\r\n          <label>Mode:</label>\r\n          <mat-radio-button value=\"over\">Over</mat-radio-button>\r\n          <mat-radio-button value=\"side\">Side</mat-radio-button>\r\n          <mat-radio-button value=\"push\">Push</mat-radio-button>\r\n        </mat-radio-group>\r\n      </p>\r\n    </mat-sidenav>\r\n\r\n    <mat-sidenav-content>\r\n      <p><button mat-button (click)=\"sidenav.toggle()\">Toggle</button></p>\r\n      <p>\r\n        <mat-radio-group class=\"example-radio-group\" [formControl]=\"mode\">\r\n          <label>Mode:</label>\r\n          <mat-radio-button value=\"over\">Over</mat-radio-button>\r\n          <mat-radio-button value=\"side\">Side</mat-radio-button>\r\n          <mat-radio-button value=\"push\">Push</mat-radio-button>\r\n        </mat-radio-group>\r\n      </p>\r\n    </mat-sidenav-content>\r\n  </mat-sidenav-container>\r\n} @else {\r\n  <div>Please open on Stackblitz to see result</div>\r\n}\r\n\r\n", styles: [".example-container {\r\n  position: absolute;\r\n  top: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n}\r\n\r\n.example-radio-group {\r\n  display: block;\r\n  border: 1px solid #555;\r\n  margin: 20px;\r\n  padding: 10px;\r\n}\r\n"] }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2lkZW5hdi1tb2RlLWV4YW1wbGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9zcmMvY29tcG9uZW50cy1leGFtcGxlcy9tYXRlcmlhbC9zaWRlbmF2L3NpZGVuYXYtbW9kZS9zaWRlbmF2LW1vZGUtZXhhbXBsZS50cyIsIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzLWV4YW1wbGVzL21hdGVyaWFsL3NpZGVuYXYvc2lkZW5hdi1tb2RlL3NpZGVuYXYtbW9kZS1leGFtcGxlLmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFDLFNBQVMsRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUN4QyxPQUFPLEVBQUMsV0FBVyxFQUFFLFdBQVcsRUFBRSxtQkFBbUIsRUFBQyxNQUFNLGdCQUFnQixDQUFDO0FBQzdFLE9BQU8sRUFBZ0IsZ0JBQWdCLEVBQUMsTUFBTSwyQkFBMkIsQ0FBQztBQUMxRSxPQUFPLEVBQUMsY0FBYyxFQUFDLE1BQU0seUJBQXlCLENBQUM7QUFDdkQsT0FBTyxFQUFDLGVBQWUsRUFBQyxNQUFNLDBCQUEwQixDQUFDOzs7Ozs7QUFFekQsNENBQTRDO0FBUTVDLE1BQU0sT0FBTyxrQkFBa0I7SUFQL0I7UUFRRSxTQUFJLEdBQUcsSUFBSSxXQUFXLENBQUMsTUFBdUIsQ0FBQyxDQUFDO1FBQ2hELGNBQVMsR0FBRywwQ0FBMEMsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsQ0FBQztLQUNuRjs4R0FIWSxrQkFBa0I7a0dBQWxCLGtCQUFrQixnRkNkL0IsNnVDQThCQSxxU0RsQlksZ0JBQWdCLDBZQUFFLGVBQWUsMk5BQUUsY0FBYyxzaUJBQUUsV0FBVyxzSUFBRSxtQkFBbUI7OzJGQUVsRixrQkFBa0I7a0JBUDlCLFNBQVM7K0JBQ0Usc0JBQXNCLGNBR3BCLElBQUksV0FDUCxDQUFDLGdCQUFnQixFQUFFLGVBQWUsRUFBRSxjQUFjLEVBQUUsV0FBVyxFQUFFLG1CQUFtQixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDb21wb25lbnR9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQge0Zvcm1Db250cm9sLCBGb3Jtc01vZHVsZSwgUmVhY3RpdmVGb3Jtc01vZHVsZX0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xyXG5pbXBvcnQge01hdERyYXdlck1vZGUsIE1hdFNpZGVuYXZNb2R1bGV9IGZyb20gJ0Bhbmd1bGFyL21hdGVyaWFsL3NpZGVuYXYnO1xyXG5pbXBvcnQge01hdFJhZGlvTW9kdWxlfSBmcm9tICdAYW5ndWxhci9tYXRlcmlhbC9yYWRpbyc7XHJcbmltcG9ydCB7TWF0QnV0dG9uTW9kdWxlfSBmcm9tICdAYW5ndWxhci9tYXRlcmlhbC9idXR0b24nO1xyXG5cclxuLyoqIEB0aXRsZSBTaWRlbmF2IHdpdGggY29uZmlndXJhYmxlIG1vZGUgKi9cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdzaWRlbmF2LW1vZGUtZXhhbXBsZScsXHJcbiAgdGVtcGxhdGVVcmw6ICdzaWRlbmF2LW1vZGUtZXhhbXBsZS5odG1sJyxcclxuICBzdHlsZVVybHM6IFsnc2lkZW5hdi1tb2RlLWV4YW1wbGUuY3NzJ10sXHJcbiAgc3RhbmRhbG9uZTogdHJ1ZSxcclxuICBpbXBvcnRzOiBbTWF0U2lkZW5hdk1vZHVsZSwgTWF0QnV0dG9uTW9kdWxlLCBNYXRSYWRpb01vZHVsZSwgRm9ybXNNb2R1bGUsIFJlYWN0aXZlRm9ybXNNb2R1bGVdLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgU2lkZW5hdk1vZGVFeGFtcGxlIHtcclxuICBtb2RlID0gbmV3IEZvcm1Db250cm9sKCdvdmVyJyBhcyBNYXREcmF3ZXJNb2RlKTtcclxuICBzaG91bGRSdW4gPSAvKF58Likoc3RhY2tibGl0enx3ZWJjb250YWluZXIpLihpb3xjb20pJC8udGVzdCh3aW5kb3cubG9jYXRpb24uaG9zdCk7XHJcbn1cclxuIiwiQGlmIChzaG91bGRSdW4pIHtcclxuICA8bWF0LXNpZGVuYXYtY29udGFpbmVyIGNsYXNzPVwiZXhhbXBsZS1jb250YWluZXJcIj5cclxuICAgIDxtYXQtc2lkZW5hdiAjc2lkZW5hdiBbbW9kZV09XCJtb2RlLnZhbHVlIHx8ICdvdmVyJ1wiPlxyXG4gICAgICA8cD48YnV0dG9uIG1hdC1idXR0b24gKGNsaWNrKT1cInNpZGVuYXYudG9nZ2xlKClcIj5Ub2dnbGU8L2J1dHRvbj48L3A+XHJcbiAgICAgIDxwPlxyXG4gICAgICAgIDxtYXQtcmFkaW8tZ3JvdXAgY2xhc3M9XCJleGFtcGxlLXJhZGlvLWdyb3VwXCIgW2Zvcm1Db250cm9sXT1cIm1vZGVcIj5cclxuICAgICAgICAgIDxsYWJlbD5Nb2RlOjwvbGFiZWw+XHJcbiAgICAgICAgICA8bWF0LXJhZGlvLWJ1dHRvbiB2YWx1ZT1cIm92ZXJcIj5PdmVyPC9tYXQtcmFkaW8tYnV0dG9uPlxyXG4gICAgICAgICAgPG1hdC1yYWRpby1idXR0b24gdmFsdWU9XCJzaWRlXCI+U2lkZTwvbWF0LXJhZGlvLWJ1dHRvbj5cclxuICAgICAgICAgIDxtYXQtcmFkaW8tYnV0dG9uIHZhbHVlPVwicHVzaFwiPlB1c2g8L21hdC1yYWRpby1idXR0b24+XHJcbiAgICAgICAgPC9tYXQtcmFkaW8tZ3JvdXA+XHJcbiAgICAgIDwvcD5cclxuICAgIDwvbWF0LXNpZGVuYXY+XHJcblxyXG4gICAgPG1hdC1zaWRlbmF2LWNvbnRlbnQ+XHJcbiAgICAgIDxwPjxidXR0b24gbWF0LWJ1dHRvbiAoY2xpY2spPVwic2lkZW5hdi50b2dnbGUoKVwiPlRvZ2dsZTwvYnV0dG9uPjwvcD5cclxuICAgICAgPHA+XHJcbiAgICAgICAgPG1hdC1yYWRpby1ncm91cCBjbGFzcz1cImV4YW1wbGUtcmFkaW8tZ3JvdXBcIiBbZm9ybUNvbnRyb2xdPVwibW9kZVwiPlxyXG4gICAgICAgICAgPGxhYmVsPk1vZGU6PC9sYWJlbD5cclxuICAgICAgICAgIDxtYXQtcmFkaW8tYnV0dG9uIHZhbHVlPVwib3ZlclwiPk92ZXI8L21hdC1yYWRpby1idXR0b24+XHJcbiAgICAgICAgICA8bWF0LXJhZGlvLWJ1dHRvbiB2YWx1ZT1cInNpZGVcIj5TaWRlPC9tYXQtcmFkaW8tYnV0dG9uPlxyXG4gICAgICAgICAgPG1hdC1yYWRpby1idXR0b24gdmFsdWU9XCJwdXNoXCI+UHVzaDwvbWF0LXJhZGlvLWJ1dHRvbj5cclxuICAgICAgICA8L21hdC1yYWRpby1ncm91cD5cclxuICAgICAgPC9wPlxyXG4gICAgPC9tYXQtc2lkZW5hdi1jb250ZW50PlxyXG4gIDwvbWF0LXNpZGVuYXYtY29udGFpbmVyPlxyXG59IEBlbHNlIHtcclxuICA8ZGl2PlBsZWFzZSBvcGVuIG9uIFN0YWNrYmxpdHogdG8gc2VlIHJlc3VsdDwvZGl2PlxyXG59XHJcblxyXG4iXX0=