import { Component } from '@angular/core';
import { FormControl, FormsModule, ReactiveFormsModule } from '@angular/forms';
import { MatSidenavModule } from '@angular/material/sidenav';
import { MatRadioModule } from '@angular/material/radio';
import { MatButtonModule } from '@angular/material/button';
import { ConfigurableFocusTrapFactory, FocusTrapFactory } from '@angular/cdk/a11y';
import * as i0 from "@angular/core";
import * as i1 from "@angular/material/sidenav";
import * as i2 from "@angular/material/button";
import * as i3 from "@angular/material/radio";
import * as i4 from "@angular/forms";
/** @title Sidenav using injected ConfigurableFocusTrap */
export class SidenavConfigurableFocusTrapExample {
    constructor() {
        this.mode = new FormControl('over');
        this.hasBackdrop = new FormControl(null);
        this.position = new FormControl('start');
        this.shouldRun = /(^|.)(stackblitz|webcontainer).(io|com)$/.test(window.location.host);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.0.4", ngImport: i0, type: SidenavConfigurableFocusTrapExample, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.0.0", version: "17.0.4", type: SidenavConfigurableFocusTrapExample, isStandalone: true, selector: "sidenav-configurable-focus-trap-example", providers: [{ provide: FocusTrapFactory, useClass: ConfigurableFocusTrapFactory }], ngImport: i0, template: "@if (shouldRun) {\r\n  <mat-sidenav-container class=\"example-container\" [hasBackdrop]=\"hasBackdrop.value\">\r\n    <mat-sidenav #sidenav [mode]=\"mode.value!\" [position]=\"position.value!\">\r\n      <p><button mat-button (click)=\"sidenav.toggle()\">Toggle</button></p>\r\n      <p>\r\n        <label>Test input for drawer<input/></label>\r\n      </p>\r\n    </mat-sidenav>\r\n\r\n    <mat-sidenav-content>\r\n      <p><button mat-button (click)=\"sidenav.toggle()\">Toggle</button></p>\r\n      <p>\r\n        <mat-radio-group class=\"example-radio-group\" [formControl]=\"mode\">\r\n          <label>Mode:</label>\r\n          <mat-radio-button value=\"over\">Over</mat-radio-button>\r\n          <mat-radio-button value=\"side\">Side</mat-radio-button>\r\n          <mat-radio-button value=\"push\">Push</mat-radio-button>\r\n        </mat-radio-group>\r\n        <mat-radio-group class=\"example-radio-group\" [formControl]=\"hasBackdrop\">\r\n          <label>Has Backdrop:</label>\r\n          <mat-radio-button [value]=\"null\">Default</mat-radio-button>\r\n          <mat-radio-button [value]=\"true\">true</mat-radio-button>\r\n          <mat-radio-button [value]=\"false\">false</mat-radio-button>\r\n        </mat-radio-group>\r\n        <mat-radio-group class=\"example-radio-group\" [formControl]=\"position\">\r\n          <label>Position:</label>\r\n          <mat-radio-button value=\"start\">Start</mat-radio-button>\r\n          <mat-radio-button value=\"end\">End</mat-radio-button>\r\n        </mat-radio-group>\r\n      </p>\r\n      <p>\r\n        <label>Test input for drawer content<input/></label>\r\n      </p>\r\n    </mat-sidenav-content>\r\n  </mat-sidenav-container>\r\n} @else {\r\n  <div>Please open on Stackblitz to see result</div>\r\n}\r\n\r\n", styles: [".example-container {\r\n  position: absolute;\r\n  top: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n}\r\n\r\n.example-radio-group {\r\n  display: block;\r\n  border: 1px solid #555;\r\n  margin: 20px;\r\n  padding: 10px;\r\n}\r\n"], dependencies: [{ kind: "ngmodule", type: MatSidenavModule }, { kind: "component", type: i1.MatSidenav, selector: "mat-sidenav", inputs: ["fixedInViewport", "fixedTopGap", "fixedBottomGap"], exportAs: ["matSidenav"] }, { kind: "component", type: i1.MatSidenavContainer, selector: "mat-sidenav-container", exportAs: ["matSidenavContainer"] }, { kind: "component", type: i1.MatSidenavContent, selector: "mat-sidenav-content" }, { kind: "ngmodule", type: MatButtonModule }, { kind: "component", type: i2.MatButton, selector: "    button[mat-button], button[mat-raised-button], button[mat-flat-button],    button[mat-stroked-button]  ", exportAs: ["matButton"] }, { kind: "ngmodule", type: MatRadioModule }, { kind: "directive", type: i3.MatRadioGroup, selector: "mat-radio-group", inputs: ["color", "name", "labelPosition", "value", "selected", "disabled", "required"], outputs: ["change"], exportAs: ["matRadioGroup"] }, { kind: "component", type: i3.MatRadioButton, selector: "mat-radio-button", inputs: ["id", "name", "aria-label", "aria-labelledby", "aria-describedby", "disableRipple", "tabIndex", "checked", "value", "labelPosition", "disabled", "required", "color"], outputs: ["change"], exportAs: ["matRadioButton"] }, { kind: "ngmodule", type: FormsModule }, { kind: "directive", type: i4.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "ngmodule", type: ReactiveFormsModule }, { kind: "directive", type: i4.FormControlDirective, selector: "[formControl]", inputs: ["formControl", "disabled", "ngModel"], outputs: ["ngModelChange"], exportAs: ["ngForm"] }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.0.4", ngImport: i0, type: SidenavConfigurableFocusTrapExample, decorators: [{
            type: Component,
            args: [{ selector: 'sidenav-configurable-focus-trap-example', standalone: true, imports: [MatSidenavModule, MatButtonModule, MatRadioModule, FormsModule, ReactiveFormsModule], providers: [{ provide: FocusTrapFactory, useClass: ConfigurableFocusTrapFactory }], template: "@if (shouldRun) {\r\n  <mat-sidenav-container class=\"example-container\" [hasBackdrop]=\"hasBackdrop.value\">\r\n    <mat-sidenav #sidenav [mode]=\"mode.value!\" [position]=\"position.value!\">\r\n      <p><button mat-button (click)=\"sidenav.toggle()\">Toggle</button></p>\r\n      <p>\r\n        <label>Test input for drawer<input/></label>\r\n      </p>\r\n    </mat-sidenav>\r\n\r\n    <mat-sidenav-content>\r\n      <p><button mat-button (click)=\"sidenav.toggle()\">Toggle</button></p>\r\n      <p>\r\n        <mat-radio-group class=\"example-radio-group\" [formControl]=\"mode\">\r\n          <label>Mode:</label>\r\n          <mat-radio-button value=\"over\">Over</mat-radio-button>\r\n          <mat-radio-button value=\"side\">Side</mat-radio-button>\r\n          <mat-radio-button value=\"push\">Push</mat-radio-button>\r\n        </mat-radio-group>\r\n        <mat-radio-group class=\"example-radio-group\" [formControl]=\"hasBackdrop\">\r\n          <label>Has Backdrop:</label>\r\n          <mat-radio-button [value]=\"null\">Default</mat-radio-button>\r\n          <mat-radio-button [value]=\"true\">true</mat-radio-button>\r\n          <mat-radio-button [value]=\"false\">false</mat-radio-button>\r\n        </mat-radio-group>\r\n        <mat-radio-group class=\"example-radio-group\" [formControl]=\"position\">\r\n          <label>Position:</label>\r\n          <mat-radio-button value=\"start\">Start</mat-radio-button>\r\n          <mat-radio-button value=\"end\">End</mat-radio-button>\r\n        </mat-radio-group>\r\n      </p>\r\n      <p>\r\n        <label>Test input for drawer content<input/></label>\r\n      </p>\r\n    </mat-sidenav-content>\r\n  </mat-sidenav-container>\r\n} @else {\r\n  <div>Please open on Stackblitz to see result</div>\r\n}\r\n\r\n", styles: [".example-container {\r\n  position: absolute;\r\n  top: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n}\r\n\r\n.example-radio-group {\r\n  display: block;\r\n  border: 1px solid #555;\r\n  margin: 20px;\r\n  padding: 10px;\r\n}\r\n"] }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2lkZW5hdi1jb25maWd1cmFibGUtZm9jdXMtdHJhcC1leGFtcGxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMtZXhhbXBsZXMvbWF0ZXJpYWwvc2lkZW5hdi9zaWRlbmF2LWNvbmZpZ3VyYWJsZS1mb2N1cy10cmFwL3NpZGVuYXYtY29uZmlndXJhYmxlLWZvY3VzLXRyYXAtZXhhbXBsZS50cyIsIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzLWV4YW1wbGVzL21hdGVyaWFsL3NpZGVuYXYvc2lkZW5hdi1jb25maWd1cmFibGUtZm9jdXMtdHJhcC9zaWRlbmF2LWNvbmZpZ3VyYWJsZS1mb2N1cy10cmFwLWV4YW1wbGUuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUMsU0FBUyxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQ3hDLE9BQU8sRUFBQyxXQUFXLEVBQUUsV0FBVyxFQUFFLG1CQUFtQixFQUFDLE1BQU0sZ0JBQWdCLENBQUM7QUFDN0UsT0FBTyxFQUFnQixnQkFBZ0IsRUFBQyxNQUFNLDJCQUEyQixDQUFDO0FBQzFFLE9BQU8sRUFBQyxjQUFjLEVBQUMsTUFBTSx5QkFBeUIsQ0FBQztBQUN2RCxPQUFPLEVBQUMsZUFBZSxFQUFDLE1BQU0sMEJBQTBCLENBQUM7QUFDekQsT0FBTyxFQUFDLDRCQUE0QixFQUFFLGdCQUFnQixFQUFDLE1BQU0sbUJBQW1CLENBQUM7Ozs7OztBQUVqRiwwREFBMEQ7QUFTMUQsTUFBTSxPQUFPLG1DQUFtQztJQVJoRDtRQVNFLFNBQUksR0FBRyxJQUFJLFdBQVcsQ0FBQyxNQUF1QixDQUFDLENBQUM7UUFDaEQsZ0JBQVcsR0FBRyxJQUFJLFdBQVcsQ0FBQyxJQUFzQixDQUFDLENBQUM7UUFDdEQsYUFBUSxHQUFHLElBQUksV0FBVyxDQUFDLE9BQTBCLENBQUMsQ0FBQztRQUV2RCxjQUFTLEdBQUcsMENBQTBDLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLENBQUM7S0FDbkY7OEdBTlksbUNBQW1DO2tHQUFuQyxtQ0FBbUMsc0ZBRm5DLENBQUMsRUFBQyxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsUUFBUSxFQUFFLDRCQUE0QixFQUFDLENBQUMsMEJDZGxGLDB2REF1Q0EscVNEMUJZLGdCQUFnQiwwWUFBRSxlQUFlLDJOQUFFLGNBQWMsc2lCQUFFLFdBQVcsc0lBQUUsbUJBQW1COzsyRkFHbEYsbUNBQW1DO2tCQVIvQyxTQUFTOytCQUNFLHlDQUF5QyxjQUd2QyxJQUFJLFdBQ1AsQ0FBQyxnQkFBZ0IsRUFBRSxlQUFlLEVBQUUsY0FBYyxFQUFFLFdBQVcsRUFBRSxtQkFBbUIsQ0FBQyxhQUNuRixDQUFDLEVBQUMsT0FBTyxFQUFFLGdCQUFnQixFQUFFLFFBQVEsRUFBRSw0QkFBNEIsRUFBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDb21wb25lbnR9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQge0Zvcm1Db250cm9sLCBGb3Jtc01vZHVsZSwgUmVhY3RpdmVGb3Jtc01vZHVsZX0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xyXG5pbXBvcnQge01hdERyYXdlck1vZGUsIE1hdFNpZGVuYXZNb2R1bGV9IGZyb20gJ0Bhbmd1bGFyL21hdGVyaWFsL3NpZGVuYXYnO1xyXG5pbXBvcnQge01hdFJhZGlvTW9kdWxlfSBmcm9tICdAYW5ndWxhci9tYXRlcmlhbC9yYWRpbyc7XHJcbmltcG9ydCB7TWF0QnV0dG9uTW9kdWxlfSBmcm9tICdAYW5ndWxhci9tYXRlcmlhbC9idXR0b24nO1xyXG5pbXBvcnQge0NvbmZpZ3VyYWJsZUZvY3VzVHJhcEZhY3RvcnksIEZvY3VzVHJhcEZhY3Rvcnl9IGZyb20gJ0Bhbmd1bGFyL2Nkay9hMTF5JztcclxuXHJcbi8qKiBAdGl0bGUgU2lkZW5hdiB1c2luZyBpbmplY3RlZCBDb25maWd1cmFibGVGb2N1c1RyYXAgKi9cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdzaWRlbmF2LWNvbmZpZ3VyYWJsZS1mb2N1cy10cmFwLWV4YW1wbGUnLFxyXG4gIHRlbXBsYXRlVXJsOiAnc2lkZW5hdi1jb25maWd1cmFibGUtZm9jdXMtdHJhcC1leGFtcGxlLmh0bWwnLFxyXG4gIHN0eWxlVXJsczogWydzaWRlbmF2LWNvbmZpZ3VyYWJsZS1mb2N1cy10cmFwLWV4YW1wbGUuY3NzJ10sXHJcbiAgc3RhbmRhbG9uZTogdHJ1ZSxcclxuICBpbXBvcnRzOiBbTWF0U2lkZW5hdk1vZHVsZSwgTWF0QnV0dG9uTW9kdWxlLCBNYXRSYWRpb01vZHVsZSwgRm9ybXNNb2R1bGUsIFJlYWN0aXZlRm9ybXNNb2R1bGVdLFxyXG4gIHByb3ZpZGVyczogW3twcm92aWRlOiBGb2N1c1RyYXBGYWN0b3J5LCB1c2VDbGFzczogQ29uZmlndXJhYmxlRm9jdXNUcmFwRmFjdG9yeX1dLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgU2lkZW5hdkNvbmZpZ3VyYWJsZUZvY3VzVHJhcEV4YW1wbGUge1xyXG4gIG1vZGUgPSBuZXcgRm9ybUNvbnRyb2woJ292ZXInIGFzIE1hdERyYXdlck1vZGUpO1xyXG4gIGhhc0JhY2tkcm9wID0gbmV3IEZvcm1Db250cm9sKG51bGwgYXMgbnVsbCB8IGJvb2xlYW4pO1xyXG4gIHBvc2l0aW9uID0gbmV3IEZvcm1Db250cm9sKCdzdGFydCcgYXMgJ3N0YXJ0JyB8ICdlbmQnKTtcclxuXHJcbiAgc2hvdWxkUnVuID0gLyhefC4pKHN0YWNrYmxpdHp8d2ViY29udGFpbmVyKS4oaW98Y29tKSQvLnRlc3Qod2luZG93LmxvY2F0aW9uLmhvc3QpO1xyXG59XHJcbiIsIkBpZiAoc2hvdWxkUnVuKSB7XHJcbiAgPG1hdC1zaWRlbmF2LWNvbnRhaW5lciBjbGFzcz1cImV4YW1wbGUtY29udGFpbmVyXCIgW2hhc0JhY2tkcm9wXT1cImhhc0JhY2tkcm9wLnZhbHVlXCI+XHJcbiAgICA8bWF0LXNpZGVuYXYgI3NpZGVuYXYgW21vZGVdPVwibW9kZS52YWx1ZSFcIiBbcG9zaXRpb25dPVwicG9zaXRpb24udmFsdWUhXCI+XHJcbiAgICAgIDxwPjxidXR0b24gbWF0LWJ1dHRvbiAoY2xpY2spPVwic2lkZW5hdi50b2dnbGUoKVwiPlRvZ2dsZTwvYnV0dG9uPjwvcD5cclxuICAgICAgPHA+XHJcbiAgICAgICAgPGxhYmVsPlRlc3QgaW5wdXQgZm9yIGRyYXdlcjxpbnB1dC8+PC9sYWJlbD5cclxuICAgICAgPC9wPlxyXG4gICAgPC9tYXQtc2lkZW5hdj5cclxuXHJcbiAgICA8bWF0LXNpZGVuYXYtY29udGVudD5cclxuICAgICAgPHA+PGJ1dHRvbiBtYXQtYnV0dG9uIChjbGljayk9XCJzaWRlbmF2LnRvZ2dsZSgpXCI+VG9nZ2xlPC9idXR0b24+PC9wPlxyXG4gICAgICA8cD5cclxuICAgICAgICA8bWF0LXJhZGlvLWdyb3VwIGNsYXNzPVwiZXhhbXBsZS1yYWRpby1ncm91cFwiIFtmb3JtQ29udHJvbF09XCJtb2RlXCI+XHJcbiAgICAgICAgICA8bGFiZWw+TW9kZTo8L2xhYmVsPlxyXG4gICAgICAgICAgPG1hdC1yYWRpby1idXR0b24gdmFsdWU9XCJvdmVyXCI+T3ZlcjwvbWF0LXJhZGlvLWJ1dHRvbj5cclxuICAgICAgICAgIDxtYXQtcmFkaW8tYnV0dG9uIHZhbHVlPVwic2lkZVwiPlNpZGU8L21hdC1yYWRpby1idXR0b24+XHJcbiAgICAgICAgICA8bWF0LXJhZGlvLWJ1dHRvbiB2YWx1ZT1cInB1c2hcIj5QdXNoPC9tYXQtcmFkaW8tYnV0dG9uPlxyXG4gICAgICAgIDwvbWF0LXJhZGlvLWdyb3VwPlxyXG4gICAgICAgIDxtYXQtcmFkaW8tZ3JvdXAgY2xhc3M9XCJleGFtcGxlLXJhZGlvLWdyb3VwXCIgW2Zvcm1Db250cm9sXT1cImhhc0JhY2tkcm9wXCI+XHJcbiAgICAgICAgICA8bGFiZWw+SGFzIEJhY2tkcm9wOjwvbGFiZWw+XHJcbiAgICAgICAgICA8bWF0LXJhZGlvLWJ1dHRvbiBbdmFsdWVdPVwibnVsbFwiPkRlZmF1bHQ8L21hdC1yYWRpby1idXR0b24+XHJcbiAgICAgICAgICA8bWF0LXJhZGlvLWJ1dHRvbiBbdmFsdWVdPVwidHJ1ZVwiPnRydWU8L21hdC1yYWRpby1idXR0b24+XHJcbiAgICAgICAgICA8bWF0LXJhZGlvLWJ1dHRvbiBbdmFsdWVdPVwiZmFsc2VcIj5mYWxzZTwvbWF0LXJhZGlvLWJ1dHRvbj5cclxuICAgICAgICA8L21hdC1yYWRpby1ncm91cD5cclxuICAgICAgICA8bWF0LXJhZGlvLWdyb3VwIGNsYXNzPVwiZXhhbXBsZS1yYWRpby1ncm91cFwiIFtmb3JtQ29udHJvbF09XCJwb3NpdGlvblwiPlxyXG4gICAgICAgICAgPGxhYmVsPlBvc2l0aW9uOjwvbGFiZWw+XHJcbiAgICAgICAgICA8bWF0LXJhZGlvLWJ1dHRvbiB2YWx1ZT1cInN0YXJ0XCI+U3RhcnQ8L21hdC1yYWRpby1idXR0b24+XHJcbiAgICAgICAgICA8bWF0LXJhZGlvLWJ1dHRvbiB2YWx1ZT1cImVuZFwiPkVuZDwvbWF0LXJhZGlvLWJ1dHRvbj5cclxuICAgICAgICA8L21hdC1yYWRpby1ncm91cD5cclxuICAgICAgPC9wPlxyXG4gICAgICA8cD5cclxuICAgICAgICA8bGFiZWw+VGVzdCBpbnB1dCBmb3IgZHJhd2VyIGNvbnRlbnQ8aW5wdXQvPjwvbGFiZWw+XHJcbiAgICAgIDwvcD5cclxuICAgIDwvbWF0LXNpZGVuYXYtY29udGVudD5cclxuICA8L21hdC1zaWRlbmF2LWNvbnRhaW5lcj5cclxufSBAZWxzZSB7XHJcbiAgPGRpdj5QbGVhc2Ugb3BlbiBvbiBTdGFja2JsaXR6IHRvIHNlZSByZXN1bHQ8L2Rpdj5cclxufVxyXG5cclxuIl19