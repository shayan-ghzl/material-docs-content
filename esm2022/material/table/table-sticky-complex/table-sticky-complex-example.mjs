import { Component } from '@angular/core';
import { MatButtonToggleModule } from '@angular/material/button-toggle';
import { MatTableModule } from '@angular/material/table';
import { MatButtonModule } from '@angular/material/button';
import * as i0 from "@angular/core";
import * as i1 from "@angular/material/button";
import * as i2 from "@angular/material/button-toggle";
import * as i3 from "@angular/material/table";
/**
 * @title Tables with toggle-able sticky headers, footers, and columns
 */
export class TableStickyComplexExample {
    constructor() {
        this.displayedColumns = [];
        this.dataSource = ELEMENT_DATA;
        this.tables = [0];
        this.displayedColumns.length = 24;
        this.displayedColumns.fill('filler');
        // The first two columns should be position and name; the last two columns: weight, symbol
        this.displayedColumns[0] = 'position';
        this.displayedColumns[1] = 'name';
        this.displayedColumns[22] = 'weight';
        this.displayedColumns[23] = 'symbol';
    }
    /** Whether the button toggle group contains the id as an active value. */
    isSticky(buttonToggleGroup, id) {
        return (buttonToggleGroup.value || []).indexOf(id) !== -1;
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.0.4", ngImport: i0, type: TableStickyComplexExample, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.0.0", version: "17.0.4", type: TableStickyComplexExample, isStandalone: true, selector: "table-sticky-complex-example", ngImport: i0, template: "<div>\r\n  <button mat-raised-button (click)=\"tables.push(tables.length)\">Add table</button>\r\n  <button mat-raised-button (click)=\"tables.pop()\">Remove table</button>\r\n</div>\r\n\r\n<div>\r\n  Sticky Headers:\r\n  <mat-button-toggle-group multiple [value]=\"['header-1']\"\r\n                           #stickyHeaders=\"matButtonToggleGroup\"\r\n                           class=\"example-sticky-toggle-group\">\r\n    <mat-button-toggle value=\"header-1\"> Row 1 </mat-button-toggle>\r\n    <mat-button-toggle value=\"header-2\"> Row 2 </mat-button-toggle>\r\n  </mat-button-toggle-group>\r\n</div>\r\n\r\n<div>\r\n  Sticky Footers:\r\n  <mat-button-toggle-group multiple [value]=\"['footer-1']\"\r\n                           #stickyFooters=\"matButtonToggleGroup\"\r\n                           class=\"example-sticky-toggle-group\">\r\n    <mat-button-toggle value=\"footer-1\"> Row 1 </mat-button-toggle>\r\n    <mat-button-toggle value=\"footer-2\"> Row 2 </mat-button-toggle>\r\n  </mat-button-toggle-group>\r\n</div>\r\n\r\n<div>\r\n  Sticky Columns:\r\n  <mat-button-toggle-group multiple [value]=\"['position', 'symbol']\"\r\n                           #stickyColumns=\"matButtonToggleGroup\"\r\n                           class=\"example-sticky-toggle-group\">\r\n    <mat-button-toggle value=\"position\"> Position </mat-button-toggle>\r\n    <mat-button-toggle value=\"name\"> Name </mat-button-toggle>\r\n    <mat-button-toggle value=\"weight\"> Weight </mat-button-toggle>\r\n    <mat-button-toggle value=\"symbol\"> Symbol </mat-button-toggle>\r\n  </mat-button-toggle-group>\r\n</div>\r\n\r\n<section class=\"example-container mat-elevation-z8\" tabindex=\"0\">\r\n  @for (table of tables; track table) {\r\n    <table mat-table [dataSource]=\"dataSource\">\r\n      <ng-container matColumnDef=\"position\" [sticky]=\"isSticky(stickyColumns, 'position')\">\r\n        <th mat-header-cell *matHeaderCellDef> Position </th>\r\n        <td mat-cell *matCellDef=\"let element\"> {{element.position}} </td>\r\n        <td mat-footer-cell *matFooterCellDef> Position Footer </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"name\" [sticky]=\"isSticky(stickyColumns, 'name')\">\r\n        <th mat-header-cell *matHeaderCellDef> Name </th>\r\n        <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\r\n        <td mat-footer-cell *matFooterCellDef> Name Footer </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"weight\" [stickyEnd]=\"isSticky(stickyColumns, 'weight')\">\r\n        <th mat-header-cell *matHeaderCellDef> Weight </th>\r\n        <td mat-cell *matCellDef=\"let element\"> {{element.weight}} </td>\r\n        <td mat-footer-cell *matFooterCellDef> Weight Footer </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"symbol\" [stickyEnd]=\"isSticky(stickyColumns, 'symbol')\">\r\n        <th mat-header-cell *matHeaderCellDef> Symbol </th>\r\n        <td mat-cell *matCellDef=\"let element\"> {{element.symbol}} </td>\r\n        <td mat-footer-cell *matFooterCellDef> Symbol Footer </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"filler\">\r\n        <th mat-header-cell *matHeaderCellDef> Filler header cell </th>\r\n        <td mat-cell *matCellDef=\"let element\"> Filler data cell </td>\r\n        <td mat-footer-cell *matFooterCellDef> Filler footer cell </td>\r\n      </ng-container>\r\n\r\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: isSticky(stickyHeaders, 'header-1')\"></tr>\r\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: isSticky(stickyHeaders, 'header-2')\"></tr>\r\n\r\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n      <tr mat-footer-row *matFooterRowDef=\"displayedColumns; sticky: isSticky(stickyFooters, 'footer-1')\"></tr>\r\n      <tr mat-footer-row *matFooterRowDef=\"displayedColumns; sticky: isSticky(stickyFooters, 'footer-2')\"></tr>\r\n    </table>\r\n  }\r\n</section>\r\n", styles: [".example-container {\r\n  height: 400px;\r\n  overflow: auto;\r\n}\r\n\r\n.mat-mdc-table-sticky {\r\n  background: #59abfd;\r\n  opacity: 1;\r\n}\r\n\r\n.example-sticky-toggle-group {\r\n  margin: 8px;\r\n}\r\n\r\n.mat-column-filler {\r\n  padding: 0 8px;\r\n  font-size: 10px;\r\n  text-align: center;\r\n}\r\n\r\n.mat-mdc-header-cell, .mat-mdc-footer-cell, .mat-mdc-cell {\r\n  min-width: 80px;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.mat-mdc-table-sticky-border-elem-top {\r\n  border-bottom: 2px solid midnightblue;\r\n}\r\n\r\n.mat-mdc-table-sticky-border-elem-right {\r\n  border-left: 2px solid midnightblue;\r\n}\r\n\r\n.mat-mdc-table-sticky-border-elem-bottom {\r\n  border-top: 2px solid midnightblue;\r\n}\r\n\r\n.mat-mdc-table-sticky-border-elem-left {\r\n  border-right: 2px solid midnightblue;\r\n}\r\n"], dependencies: [{ kind: "ngmodule", type: MatButtonModule }, { kind: "component", type: i1.MatButton, selector: "    button[mat-button], button[mat-raised-button], button[mat-flat-button],    button[mat-stroked-button]  ", exportAs: ["matButton"] }, { kind: "ngmodule", type: MatButtonToggleModule }, { kind: "directive", type: i2.MatButtonToggleGroup, selector: "mat-button-toggle-group", inputs: ["appearance", "name", "vertical", "value", "multiple", "disabled"], outputs: ["valueChange", "change"], exportAs: ["matButtonToggleGroup"] }, { kind: "component", type: i2.MatButtonToggle, selector: "mat-button-toggle", inputs: ["aria-label", "aria-labelledby", "id", "name", "value", "tabIndex", "disableRipple", "appearance", "checked", "disabled"], outputs: ["change"], exportAs: ["matButtonToggle"] }, { kind: "ngmodule", type: MatTableModule }, { kind: "component", type: i3.MatTable, selector: "mat-table, table[mat-table]", exportAs: ["matTable"] }, { kind: "directive", type: i3.MatHeaderCellDef, selector: "[matHeaderCellDef]" }, { kind: "directive", type: i3.MatHeaderRowDef, selector: "[matHeaderRowDef]", inputs: ["matHeaderRowDef", "matHeaderRowDefSticky"] }, { kind: "directive", type: i3.MatColumnDef, selector: "[matColumnDef]", inputs: ["sticky", "matColumnDef"] }, { kind: "directive", type: i3.MatCellDef, selector: "[matCellDef]" }, { kind: "directive", type: i3.MatRowDef, selector: "[matRowDef]", inputs: ["matRowDefColumns", "matRowDefWhen"] }, { kind: "directive", type: i3.MatFooterCellDef, selector: "[matFooterCellDef]" }, { kind: "directive", type: i3.MatFooterRowDef, selector: "[matFooterRowDef]", inputs: ["matFooterRowDef", "matFooterRowDefSticky"] }, { kind: "directive", type: i3.MatHeaderCell, selector: "mat-header-cell, th[mat-header-cell]" }, { kind: "directive", type: i3.MatCell, selector: "mat-cell, td[mat-cell]" }, { kind: "directive", type: i3.MatFooterCell, selector: "mat-footer-cell, td[mat-footer-cell]" }, { kind: "component", type: i3.MatHeaderRow, selector: "mat-header-row, tr[mat-header-row]", exportAs: ["matHeaderRow"] }, { kind: "component", type: i3.MatRow, selector: "mat-row, tr[mat-row]", exportAs: ["matRow"] }, { kind: "component", type: i3.MatFooterRow, selector: "mat-footer-row, tr[mat-footer-row]", exportAs: ["matFooterRow"] }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.0.4", ngImport: i0, type: TableStickyComplexExample, decorators: [{
            type: Component,
            args: [{ selector: 'table-sticky-complex-example', standalone: true, imports: [MatButtonModule, MatButtonToggleModule, MatTableModule], template: "<div>\r\n  <button mat-raised-button (click)=\"tables.push(tables.length)\">Add table</button>\r\n  <button mat-raised-button (click)=\"tables.pop()\">Remove table</button>\r\n</div>\r\n\r\n<div>\r\n  Sticky Headers:\r\n  <mat-button-toggle-group multiple [value]=\"['header-1']\"\r\n                           #stickyHeaders=\"matButtonToggleGroup\"\r\n                           class=\"example-sticky-toggle-group\">\r\n    <mat-button-toggle value=\"header-1\"> Row 1 </mat-button-toggle>\r\n    <mat-button-toggle value=\"header-2\"> Row 2 </mat-button-toggle>\r\n  </mat-button-toggle-group>\r\n</div>\r\n\r\n<div>\r\n  Sticky Footers:\r\n  <mat-button-toggle-group multiple [value]=\"['footer-1']\"\r\n                           #stickyFooters=\"matButtonToggleGroup\"\r\n                           class=\"example-sticky-toggle-group\">\r\n    <mat-button-toggle value=\"footer-1\"> Row 1 </mat-button-toggle>\r\n    <mat-button-toggle value=\"footer-2\"> Row 2 </mat-button-toggle>\r\n  </mat-button-toggle-group>\r\n</div>\r\n\r\n<div>\r\n  Sticky Columns:\r\n  <mat-button-toggle-group multiple [value]=\"['position', 'symbol']\"\r\n                           #stickyColumns=\"matButtonToggleGroup\"\r\n                           class=\"example-sticky-toggle-group\">\r\n    <mat-button-toggle value=\"position\"> Position </mat-button-toggle>\r\n    <mat-button-toggle value=\"name\"> Name </mat-button-toggle>\r\n    <mat-button-toggle value=\"weight\"> Weight </mat-button-toggle>\r\n    <mat-button-toggle value=\"symbol\"> Symbol </mat-button-toggle>\r\n  </mat-button-toggle-group>\r\n</div>\r\n\r\n<section class=\"example-container mat-elevation-z8\" tabindex=\"0\">\r\n  @for (table of tables; track table) {\r\n    <table mat-table [dataSource]=\"dataSource\">\r\n      <ng-container matColumnDef=\"position\" [sticky]=\"isSticky(stickyColumns, 'position')\">\r\n        <th mat-header-cell *matHeaderCellDef> Position </th>\r\n        <td mat-cell *matCellDef=\"let element\"> {{element.position}} </td>\r\n        <td mat-footer-cell *matFooterCellDef> Position Footer </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"name\" [sticky]=\"isSticky(stickyColumns, 'name')\">\r\n        <th mat-header-cell *matHeaderCellDef> Name </th>\r\n        <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\r\n        <td mat-footer-cell *matFooterCellDef> Name Footer </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"weight\" [stickyEnd]=\"isSticky(stickyColumns, 'weight')\">\r\n        <th mat-header-cell *matHeaderCellDef> Weight </th>\r\n        <td mat-cell *matCellDef=\"let element\"> {{element.weight}} </td>\r\n        <td mat-footer-cell *matFooterCellDef> Weight Footer </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"symbol\" [stickyEnd]=\"isSticky(stickyColumns, 'symbol')\">\r\n        <th mat-header-cell *matHeaderCellDef> Symbol </th>\r\n        <td mat-cell *matCellDef=\"let element\"> {{element.symbol}} </td>\r\n        <td mat-footer-cell *matFooterCellDef> Symbol Footer </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"filler\">\r\n        <th mat-header-cell *matHeaderCellDef> Filler header cell </th>\r\n        <td mat-cell *matCellDef=\"let element\"> Filler data cell </td>\r\n        <td mat-footer-cell *matFooterCellDef> Filler footer cell </td>\r\n      </ng-container>\r\n\r\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: isSticky(stickyHeaders, 'header-1')\"></tr>\r\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: isSticky(stickyHeaders, 'header-2')\"></tr>\r\n\r\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n      <tr mat-footer-row *matFooterRowDef=\"displayedColumns; sticky: isSticky(stickyFooters, 'footer-1')\"></tr>\r\n      <tr mat-footer-row *matFooterRowDef=\"displayedColumns; sticky: isSticky(stickyFooters, 'footer-2')\"></tr>\r\n    </table>\r\n  }\r\n</section>\r\n", styles: [".example-container {\r\n  height: 400px;\r\n  overflow: auto;\r\n}\r\n\r\n.mat-mdc-table-sticky {\r\n  background: #59abfd;\r\n  opacity: 1;\r\n}\r\n\r\n.example-sticky-toggle-group {\r\n  margin: 8px;\r\n}\r\n\r\n.mat-column-filler {\r\n  padding: 0 8px;\r\n  font-size: 10px;\r\n  text-align: center;\r\n}\r\n\r\n.mat-mdc-header-cell, .mat-mdc-footer-cell, .mat-mdc-cell {\r\n  min-width: 80px;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.mat-mdc-table-sticky-border-elem-top {\r\n  border-bottom: 2px solid midnightblue;\r\n}\r\n\r\n.mat-mdc-table-sticky-border-elem-right {\r\n  border-left: 2px solid midnightblue;\r\n}\r\n\r\n.mat-mdc-table-sticky-border-elem-bottom {\r\n  border-top: 2px solid midnightblue;\r\n}\r\n\r\n.mat-mdc-table-sticky-border-elem-left {\r\n  border-right: 2px solid midnightblue;\r\n}\r\n"] }]
        }], ctorParameters: () => [] });
const ELEMENT_DATA = [
    { position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H' },
    { position: 2, name: 'Helium', weight: 4.0026, symbol: 'He' },
    { position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li' },
    { position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be' },
    { position: 5, name: 'Boron', weight: 10.811, symbol: 'B' },
    { position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C' },
    { position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N' },
    { position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O' },
    { position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F' },
    { position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne' },
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFibGUtc3RpY2t5LWNvbXBsZXgtZXhhbXBsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzLWV4YW1wbGVzL21hdGVyaWFsL3RhYmxlL3RhYmxlLXN0aWNreS1jb21wbGV4L3RhYmxlLXN0aWNreS1jb21wbGV4LWV4YW1wbGUudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9zcmMvY29tcG9uZW50cy1leGFtcGxlcy9tYXRlcmlhbC90YWJsZS90YWJsZS1zdGlja3ktY29tcGxleC90YWJsZS1zdGlja3ktY29tcGxleC1leGFtcGxlLmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFDLFNBQVMsRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUN4QyxPQUFPLEVBQXVCLHFCQUFxQixFQUFDLE1BQU0saUNBQWlDLENBQUM7QUFDNUYsT0FBTyxFQUFDLGNBQWMsRUFBQyxNQUFNLHlCQUF5QixDQUFDO0FBQ3ZELE9BQU8sRUFBQyxlQUFlLEVBQUMsTUFBTSwwQkFBMEIsQ0FBQzs7Ozs7QUFFekQ7O0dBRUc7QUFRSCxNQUFNLE9BQU8seUJBQXlCO0lBTXBDO1FBTEEscUJBQWdCLEdBQWEsRUFBRSxDQUFDO1FBQ2hDLGVBQVUsR0FBRyxZQUFZLENBQUM7UUFFMUIsV0FBTSxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFHWCxJQUFJLENBQUMsZ0JBQWdCLENBQUMsTUFBTSxHQUFHLEVBQUUsQ0FBQztRQUNsQyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO1FBRXJDLDBGQUEwRjtRQUMxRixJQUFJLENBQUMsZ0JBQWdCLENBQUMsQ0FBQyxDQUFDLEdBQUcsVUFBVSxDQUFDO1FBQ3RDLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDLENBQUMsR0FBRyxNQUFNLENBQUM7UUFDbEMsSUFBSSxDQUFDLGdCQUFnQixDQUFDLEVBQUUsQ0FBQyxHQUFHLFFBQVEsQ0FBQztRQUNyQyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsRUFBRSxDQUFDLEdBQUcsUUFBUSxDQUFDO0lBQ3ZDLENBQUM7SUFFRCwwRUFBMEU7SUFDMUUsUUFBUSxDQUFDLGlCQUF1QyxFQUFFLEVBQVU7UUFDMUQsT0FBTyxDQUFDLGlCQUFpQixDQUFDLEtBQUssSUFBSSxFQUFFLENBQUMsQ0FBQyxPQUFPLENBQUMsRUFBRSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUM7SUFDNUQsQ0FBQzs4R0FwQlUseUJBQXlCO2tHQUF6Qix5QkFBeUIsd0ZDZnRDLDQ3SEFnRkEsMjJCRG5FWSxlQUFlLDJOQUFFLHFCQUFxQixzaEJBQUUsY0FBYzs7MkZBRXJELHlCQUF5QjtrQkFQckMsU0FBUzsrQkFDRSw4QkFBOEIsY0FHNUIsSUFBSSxXQUNQLENBQUMsZUFBZSxFQUFFLHFCQUFxQixFQUFFLGNBQWMsQ0FBQzs7QUFnQ25FLE1BQU0sWUFBWSxHQUFzQjtJQUN0QyxFQUFDLFFBQVEsRUFBRSxDQUFDLEVBQUUsSUFBSSxFQUFFLFVBQVUsRUFBRSxNQUFNLEVBQUUsTUFBTSxFQUFFLE1BQU0sRUFBRSxHQUFHLEVBQUM7SUFDNUQsRUFBQyxRQUFRLEVBQUUsQ0FBQyxFQUFFLElBQUksRUFBRSxRQUFRLEVBQUUsTUFBTSxFQUFFLE1BQU0sRUFBRSxNQUFNLEVBQUUsSUFBSSxFQUFDO0lBQzNELEVBQUMsUUFBUSxFQUFFLENBQUMsRUFBRSxJQUFJLEVBQUUsU0FBUyxFQUFFLE1BQU0sRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLElBQUksRUFBQztJQUMzRCxFQUFDLFFBQVEsRUFBRSxDQUFDLEVBQUUsSUFBSSxFQUFFLFdBQVcsRUFBRSxNQUFNLEVBQUUsTUFBTSxFQUFFLE1BQU0sRUFBRSxJQUFJLEVBQUM7SUFDOUQsRUFBQyxRQUFRLEVBQUUsQ0FBQyxFQUFFLElBQUksRUFBRSxPQUFPLEVBQUUsTUFBTSxFQUFFLE1BQU0sRUFBRSxNQUFNLEVBQUUsR0FBRyxFQUFDO0lBQ3pELEVBQUMsUUFBUSxFQUFFLENBQUMsRUFBRSxJQUFJLEVBQUUsUUFBUSxFQUFFLE1BQU0sRUFBRSxPQUFPLEVBQUUsTUFBTSxFQUFFLEdBQUcsRUFBQztJQUMzRCxFQUFDLFFBQVEsRUFBRSxDQUFDLEVBQUUsSUFBSSxFQUFFLFVBQVUsRUFBRSxNQUFNLEVBQUUsT0FBTyxFQUFFLE1BQU0sRUFBRSxHQUFHLEVBQUM7SUFDN0QsRUFBQyxRQUFRLEVBQUUsQ0FBQyxFQUFFLElBQUksRUFBRSxRQUFRLEVBQUUsTUFBTSxFQUFFLE9BQU8sRUFBRSxNQUFNLEVBQUUsR0FBRyxFQUFDO0lBQzNELEVBQUMsUUFBUSxFQUFFLENBQUMsRUFBRSxJQUFJLEVBQUUsVUFBVSxFQUFFLE1BQU0sRUFBRSxPQUFPLEVBQUUsTUFBTSxFQUFFLEdBQUcsRUFBQztJQUM3RCxFQUFDLFFBQVEsRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLE1BQU0sRUFBRSxNQUFNLEVBQUUsT0FBTyxFQUFFLE1BQU0sRUFBRSxJQUFJLEVBQUM7Q0FDNUQsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q29tcG9uZW50fSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHtNYXRCdXR0b25Ub2dnbGVHcm91cCwgTWF0QnV0dG9uVG9nZ2xlTW9kdWxlfSBmcm9tICdAYW5ndWxhci9tYXRlcmlhbC9idXR0b24tdG9nZ2xlJztcclxuaW1wb3J0IHtNYXRUYWJsZU1vZHVsZX0gZnJvbSAnQGFuZ3VsYXIvbWF0ZXJpYWwvdGFibGUnO1xyXG5pbXBvcnQge01hdEJ1dHRvbk1vZHVsZX0gZnJvbSAnQGFuZ3VsYXIvbWF0ZXJpYWwvYnV0dG9uJztcclxuXHJcbi8qKlxyXG4gKiBAdGl0bGUgVGFibGVzIHdpdGggdG9nZ2xlLWFibGUgc3RpY2t5IGhlYWRlcnMsIGZvb3RlcnMsIGFuZCBjb2x1bW5zXHJcbiAqL1xyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ3RhYmxlLXN0aWNreS1jb21wbGV4LWV4YW1wbGUnLFxyXG4gIHN0eWxlVXJsczogWyd0YWJsZS1zdGlja3ktY29tcGxleC1leGFtcGxlLmNzcyddLFxyXG4gIHRlbXBsYXRlVXJsOiAndGFibGUtc3RpY2t5LWNvbXBsZXgtZXhhbXBsZS5odG1sJyxcclxuICBzdGFuZGFsb25lOiB0cnVlLFxyXG4gIGltcG9ydHM6IFtNYXRCdXR0b25Nb2R1bGUsIE1hdEJ1dHRvblRvZ2dsZU1vZHVsZSwgTWF0VGFibGVNb2R1bGVdLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgVGFibGVTdGlja3lDb21wbGV4RXhhbXBsZSB7XHJcbiAgZGlzcGxheWVkQ29sdW1uczogc3RyaW5nW10gPSBbXTtcclxuICBkYXRhU291cmNlID0gRUxFTUVOVF9EQVRBO1xyXG5cclxuICB0YWJsZXMgPSBbMF07XHJcblxyXG4gIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgdGhpcy5kaXNwbGF5ZWRDb2x1bW5zLmxlbmd0aCA9IDI0O1xyXG4gICAgdGhpcy5kaXNwbGF5ZWRDb2x1bW5zLmZpbGwoJ2ZpbGxlcicpO1xyXG5cclxuICAgIC8vIFRoZSBmaXJzdCB0d28gY29sdW1ucyBzaG91bGQgYmUgcG9zaXRpb24gYW5kIG5hbWU7IHRoZSBsYXN0IHR3byBjb2x1bW5zOiB3ZWlnaHQsIHN5bWJvbFxyXG4gICAgdGhpcy5kaXNwbGF5ZWRDb2x1bW5zWzBdID0gJ3Bvc2l0aW9uJztcclxuICAgIHRoaXMuZGlzcGxheWVkQ29sdW1uc1sxXSA9ICduYW1lJztcclxuICAgIHRoaXMuZGlzcGxheWVkQ29sdW1uc1syMl0gPSAnd2VpZ2h0JztcclxuICAgIHRoaXMuZGlzcGxheWVkQ29sdW1uc1syM10gPSAnc3ltYm9sJztcclxuICB9XHJcblxyXG4gIC8qKiBXaGV0aGVyIHRoZSBidXR0b24gdG9nZ2xlIGdyb3VwIGNvbnRhaW5zIHRoZSBpZCBhcyBhbiBhY3RpdmUgdmFsdWUuICovXHJcbiAgaXNTdGlja3koYnV0dG9uVG9nZ2xlR3JvdXA6IE1hdEJ1dHRvblRvZ2dsZUdyb3VwLCBpZDogc3RyaW5nKSB7XHJcbiAgICByZXR1cm4gKGJ1dHRvblRvZ2dsZUdyb3VwLnZhbHVlIHx8IFtdKS5pbmRleE9mKGlkKSAhPT0gLTE7XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIFBlcmlvZGljRWxlbWVudCB7XHJcbiAgbmFtZTogc3RyaW5nO1xyXG4gIHBvc2l0aW9uOiBudW1iZXI7XHJcbiAgd2VpZ2h0OiBudW1iZXI7XHJcbiAgc3ltYm9sOiBzdHJpbmc7XHJcbn1cclxuXHJcbmNvbnN0IEVMRU1FTlRfREFUQTogUGVyaW9kaWNFbGVtZW50W10gPSBbXHJcbiAge3Bvc2l0aW9uOiAxLCBuYW1lOiAnSHlkcm9nZW4nLCB3ZWlnaHQ6IDEuMDA3OSwgc3ltYm9sOiAnSCd9LFxyXG4gIHtwb3NpdGlvbjogMiwgbmFtZTogJ0hlbGl1bScsIHdlaWdodDogNC4wMDI2LCBzeW1ib2w6ICdIZSd9LFxyXG4gIHtwb3NpdGlvbjogMywgbmFtZTogJ0xpdGhpdW0nLCB3ZWlnaHQ6IDYuOTQxLCBzeW1ib2w6ICdMaSd9LFxyXG4gIHtwb3NpdGlvbjogNCwgbmFtZTogJ0JlcnlsbGl1bScsIHdlaWdodDogOS4wMTIyLCBzeW1ib2w6ICdCZSd9LFxyXG4gIHtwb3NpdGlvbjogNSwgbmFtZTogJ0Jvcm9uJywgd2VpZ2h0OiAxMC44MTEsIHN5bWJvbDogJ0InfSxcclxuICB7cG9zaXRpb246IDYsIG5hbWU6ICdDYXJib24nLCB3ZWlnaHQ6IDEyLjAxMDcsIHN5bWJvbDogJ0MnfSxcclxuICB7cG9zaXRpb246IDcsIG5hbWU6ICdOaXRyb2dlbicsIHdlaWdodDogMTQuMDA2Nywgc3ltYm9sOiAnTid9LFxyXG4gIHtwb3NpdGlvbjogOCwgbmFtZTogJ094eWdlbicsIHdlaWdodDogMTUuOTk5NCwgc3ltYm9sOiAnTyd9LFxyXG4gIHtwb3NpdGlvbjogOSwgbmFtZTogJ0ZsdW9yaW5lJywgd2VpZ2h0OiAxOC45OTg0LCBzeW1ib2w6ICdGJ30sXHJcbiAge3Bvc2l0aW9uOiAxMCwgbmFtZTogJ05lb24nLCB3ZWlnaHQ6IDIwLjE3OTcsIHN5bWJvbDogJ05lJ30sXHJcbl07XHJcbiIsIjxkaXY+XHJcbiAgPGJ1dHRvbiBtYXQtcmFpc2VkLWJ1dHRvbiAoY2xpY2spPVwidGFibGVzLnB1c2godGFibGVzLmxlbmd0aClcIj5BZGQgdGFibGU8L2J1dHRvbj5cclxuICA8YnV0dG9uIG1hdC1yYWlzZWQtYnV0dG9uIChjbGljayk9XCJ0YWJsZXMucG9wKClcIj5SZW1vdmUgdGFibGU8L2J1dHRvbj5cclxuPC9kaXY+XHJcblxyXG48ZGl2PlxyXG4gIFN0aWNreSBIZWFkZXJzOlxyXG4gIDxtYXQtYnV0dG9uLXRvZ2dsZS1ncm91cCBtdWx0aXBsZSBbdmFsdWVdPVwiWydoZWFkZXItMSddXCJcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgI3N0aWNreUhlYWRlcnM9XCJtYXRCdXR0b25Ub2dnbGVHcm91cFwiXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPVwiZXhhbXBsZS1zdGlja3ktdG9nZ2xlLWdyb3VwXCI+XHJcbiAgICA8bWF0LWJ1dHRvbi10b2dnbGUgdmFsdWU9XCJoZWFkZXItMVwiPiBSb3cgMSA8L21hdC1idXR0b24tdG9nZ2xlPlxyXG4gICAgPG1hdC1idXR0b24tdG9nZ2xlIHZhbHVlPVwiaGVhZGVyLTJcIj4gUm93IDIgPC9tYXQtYnV0dG9uLXRvZ2dsZT5cclxuICA8L21hdC1idXR0b24tdG9nZ2xlLWdyb3VwPlxyXG48L2Rpdj5cclxuXHJcbjxkaXY+XHJcbiAgU3RpY2t5IEZvb3RlcnM6XHJcbiAgPG1hdC1idXR0b24tdG9nZ2xlLWdyb3VwIG11bHRpcGxlIFt2YWx1ZV09XCJbJ2Zvb3Rlci0xJ11cIlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAjc3RpY2t5Rm9vdGVycz1cIm1hdEJ1dHRvblRvZ2dsZUdyb3VwXCJcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9XCJleGFtcGxlLXN0aWNreS10b2dnbGUtZ3JvdXBcIj5cclxuICAgIDxtYXQtYnV0dG9uLXRvZ2dsZSB2YWx1ZT1cImZvb3Rlci0xXCI+IFJvdyAxIDwvbWF0LWJ1dHRvbi10b2dnbGU+XHJcbiAgICA8bWF0LWJ1dHRvbi10b2dnbGUgdmFsdWU9XCJmb290ZXItMlwiPiBSb3cgMiA8L21hdC1idXR0b24tdG9nZ2xlPlxyXG4gIDwvbWF0LWJ1dHRvbi10b2dnbGUtZ3JvdXA+XHJcbjwvZGl2PlxyXG5cclxuPGRpdj5cclxuICBTdGlja3kgQ29sdW1uczpcclxuICA8bWF0LWJ1dHRvbi10b2dnbGUtZ3JvdXAgbXVsdGlwbGUgW3ZhbHVlXT1cIlsncG9zaXRpb24nLCAnc3ltYm9sJ11cIlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAjc3RpY2t5Q29sdW1ucz1cIm1hdEJ1dHRvblRvZ2dsZUdyb3VwXCJcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9XCJleGFtcGxlLXN0aWNreS10b2dnbGUtZ3JvdXBcIj5cclxuICAgIDxtYXQtYnV0dG9uLXRvZ2dsZSB2YWx1ZT1cInBvc2l0aW9uXCI+IFBvc2l0aW9uIDwvbWF0LWJ1dHRvbi10b2dnbGU+XHJcbiAgICA8bWF0LWJ1dHRvbi10b2dnbGUgdmFsdWU9XCJuYW1lXCI+IE5hbWUgPC9tYXQtYnV0dG9uLXRvZ2dsZT5cclxuICAgIDxtYXQtYnV0dG9uLXRvZ2dsZSB2YWx1ZT1cIndlaWdodFwiPiBXZWlnaHQgPC9tYXQtYnV0dG9uLXRvZ2dsZT5cclxuICAgIDxtYXQtYnV0dG9uLXRvZ2dsZSB2YWx1ZT1cInN5bWJvbFwiPiBTeW1ib2wgPC9tYXQtYnV0dG9uLXRvZ2dsZT5cclxuICA8L21hdC1idXR0b24tdG9nZ2xlLWdyb3VwPlxyXG48L2Rpdj5cclxuXHJcbjxzZWN0aW9uIGNsYXNzPVwiZXhhbXBsZS1jb250YWluZXIgbWF0LWVsZXZhdGlvbi16OFwiIHRhYmluZGV4PVwiMFwiPlxyXG4gIEBmb3IgKHRhYmxlIG9mIHRhYmxlczsgdHJhY2sgdGFibGUpIHtcclxuICAgIDx0YWJsZSBtYXQtdGFibGUgW2RhdGFTb3VyY2VdPVwiZGF0YVNvdXJjZVwiPlxyXG4gICAgICA8bmctY29udGFpbmVyIG1hdENvbHVtbkRlZj1cInBvc2l0aW9uXCIgW3N0aWNreV09XCJpc1N0aWNreShzdGlja3lDb2x1bW5zLCAncG9zaXRpb24nKVwiPlxyXG4gICAgICAgIDx0aCBtYXQtaGVhZGVyLWNlbGwgKm1hdEhlYWRlckNlbGxEZWY+IFBvc2l0aW9uIDwvdGg+XHJcbiAgICAgICAgPHRkIG1hdC1jZWxsICptYXRDZWxsRGVmPVwibGV0IGVsZW1lbnRcIj4ge3tlbGVtZW50LnBvc2l0aW9ufX0gPC90ZD5cclxuICAgICAgICA8dGQgbWF0LWZvb3Rlci1jZWxsICptYXRGb290ZXJDZWxsRGVmPiBQb3NpdGlvbiBGb290ZXIgPC90ZD5cclxuICAgICAgPC9uZy1jb250YWluZXI+XHJcblxyXG4gICAgICA8bmctY29udGFpbmVyIG1hdENvbHVtbkRlZj1cIm5hbWVcIiBbc3RpY2t5XT1cImlzU3RpY2t5KHN0aWNreUNvbHVtbnMsICduYW1lJylcIj5cclxuICAgICAgICA8dGggbWF0LWhlYWRlci1jZWxsICptYXRIZWFkZXJDZWxsRGVmPiBOYW1lIDwvdGg+XHJcbiAgICAgICAgPHRkIG1hdC1jZWxsICptYXRDZWxsRGVmPVwibGV0IGVsZW1lbnRcIj4ge3tlbGVtZW50Lm5hbWV9fSA8L3RkPlxyXG4gICAgICAgIDx0ZCBtYXQtZm9vdGVyLWNlbGwgKm1hdEZvb3RlckNlbGxEZWY+IE5hbWUgRm9vdGVyIDwvdGQ+XHJcbiAgICAgIDwvbmctY29udGFpbmVyPlxyXG5cclxuICAgICAgPG5nLWNvbnRhaW5lciBtYXRDb2x1bW5EZWY9XCJ3ZWlnaHRcIiBbc3RpY2t5RW5kXT1cImlzU3RpY2t5KHN0aWNreUNvbHVtbnMsICd3ZWlnaHQnKVwiPlxyXG4gICAgICAgIDx0aCBtYXQtaGVhZGVyLWNlbGwgKm1hdEhlYWRlckNlbGxEZWY+IFdlaWdodCA8L3RoPlxyXG4gICAgICAgIDx0ZCBtYXQtY2VsbCAqbWF0Q2VsbERlZj1cImxldCBlbGVtZW50XCI+IHt7ZWxlbWVudC53ZWlnaHR9fSA8L3RkPlxyXG4gICAgICAgIDx0ZCBtYXQtZm9vdGVyLWNlbGwgKm1hdEZvb3RlckNlbGxEZWY+IFdlaWdodCBGb290ZXIgPC90ZD5cclxuICAgICAgPC9uZy1jb250YWluZXI+XHJcblxyXG4gICAgICA8bmctY29udGFpbmVyIG1hdENvbHVtbkRlZj1cInN5bWJvbFwiIFtzdGlja3lFbmRdPVwiaXNTdGlja3koc3RpY2t5Q29sdW1ucywgJ3N5bWJvbCcpXCI+XHJcbiAgICAgICAgPHRoIG1hdC1oZWFkZXItY2VsbCAqbWF0SGVhZGVyQ2VsbERlZj4gU3ltYm9sIDwvdGg+XHJcbiAgICAgICAgPHRkIG1hdC1jZWxsICptYXRDZWxsRGVmPVwibGV0IGVsZW1lbnRcIj4ge3tlbGVtZW50LnN5bWJvbH19IDwvdGQ+XHJcbiAgICAgICAgPHRkIG1hdC1mb290ZXItY2VsbCAqbWF0Rm9vdGVyQ2VsbERlZj4gU3ltYm9sIEZvb3RlciA8L3RkPlxyXG4gICAgICA8L25nLWNvbnRhaW5lcj5cclxuXHJcbiAgICAgIDxuZy1jb250YWluZXIgbWF0Q29sdW1uRGVmPVwiZmlsbGVyXCI+XHJcbiAgICAgICAgPHRoIG1hdC1oZWFkZXItY2VsbCAqbWF0SGVhZGVyQ2VsbERlZj4gRmlsbGVyIGhlYWRlciBjZWxsIDwvdGg+XHJcbiAgICAgICAgPHRkIG1hdC1jZWxsICptYXRDZWxsRGVmPVwibGV0IGVsZW1lbnRcIj4gRmlsbGVyIGRhdGEgY2VsbCA8L3RkPlxyXG4gICAgICAgIDx0ZCBtYXQtZm9vdGVyLWNlbGwgKm1hdEZvb3RlckNlbGxEZWY+IEZpbGxlciBmb290ZXIgY2VsbCA8L3RkPlxyXG4gICAgICA8L25nLWNvbnRhaW5lcj5cclxuXHJcbiAgICAgIDx0ciBtYXQtaGVhZGVyLXJvdyAqbWF0SGVhZGVyUm93RGVmPVwiZGlzcGxheWVkQ29sdW1uczsgc3RpY2t5OiBpc1N0aWNreShzdGlja3lIZWFkZXJzLCAnaGVhZGVyLTEnKVwiPjwvdHI+XHJcbiAgICAgIDx0ciBtYXQtaGVhZGVyLXJvdyAqbWF0SGVhZGVyUm93RGVmPVwiZGlzcGxheWVkQ29sdW1uczsgc3RpY2t5OiBpc1N0aWNreShzdGlja3lIZWFkZXJzLCAnaGVhZGVyLTInKVwiPjwvdHI+XHJcblxyXG4gICAgICA8dHIgbWF0LXJvdyAqbWF0Um93RGVmPVwibGV0IHJvdzsgY29sdW1uczogZGlzcGxheWVkQ29sdW1ucztcIj48L3RyPlxyXG5cclxuICAgICAgPHRyIG1hdC1mb290ZXItcm93ICptYXRGb290ZXJSb3dEZWY9XCJkaXNwbGF5ZWRDb2x1bW5zOyBzdGlja3k6IGlzU3RpY2t5KHN0aWNreUZvb3RlcnMsICdmb290ZXItMScpXCI+PC90cj5cclxuICAgICAgPHRyIG1hdC1mb290ZXItcm93ICptYXRGb290ZXJSb3dEZWY9XCJkaXNwbGF5ZWRDb2x1bW5zOyBzdGlja3k6IGlzU3RpY2t5KHN0aWNreUZvb3RlcnMsICdmb290ZXItMicpXCI+PC90cj5cclxuICAgIDwvdGFibGU+XHJcbiAgfVxyXG48L3NlY3Rpb24+XHJcbiJdfQ==