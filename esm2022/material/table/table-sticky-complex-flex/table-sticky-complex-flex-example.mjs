import { Component } from '@angular/core';
import { MatButtonToggleModule } from '@angular/material/button-toggle';
import { MatTableModule } from '@angular/material/table';
import { MatButtonModule } from '@angular/material/button';
import * as i0 from "@angular/core";
import * as i1 from "@angular/material/button";
import * as i2 from "@angular/material/button-toggle";
import * as i3 from "@angular/material/table";
/**
 * @title Flex-layout tables with toggle-able sticky headers, footers, and columns
 */
export class TableStickyComplexFlexExample {
    constructor() {
        this.displayedColumns = [];
        this.dataSource = ELEMENT_DATA;
        this.tables = [0];
        this.displayedColumns.length = 24;
        this.displayedColumns.fill('filler');
        // The first two columns should be position and name; the last two columns: weight, symbol
        this.displayedColumns[0] = 'position';
        this.displayedColumns[1] = 'name';
        this.displayedColumns[22] = 'weight';
        this.displayedColumns[23] = 'symbol';
    }
    /** Whether the button toggle group contains the id as an active value. */
    isSticky(buttonToggleGroup, id) {
        return (buttonToggleGroup.value || []).indexOf(id) !== -1;
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.0.4", ngImport: i0, type: TableStickyComplexFlexExample, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.0.0", version: "17.0.4", type: TableStickyComplexFlexExample, isStandalone: true, selector: "table-sticky-complex-flex-example", ngImport: i0, template: "<div>\r\n  <button mat-raised-button (click)=\"tables.push(tables.length)\">Add table</button>\r\n  <button mat-raised-button (click)=\"tables.pop()\">Remove table</button>\r\n</div>\r\n\r\n<div>\r\n  Sticky Headers:\r\n  <mat-button-toggle-group multiple [value]=\"['header-1']\"\r\n                           #stickyHeaders=\"matButtonToggleGroup\"\r\n                           class=\"example-sticky-toggle-group\">\r\n    <mat-button-toggle value=\"header-1\"> Row 1 </mat-button-toggle>\r\n    <mat-button-toggle value=\"header-2\"> Row 2 </mat-button-toggle>\r\n  </mat-button-toggle-group>\r\n</div>\r\n\r\n<div>\r\n  Sticky Footers:\r\n  <mat-button-toggle-group multiple [value]=\"['footer-1']\"\r\n                           #stickyFooters=\"matButtonToggleGroup\"\r\n                           class=\"example-sticky-toggle-group\">\r\n    <mat-button-toggle value=\"footer-1\"> Row 1 </mat-button-toggle>\r\n    <mat-button-toggle value=\"footer-2\"> Row 2 </mat-button-toggle>\r\n  </mat-button-toggle-group>\r\n</div>\r\n\r\n<div>\r\n  Sticky Columns:\r\n  <mat-button-toggle-group multiple [value]=\"['position', 'symbol']\"\r\n                           #stickyColumns=\"matButtonToggleGroup\"\r\n                           class=\"example-sticky-toggle-group\">\r\n    <mat-button-toggle value=\"position\"> Position </mat-button-toggle>\r\n    <mat-button-toggle value=\"name\"> Name </mat-button-toggle>\r\n    <mat-button-toggle value=\"weight\"> Weight </mat-button-toggle>\r\n    <mat-button-toggle value=\"symbol\"> Symbol </mat-button-toggle>\r\n  </mat-button-toggle-group>\r\n</div>\r\n\r\n<section class=\"example-container mat-elevation-z8\" tabindex=\"0\">\r\n  @for (table of tables; track table) {\r\n    <mat-table [dataSource]=\"dataSource\">\r\n      <ng-container matColumnDef=\"position\" [sticky]=\"isSticky(stickyColumns, 'position')\">\r\n        <mat-header-cell *matHeaderCellDef> Position </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\"> {{element.position}} </mat-cell>\r\n        <mat-footer-cell *matFooterCellDef> Position Footer </mat-footer-cell>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"name\" [sticky]=\"isSticky(stickyColumns, 'name')\">\r\n        <mat-header-cell *matHeaderCellDef> Name </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\"> {{element.name}} </mat-cell>\r\n        <mat-footer-cell *matFooterCellDef> Name Footer </mat-footer-cell>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"weight\" [stickyEnd]=\"isSticky(stickyColumns, 'weight')\">\r\n        <mat-header-cell *matHeaderCellDef> Weight </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\"> {{element.weight}} </mat-cell>\r\n        <mat-footer-cell *matFooterCellDef> Weight Footer </mat-footer-cell>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"symbol\" [stickyEnd]=\"isSticky(stickyColumns, 'symbol')\">\r\n        <mat-header-cell *matHeaderCellDef> Symbol </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\"> {{element.symbol}} </mat-cell>\r\n        <mat-footer-cell *matFooterCellDef> Symbol Footer </mat-footer-cell>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"filler\">\r\n        <mat-header-cell *matHeaderCellDef> Filler header cell </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\"> Filler data cell </mat-cell>\r\n        <mat-footer-cell *matFooterCellDef> Filler footer cell </mat-footer-cell>\r\n      </ng-container>\r\n\r\n      <mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: isSticky(stickyHeaders, 'header-1')\"></mat-header-row>\r\n      <mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: isSticky(stickyHeaders, 'header-2')\"></mat-header-row>\r\n\r\n      <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n\r\n      <mat-footer-row *matFooterRowDef=\"displayedColumns; sticky: isSticky(stickyFooters, 'footer-1')\"></mat-footer-row>\r\n      <mat-footer-row *matFooterRowDef=\"displayedColumns; sticky: isSticky(stickyFooters, 'footer-2')\"></mat-footer-row>\r\n    </mat-table>\r\n  }\r\n</section>\r\n", styles: [".example-container {\r\n  height: 400px;\r\n  overflow: auto;\r\n}\r\n\r\n.mat-mdc-table-sticky {\r\n  background: #59abfd;\r\n  opacity: 1;\r\n}\r\n\r\n.example-sticky-toggle-group {\r\n  margin: 8px;\r\n}\r\n\r\n.mat-column-filler {\r\n  padding: 0 8px;\r\n  font-size: 10px;\r\n  text-align: center;\r\n}\r\n\r\n.mat-mdc-header-cell, .mat-mdc-footer-cell, .mat-mdc-cell {\r\n  min-width: 80px;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.mat-mdc-header-row, .mat-mdc-footer-row, .mat-mdc-row {\r\n  min-width: 1920px; /* 24 columns, 80px each */\r\n}\r\n\r\n.mat-mdc-table-sticky-border-elem-top {\r\n  border-bottom: 2px solid midnightblue;\r\n}\r\n\r\n.mat-mdc-table-sticky-border-elem-right {\r\n  border-left: 2px solid midnightblue;\r\n}\r\n\r\n.mat-mdc-table-sticky-border-elem-bottom {\r\n  border-top: 2px solid midnightblue;\r\n}\r\n\r\n.mat-mdc-table-sticky-border-elem-left {\r\n  border-right: 2px solid midnightblue;\r\n}\r\n"], dependencies: [{ kind: "ngmodule", type: MatButtonModule }, { kind: "component", type: i1.MatButton, selector: "    button[mat-button], button[mat-raised-button], button[mat-flat-button],    button[mat-stroked-button]  ", exportAs: ["matButton"] }, { kind: "ngmodule", type: MatButtonToggleModule }, { kind: "directive", type: i2.MatButtonToggleGroup, selector: "mat-button-toggle-group", inputs: ["appearance", "name", "vertical", "value", "multiple", "disabled"], outputs: ["valueChange", "change"], exportAs: ["matButtonToggleGroup"] }, { kind: "component", type: i2.MatButtonToggle, selector: "mat-button-toggle", inputs: ["aria-label", "aria-labelledby", "id", "name", "value", "tabIndex", "disableRipple", "appearance", "checked", "disabled"], outputs: ["change"], exportAs: ["matButtonToggle"] }, { kind: "ngmodule", type: MatTableModule }, { kind: "component", type: i3.MatTable, selector: "mat-table, table[mat-table]", exportAs: ["matTable"] }, { kind: "directive", type: i3.MatHeaderCellDef, selector: "[matHeaderCellDef]" }, { kind: "directive", type: i3.MatHeaderRowDef, selector: "[matHeaderRowDef]", inputs: ["matHeaderRowDef", "matHeaderRowDefSticky"] }, { kind: "directive", type: i3.MatColumnDef, selector: "[matColumnDef]", inputs: ["sticky", "matColumnDef"] }, { kind: "directive", type: i3.MatCellDef, selector: "[matCellDef]" }, { kind: "directive", type: i3.MatRowDef, selector: "[matRowDef]", inputs: ["matRowDefColumns", "matRowDefWhen"] }, { kind: "directive", type: i3.MatFooterCellDef, selector: "[matFooterCellDef]" }, { kind: "directive", type: i3.MatFooterRowDef, selector: "[matFooterRowDef]", inputs: ["matFooterRowDef", "matFooterRowDefSticky"] }, { kind: "directive", type: i3.MatHeaderCell, selector: "mat-header-cell, th[mat-header-cell]" }, { kind: "directive", type: i3.MatCell, selector: "mat-cell, td[mat-cell]" }, { kind: "directive", type: i3.MatFooterCell, selector: "mat-footer-cell, td[mat-footer-cell]" }, { kind: "component", type: i3.MatHeaderRow, selector: "mat-header-row, tr[mat-header-row]", exportAs: ["matHeaderRow"] }, { kind: "component", type: i3.MatRow, selector: "mat-row, tr[mat-row]", exportAs: ["matRow"] }, { kind: "component", type: i3.MatFooterRow, selector: "mat-footer-row, tr[mat-footer-row]", exportAs: ["matFooterRow"] }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.0.4", ngImport: i0, type: TableStickyComplexFlexExample, decorators: [{
            type: Component,
            args: [{ selector: 'table-sticky-complex-flex-example', standalone: true, imports: [MatButtonModule, MatButtonToggleModule, MatTableModule], template: "<div>\r\n  <button mat-raised-button (click)=\"tables.push(tables.length)\">Add table</button>\r\n  <button mat-raised-button (click)=\"tables.pop()\">Remove table</button>\r\n</div>\r\n\r\n<div>\r\n  Sticky Headers:\r\n  <mat-button-toggle-group multiple [value]=\"['header-1']\"\r\n                           #stickyHeaders=\"matButtonToggleGroup\"\r\n                           class=\"example-sticky-toggle-group\">\r\n    <mat-button-toggle value=\"header-1\"> Row 1 </mat-button-toggle>\r\n    <mat-button-toggle value=\"header-2\"> Row 2 </mat-button-toggle>\r\n  </mat-button-toggle-group>\r\n</div>\r\n\r\n<div>\r\n  Sticky Footers:\r\n  <mat-button-toggle-group multiple [value]=\"['footer-1']\"\r\n                           #stickyFooters=\"matButtonToggleGroup\"\r\n                           class=\"example-sticky-toggle-group\">\r\n    <mat-button-toggle value=\"footer-1\"> Row 1 </mat-button-toggle>\r\n    <mat-button-toggle value=\"footer-2\"> Row 2 </mat-button-toggle>\r\n  </mat-button-toggle-group>\r\n</div>\r\n\r\n<div>\r\n  Sticky Columns:\r\n  <mat-button-toggle-group multiple [value]=\"['position', 'symbol']\"\r\n                           #stickyColumns=\"matButtonToggleGroup\"\r\n                           class=\"example-sticky-toggle-group\">\r\n    <mat-button-toggle value=\"position\"> Position </mat-button-toggle>\r\n    <mat-button-toggle value=\"name\"> Name </mat-button-toggle>\r\n    <mat-button-toggle value=\"weight\"> Weight </mat-button-toggle>\r\n    <mat-button-toggle value=\"symbol\"> Symbol </mat-button-toggle>\r\n  </mat-button-toggle-group>\r\n</div>\r\n\r\n<section class=\"example-container mat-elevation-z8\" tabindex=\"0\">\r\n  @for (table of tables; track table) {\r\n    <mat-table [dataSource]=\"dataSource\">\r\n      <ng-container matColumnDef=\"position\" [sticky]=\"isSticky(stickyColumns, 'position')\">\r\n        <mat-header-cell *matHeaderCellDef> Position </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\"> {{element.position}} </mat-cell>\r\n        <mat-footer-cell *matFooterCellDef> Position Footer </mat-footer-cell>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"name\" [sticky]=\"isSticky(stickyColumns, 'name')\">\r\n        <mat-header-cell *matHeaderCellDef> Name </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\"> {{element.name}} </mat-cell>\r\n        <mat-footer-cell *matFooterCellDef> Name Footer </mat-footer-cell>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"weight\" [stickyEnd]=\"isSticky(stickyColumns, 'weight')\">\r\n        <mat-header-cell *matHeaderCellDef> Weight </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\"> {{element.weight}} </mat-cell>\r\n        <mat-footer-cell *matFooterCellDef> Weight Footer </mat-footer-cell>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"symbol\" [stickyEnd]=\"isSticky(stickyColumns, 'symbol')\">\r\n        <mat-header-cell *matHeaderCellDef> Symbol </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\"> {{element.symbol}} </mat-cell>\r\n        <mat-footer-cell *matFooterCellDef> Symbol Footer </mat-footer-cell>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"filler\">\r\n        <mat-header-cell *matHeaderCellDef> Filler header cell </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\"> Filler data cell </mat-cell>\r\n        <mat-footer-cell *matFooterCellDef> Filler footer cell </mat-footer-cell>\r\n      </ng-container>\r\n\r\n      <mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: isSticky(stickyHeaders, 'header-1')\"></mat-header-row>\r\n      <mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: isSticky(stickyHeaders, 'header-2')\"></mat-header-row>\r\n\r\n      <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n\r\n      <mat-footer-row *matFooterRowDef=\"displayedColumns; sticky: isSticky(stickyFooters, 'footer-1')\"></mat-footer-row>\r\n      <mat-footer-row *matFooterRowDef=\"displayedColumns; sticky: isSticky(stickyFooters, 'footer-2')\"></mat-footer-row>\r\n    </mat-table>\r\n  }\r\n</section>\r\n", styles: [".example-container {\r\n  height: 400px;\r\n  overflow: auto;\r\n}\r\n\r\n.mat-mdc-table-sticky {\r\n  background: #59abfd;\r\n  opacity: 1;\r\n}\r\n\r\n.example-sticky-toggle-group {\r\n  margin: 8px;\r\n}\r\n\r\n.mat-column-filler {\r\n  padding: 0 8px;\r\n  font-size: 10px;\r\n  text-align: center;\r\n}\r\n\r\n.mat-mdc-header-cell, .mat-mdc-footer-cell, .mat-mdc-cell {\r\n  min-width: 80px;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.mat-mdc-header-row, .mat-mdc-footer-row, .mat-mdc-row {\r\n  min-width: 1920px; /* 24 columns, 80px each */\r\n}\r\n\r\n.mat-mdc-table-sticky-border-elem-top {\r\n  border-bottom: 2px solid midnightblue;\r\n}\r\n\r\n.mat-mdc-table-sticky-border-elem-right {\r\n  border-left: 2px solid midnightblue;\r\n}\r\n\r\n.mat-mdc-table-sticky-border-elem-bottom {\r\n  border-top: 2px solid midnightblue;\r\n}\r\n\r\n.mat-mdc-table-sticky-border-elem-left {\r\n  border-right: 2px solid midnightblue;\r\n}\r\n"] }]
        }], ctorParameters: () => [] });
const ELEMENT_DATA = [
    { position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H' },
    { position: 2, name: 'Helium', weight: 4.0026, symbol: 'He' },
    { position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li' },
    { position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be' },
    { position: 5, name: 'Boron', weight: 10.811, symbol: 'B' },
    { position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C' },
    { position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N' },
    { position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O' },
    { position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F' },
    { position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne' },
];
//# sourceMappingURL=data:application/json;base64,