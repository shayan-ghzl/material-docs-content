import { Component } from '@angular/core';
import { CurrencyPipe } from '@angular/common';
import { MatTableModule } from '@angular/material/table';
import * as i0 from "@angular/core";
import * as i1 from "@angular/material/table";
/**
 * @title Table with multiple header and footer rows
 */
export class TableMultipleHeaderFooterExample {
    constructor() {
        this.displayedColumns = ['item', 'cost'];
        this.transactions = [
            { item: 'Beach ball', cost: 4 },
            { item: 'Towel', cost: 5 },
            { item: 'Frisbee', cost: 2 },
            { item: 'Sunscreen', cost: 4 },
            { item: 'Cooler', cost: 25 },
            { item: 'Swim suit', cost: 15 },
        ];
    }
    /** Gets the total cost of all transactions. */
    getTotalCost() {
        return this.transactions.map(t => t.cost).reduce((acc, value) => acc + value, 0);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.0.4", ngImport: i0, type: TableMultipleHeaderFooterExample, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "17.0.4", type: TableMultipleHeaderFooterExample, isStandalone: true, selector: "table-multiple-header-footer-example", ngImport: i0, template: "<table mat-table [dataSource]=\"transactions\" class=\"mat-elevation-z8\">\r\n  <!-- Item Column -->\r\n  <ng-container matColumnDef=\"item\">\r\n    <th mat-header-cell *matHeaderCellDef> Item </th>\r\n    <td mat-cell *matCellDef=\"let transaction\"> {{transaction.item}} </td>\r\n    <td mat-footer-cell *matFooterCellDef> Total </td>\r\n  </ng-container>\r\n\r\n  <!-- Cost Column -->\r\n  <ng-container matColumnDef=\"cost\">\r\n    <th mat-header-cell *matHeaderCellDef> Cost </th>\r\n    <td mat-cell *matCellDef=\"let transaction\"> {{transaction.cost | currency}} </td>\r\n    <td mat-footer-cell *matFooterCellDef> {{getTotalCost() | currency}} </td>\r\n  </ng-container>\r\n\r\n  <!-- Item Description Column -->\r\n  <ng-container matColumnDef=\"item-description\">\r\n    <th mat-header-cell *matHeaderCellDef> Name of the item purchased </th>\r\n  </ng-container>\r\n\r\n  <!-- Cost Description Column -->\r\n  <ng-container matColumnDef=\"cost-description\">\r\n    <th mat-header-cell *matHeaderCellDef> Cost of the item in USD </th>\r\n  </ng-container>\r\n\r\n  <!-- Disclaimer column -->\r\n  <ng-container matColumnDef=\"disclaimer\">\r\n    <td mat-footer-cell *matFooterCellDef colspan=\"2\">\r\n      Please note that the cost of items displayed are completely and totally made up.\r\n    </td>\r\n  </ng-container>\r\n\r\n  <!-- The table will render two header rows, one data row per data object, and two footer rows. -->\r\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"\r\n      class=\"example-first-header-row\">\r\n  </tr>\r\n  <tr mat-header-row *matHeaderRowDef=\"['item-description', 'cost-description']\"\r\n      class=\"example-second-header-row\">\r\n  </tr>\r\n\r\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n  <tr mat-footer-row *matFooterRowDef=\"displayedColumns\" class=\"example-first-footer-row\"></tr>\r\n  <tr mat-footer-row *matFooterRowDef=\"['disclaimer']\" class=\"example-second-footer-row\"></tr>\r\n</table>\r\n", styles: ["table {\r\n  width: 100%;\r\n}\r\n\r\n.example-first-header-row th {\r\n  border-bottom: none;\r\n}\r\n\r\n.example-second-header-row {\r\n  font-style: italic;\r\n}\r\n\r\n.example-first-footer-row {\r\n  font-weight: bold;\r\n}\r\n\r\n.example-second-footer-row td {\r\n  font-style: italic;\r\n}\r\n"], dependencies: [{ kind: "ngmodule", type: MatTableModule }, { kind: "component", type: i1.MatTable, selector: "mat-table, table[mat-table]", exportAs: ["matTable"] }, { kind: "directive", type: i1.MatHeaderCellDef, selector: "[matHeaderCellDef]" }, { kind: "directive", type: i1.MatHeaderRowDef, selector: "[matHeaderRowDef]", inputs: ["matHeaderRowDef", "matHeaderRowDefSticky"] }, { kind: "directive", type: i1.MatColumnDef, selector: "[matColumnDef]", inputs: ["sticky", "matColumnDef"] }, { kind: "directive", type: i1.MatCellDef, selector: "[matCellDef]" }, { kind: "directive", type: i1.MatRowDef, selector: "[matRowDef]", inputs: ["matRowDefColumns", "matRowDefWhen"] }, { kind: "directive", type: i1.MatFooterCellDef, selector: "[matFooterCellDef]" }, { kind: "directive", type: i1.MatFooterRowDef, selector: "[matFooterRowDef]", inputs: ["matFooterRowDef", "matFooterRowDefSticky"] }, { kind: "directive", type: i1.MatHeaderCell, selector: "mat-header-cell, th[mat-header-cell]" }, { kind: "directive", type: i1.MatCell, selector: "mat-cell, td[mat-cell]" }, { kind: "directive", type: i1.MatFooterCell, selector: "mat-footer-cell, td[mat-footer-cell]" }, { kind: "component", type: i1.MatHeaderRow, selector: "mat-header-row, tr[mat-header-row]", exportAs: ["matHeaderRow"] }, { kind: "component", type: i1.MatRow, selector: "mat-row, tr[mat-row]", exportAs: ["matRow"] }, { kind: "component", type: i1.MatFooterRow, selector: "mat-footer-row, tr[mat-footer-row]", exportAs: ["matFooterRow"] }, { kind: "pipe", type: CurrencyPipe, name: "currency" }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.0.4", ngImport: i0, type: TableMultipleHeaderFooterExample, decorators: [{
            type: Component,
            args: [{ selector: 'table-multiple-header-footer-example', standalone: true, imports: [MatTableModule, CurrencyPipe], template: "<table mat-table [dataSource]=\"transactions\" class=\"mat-elevation-z8\">\r\n  <!-- Item Column -->\r\n  <ng-container matColumnDef=\"item\">\r\n    <th mat-header-cell *matHeaderCellDef> Item </th>\r\n    <td mat-cell *matCellDef=\"let transaction\"> {{transaction.item}} </td>\r\n    <td mat-footer-cell *matFooterCellDef> Total </td>\r\n  </ng-container>\r\n\r\n  <!-- Cost Column -->\r\n  <ng-container matColumnDef=\"cost\">\r\n    <th mat-header-cell *matHeaderCellDef> Cost </th>\r\n    <td mat-cell *matCellDef=\"let transaction\"> {{transaction.cost | currency}} </td>\r\n    <td mat-footer-cell *matFooterCellDef> {{getTotalCost() | currency}} </td>\r\n  </ng-container>\r\n\r\n  <!-- Item Description Column -->\r\n  <ng-container matColumnDef=\"item-description\">\r\n    <th mat-header-cell *matHeaderCellDef> Name of the item purchased </th>\r\n  </ng-container>\r\n\r\n  <!-- Cost Description Column -->\r\n  <ng-container matColumnDef=\"cost-description\">\r\n    <th mat-header-cell *matHeaderCellDef> Cost of the item in USD </th>\r\n  </ng-container>\r\n\r\n  <!-- Disclaimer column -->\r\n  <ng-container matColumnDef=\"disclaimer\">\r\n    <td mat-footer-cell *matFooterCellDef colspan=\"2\">\r\n      Please note that the cost of items displayed are completely and totally made up.\r\n    </td>\r\n  </ng-container>\r\n\r\n  <!-- The table will render two header rows, one data row per data object, and two footer rows. -->\r\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"\r\n      class=\"example-first-header-row\">\r\n  </tr>\r\n  <tr mat-header-row *matHeaderRowDef=\"['item-description', 'cost-description']\"\r\n      class=\"example-second-header-row\">\r\n  </tr>\r\n\r\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n  <tr mat-footer-row *matFooterRowDef=\"displayedColumns\" class=\"example-first-footer-row\"></tr>\r\n  <tr mat-footer-row *matFooterRowDef=\"['disclaimer']\" class=\"example-second-footer-row\"></tr>\r\n</table>\r\n", styles: ["table {\r\n  width: 100%;\r\n}\r\n\r\n.example-first-header-row th {\r\n  border-bottom: none;\r\n}\r\n\r\n.example-second-header-row {\r\n  font-style: italic;\r\n}\r\n\r\n.example-first-footer-row {\r\n  font-weight: bold;\r\n}\r\n\r\n.example-second-footer-row td {\r\n  font-style: italic;\r\n}\r\n"] }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFibGUtbXVsdGlwbGUtaGVhZGVyLWZvb3Rlci1leGFtcGxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMtZXhhbXBsZXMvbWF0ZXJpYWwvdGFibGUvdGFibGUtbXVsdGlwbGUtaGVhZGVyLWZvb3Rlci90YWJsZS1tdWx0aXBsZS1oZWFkZXItZm9vdGVyLWV4YW1wbGUudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9zcmMvY29tcG9uZW50cy1leGFtcGxlcy9tYXRlcmlhbC90YWJsZS90YWJsZS1tdWx0aXBsZS1oZWFkZXItZm9vdGVyL3RhYmxlLW11bHRpcGxlLWhlYWRlci1mb290ZXItZXhhbXBsZS5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBQyxTQUFTLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDeEMsT0FBTyxFQUFDLFlBQVksRUFBQyxNQUFNLGlCQUFpQixDQUFDO0FBQzdDLE9BQU8sRUFBQyxjQUFjLEVBQUMsTUFBTSx5QkFBeUIsQ0FBQzs7O0FBT3ZEOztHQUVHO0FBUUgsTUFBTSxPQUFPLGdDQUFnQztJQVA3QztRQVFFLHFCQUFnQixHQUFhLENBQUMsTUFBTSxFQUFFLE1BQU0sQ0FBQyxDQUFDO1FBQzlDLGlCQUFZLEdBQWtCO1lBQzVCLEVBQUMsSUFBSSxFQUFFLFlBQVksRUFBRSxJQUFJLEVBQUUsQ0FBQyxFQUFDO1lBQzdCLEVBQUMsSUFBSSxFQUFFLE9BQU8sRUFBRSxJQUFJLEVBQUUsQ0FBQyxFQUFDO1lBQ3hCLEVBQUMsSUFBSSxFQUFFLFNBQVMsRUFBRSxJQUFJLEVBQUUsQ0FBQyxFQUFDO1lBQzFCLEVBQUMsSUFBSSxFQUFFLFdBQVcsRUFBRSxJQUFJLEVBQUUsQ0FBQyxFQUFDO1lBQzVCLEVBQUMsSUFBSSxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUUsRUFBRSxFQUFDO1lBQzFCLEVBQUMsSUFBSSxFQUFFLFdBQVcsRUFBRSxJQUFJLEVBQUUsRUFBRSxFQUFDO1NBQzlCLENBQUM7S0FNSDtJQUpDLCtDQUErQztJQUMvQyxZQUFZO1FBQ1YsT0FBTyxJQUFJLENBQUMsWUFBWSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxHQUFHLEVBQUUsS0FBSyxFQUFFLEVBQUUsQ0FBQyxHQUFHLEdBQUcsS0FBSyxFQUFFLENBQUMsQ0FBQyxDQUFDO0lBQ25GLENBQUM7OEdBZFUsZ0NBQWdDO2tHQUFoQyxnQ0FBZ0MsZ0dDbkI3Qyw0OURBNkNBLHVXRDVCWSxjQUFjLCs3Q0FBRSxZQUFZOzsyRkFFM0IsZ0NBQWdDO2tCQVA1QyxTQUFTOytCQUNFLHNDQUFzQyxjQUdwQyxJQUFJLFdBQ1AsQ0FBQyxjQUFjLEVBQUUsWUFBWSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDb21wb25lbnR9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQge0N1cnJlbmN5UGlwZX0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcclxuaW1wb3J0IHtNYXRUYWJsZU1vZHVsZX0gZnJvbSAnQGFuZ3VsYXIvbWF0ZXJpYWwvdGFibGUnO1xyXG5cclxuaW50ZXJmYWNlIFRyYW5zYWN0aW9uIHtcclxuICBpdGVtOiBzdHJpbmc7XHJcbiAgY29zdDogbnVtYmVyO1xyXG59XHJcblxyXG4vKipcclxuICogQHRpdGxlIFRhYmxlIHdpdGggbXVsdGlwbGUgaGVhZGVyIGFuZCBmb290ZXIgcm93c1xyXG4gKi9cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICd0YWJsZS1tdWx0aXBsZS1oZWFkZXItZm9vdGVyLWV4YW1wbGUnLFxyXG4gIHN0eWxlVXJsczogWyd0YWJsZS1tdWx0aXBsZS1oZWFkZXItZm9vdGVyLWV4YW1wbGUuY3NzJ10sXHJcbiAgdGVtcGxhdGVVcmw6ICd0YWJsZS1tdWx0aXBsZS1oZWFkZXItZm9vdGVyLWV4YW1wbGUuaHRtbCcsXHJcbiAgc3RhbmRhbG9uZTogdHJ1ZSxcclxuICBpbXBvcnRzOiBbTWF0VGFibGVNb2R1bGUsIEN1cnJlbmN5UGlwZV0sXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBUYWJsZU11bHRpcGxlSGVhZGVyRm9vdGVyRXhhbXBsZSB7XHJcbiAgZGlzcGxheWVkQ29sdW1uczogc3RyaW5nW10gPSBbJ2l0ZW0nLCAnY29zdCddO1xyXG4gIHRyYW5zYWN0aW9uczogVHJhbnNhY3Rpb25bXSA9IFtcclxuICAgIHtpdGVtOiAnQmVhY2ggYmFsbCcsIGNvc3Q6IDR9LFxyXG4gICAge2l0ZW06ICdUb3dlbCcsIGNvc3Q6IDV9LFxyXG4gICAge2l0ZW06ICdGcmlzYmVlJywgY29zdDogMn0sXHJcbiAgICB7aXRlbTogJ1N1bnNjcmVlbicsIGNvc3Q6IDR9LFxyXG4gICAge2l0ZW06ICdDb29sZXInLCBjb3N0OiAyNX0sXHJcbiAgICB7aXRlbTogJ1N3aW0gc3VpdCcsIGNvc3Q6IDE1fSxcclxuICBdO1xyXG5cclxuICAvKiogR2V0cyB0aGUgdG90YWwgY29zdCBvZiBhbGwgdHJhbnNhY3Rpb25zLiAqL1xyXG4gIGdldFRvdGFsQ29zdCgpIHtcclxuICAgIHJldHVybiB0aGlzLnRyYW5zYWN0aW9ucy5tYXAodCA9PiB0LmNvc3QpLnJlZHVjZSgoYWNjLCB2YWx1ZSkgPT4gYWNjICsgdmFsdWUsIDApO1xyXG4gIH1cclxufVxyXG4iLCI8dGFibGUgbWF0LXRhYmxlIFtkYXRhU291cmNlXT1cInRyYW5zYWN0aW9uc1wiIGNsYXNzPVwibWF0LWVsZXZhdGlvbi16OFwiPlxyXG4gIDwhLS0gSXRlbSBDb2x1bW4gLS0+XHJcbiAgPG5nLWNvbnRhaW5lciBtYXRDb2x1bW5EZWY9XCJpdGVtXCI+XHJcbiAgICA8dGggbWF0LWhlYWRlci1jZWxsICptYXRIZWFkZXJDZWxsRGVmPiBJdGVtIDwvdGg+XHJcbiAgICA8dGQgbWF0LWNlbGwgKm1hdENlbGxEZWY9XCJsZXQgdHJhbnNhY3Rpb25cIj4ge3t0cmFuc2FjdGlvbi5pdGVtfX0gPC90ZD5cclxuICAgIDx0ZCBtYXQtZm9vdGVyLWNlbGwgKm1hdEZvb3RlckNlbGxEZWY+IFRvdGFsIDwvdGQ+XHJcbiAgPC9uZy1jb250YWluZXI+XHJcblxyXG4gIDwhLS0gQ29zdCBDb2x1bW4gLS0+XHJcbiAgPG5nLWNvbnRhaW5lciBtYXRDb2x1bW5EZWY9XCJjb3N0XCI+XHJcbiAgICA8dGggbWF0LWhlYWRlci1jZWxsICptYXRIZWFkZXJDZWxsRGVmPiBDb3N0IDwvdGg+XHJcbiAgICA8dGQgbWF0LWNlbGwgKm1hdENlbGxEZWY9XCJsZXQgdHJhbnNhY3Rpb25cIj4ge3t0cmFuc2FjdGlvbi5jb3N0IHwgY3VycmVuY3l9fSA8L3RkPlxyXG4gICAgPHRkIG1hdC1mb290ZXItY2VsbCAqbWF0Rm9vdGVyQ2VsbERlZj4ge3tnZXRUb3RhbENvc3QoKSB8IGN1cnJlbmN5fX0gPC90ZD5cclxuICA8L25nLWNvbnRhaW5lcj5cclxuXHJcbiAgPCEtLSBJdGVtIERlc2NyaXB0aW9uIENvbHVtbiAtLT5cclxuICA8bmctY29udGFpbmVyIG1hdENvbHVtbkRlZj1cIml0ZW0tZGVzY3JpcHRpb25cIj5cclxuICAgIDx0aCBtYXQtaGVhZGVyLWNlbGwgKm1hdEhlYWRlckNlbGxEZWY+IE5hbWUgb2YgdGhlIGl0ZW0gcHVyY2hhc2VkIDwvdGg+XHJcbiAgPC9uZy1jb250YWluZXI+XHJcblxyXG4gIDwhLS0gQ29zdCBEZXNjcmlwdGlvbiBDb2x1bW4gLS0+XHJcbiAgPG5nLWNvbnRhaW5lciBtYXRDb2x1bW5EZWY9XCJjb3N0LWRlc2NyaXB0aW9uXCI+XHJcbiAgICA8dGggbWF0LWhlYWRlci1jZWxsICptYXRIZWFkZXJDZWxsRGVmPiBDb3N0IG9mIHRoZSBpdGVtIGluIFVTRCA8L3RoPlxyXG4gIDwvbmctY29udGFpbmVyPlxyXG5cclxuICA8IS0tIERpc2NsYWltZXIgY29sdW1uIC0tPlxyXG4gIDxuZy1jb250YWluZXIgbWF0Q29sdW1uRGVmPVwiZGlzY2xhaW1lclwiPlxyXG4gICAgPHRkIG1hdC1mb290ZXItY2VsbCAqbWF0Rm9vdGVyQ2VsbERlZiBjb2xzcGFuPVwiMlwiPlxyXG4gICAgICBQbGVhc2Ugbm90ZSB0aGF0IHRoZSBjb3N0IG9mIGl0ZW1zIGRpc3BsYXllZCBhcmUgY29tcGxldGVseSBhbmQgdG90YWxseSBtYWRlIHVwLlxyXG4gICAgPC90ZD5cclxuICA8L25nLWNvbnRhaW5lcj5cclxuXHJcbiAgPCEtLSBUaGUgdGFibGUgd2lsbCByZW5kZXIgdHdvIGhlYWRlciByb3dzLCBvbmUgZGF0YSByb3cgcGVyIGRhdGEgb2JqZWN0LCBhbmQgdHdvIGZvb3RlciByb3dzLiAtLT5cclxuICA8dHIgbWF0LWhlYWRlci1yb3cgKm1hdEhlYWRlclJvd0RlZj1cImRpc3BsYXllZENvbHVtbnNcIlxyXG4gICAgICBjbGFzcz1cImV4YW1wbGUtZmlyc3QtaGVhZGVyLXJvd1wiPlxyXG4gIDwvdHI+XHJcbiAgPHRyIG1hdC1oZWFkZXItcm93ICptYXRIZWFkZXJSb3dEZWY9XCJbJ2l0ZW0tZGVzY3JpcHRpb24nLCAnY29zdC1kZXNjcmlwdGlvbiddXCJcclxuICAgICAgY2xhc3M9XCJleGFtcGxlLXNlY29uZC1oZWFkZXItcm93XCI+XHJcbiAgPC90cj5cclxuXHJcbiAgPHRyIG1hdC1yb3cgKm1hdFJvd0RlZj1cImxldCByb3c7IGNvbHVtbnM6IGRpc3BsYXllZENvbHVtbnM7XCI+PC90cj5cclxuXHJcbiAgPHRyIG1hdC1mb290ZXItcm93ICptYXRGb290ZXJSb3dEZWY9XCJkaXNwbGF5ZWRDb2x1bW5zXCIgY2xhc3M9XCJleGFtcGxlLWZpcnN0LWZvb3Rlci1yb3dcIj48L3RyPlxyXG4gIDx0ciBtYXQtZm9vdGVyLXJvdyAqbWF0Rm9vdGVyUm93RGVmPVwiWydkaXNjbGFpbWVyJ11cIiBjbGFzcz1cImV4YW1wbGUtc2Vjb25kLWZvb3Rlci1yb3dcIj48L3RyPlxyXG48L3RhYmxlPlxyXG4iXX0=