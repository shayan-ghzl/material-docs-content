import { Component, forwardRef } from '@angular/core';
import { CdkStepper, CdkStepperModule } from '@angular/cdk/stepper';
import { NgTemplateOutlet } from '@angular/common';
import * as i0 from "@angular/core";
import * as i1 from "@angular/cdk/stepper";
/** @title A custom CDK stepper without a form */
export class CdkCustomStepperWithoutFormExample {
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.0.4", ngImport: i0, type: CdkCustomStepperWithoutFormExample, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "17.0.4", type: CdkCustomStepperWithoutFormExample, isStandalone: true, selector: "cdk-custom-stepper-without-form-example", ngImport: i0, template: "<example-custom-stepper>\r\n  <cdk-step> <p>This is any content of \"Step 1\"</p> </cdk-step>\r\n  <cdk-step> <p>This is any content of \"Step 2\"</p> </cdk-step>\r\n</example-custom-stepper>\r\n", styles: [""], dependencies: [{ kind: "component", type: i0.forwardRef(() => CustomStepper), selector: "example-custom-stepper" }, { kind: "ngmodule", type: i0.forwardRef(() => CdkStepperModule) }, { kind: "component", type: i0.forwardRef(() => i1.CdkStep), selector: "cdk-step", inputs: ["stepControl", "label", "errorMessage", "aria-label", "aria-labelledby", "state", "editable", "optional", "completed", "hasError"], outputs: ["interacted"], exportAs: ["cdkStep"] }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.0.4", ngImport: i0, type: CdkCustomStepperWithoutFormExample, decorators: [{
            type: Component,
            args: [{ selector: 'cdk-custom-stepper-without-form-example', standalone: true, imports: [forwardRef(() => CustomStepper), CdkStepperModule], template: "<example-custom-stepper>\r\n  <cdk-step> <p>This is any content of \"Step 1\"</p> </cdk-step>\r\n  <cdk-step> <p>This is any content of \"Step 2\"</p> </cdk-step>\r\n</example-custom-stepper>\r\n" }]
        }] });
/** Custom CDK stepper component */
export class CustomStepper extends CdkStepper {
    selectStepByIndex(index) {
        this.selectedIndex = index;
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.0.4", ngImport: i0, type: CustomStepper, deps: null, target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.0.0", version: "17.0.4", type: CustomStepper, isStandalone: true, selector: "example-custom-stepper", providers: [{ provide: CdkStepper, useExisting: CustomStepper }], usesInheritance: true, ngImport: i0, template: "<section class=\"example-container\">\r\n  <header>\r\n    <h2>Step {{ selectedIndex + 1 }}/{{ steps.length }}</h2>\r\n  </header>\r\n\r\n  <div [ngTemplateOutlet]=\"selected ? selected.content : null\"></div>\r\n\r\n  <footer class=\"example-step-navigation-bar\">\r\n    <button class=\"example-nav-button\" cdkStepperPrevious>&larr;</button>\r\n    @for (step of steps; track step; let i = $index) {\r\n      <button\r\n        class=\"example-step\"\r\n        [class.example-active]=\"selectedIndex === i\"\r\n        (click)=\"selectStepByIndex(i)\">Step {{ i + 1 }}</button>\r\n    }\r\n    <button class=\"example-nav-button\" cdkStepperNext>&rarr;</button>\r\n  </footer>\r\n</section>\r\n", styles: [".example-container {\r\n  border: 1px solid;\r\n  padding: 10px;\r\n  margin: 10px;\r\n}\r\n\r\n.example-step-navigation-bar {\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  margin-top: 10px;\r\n}\r\n\r\n.example-step {\r\n  background: transparent;\r\n  border: 0;\r\n  margin: 0 10px;\r\n  padding: 10px;\r\n  color: inherit;\r\n}\r\n\r\n.example-step.example-active {\r\n  border-bottom: 1px solid;\r\n  font-weight: 600;\r\n}\r\n\r\n.example-nav-button {\r\n  background: transparent;\r\n  border: 0;\r\n  color: inherit;\r\n}\r\n"], dependencies: [{ kind: "directive", type: NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet", "ngTemplateOutletInjector"] }, { kind: "ngmodule", type: CdkStepperModule }, { kind: "directive", type: i1.CdkStepperNext, selector: "button[cdkStepperNext]", inputs: ["type"] }, { kind: "directive", type: i1.CdkStepperPrevious, selector: "button[cdkStepperPrevious]", inputs: ["type"] }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.0.4", ngImport: i0, type: CustomStepper, decorators: [{
            type: Component,
            args: [{ selector: 'example-custom-stepper', providers: [{ provide: CdkStepper, useExisting: CustomStepper }], standalone: true, imports: [NgTemplateOutlet, CdkStepperModule], template: "<section class=\"example-container\">\r\n  <header>\r\n    <h2>Step {{ selectedIndex + 1 }}/{{ steps.length }}</h2>\r\n  </header>\r\n\r\n  <div [ngTemplateOutlet]=\"selected ? selected.content : null\"></div>\r\n\r\n  <footer class=\"example-step-navigation-bar\">\r\n    <button class=\"example-nav-button\" cdkStepperPrevious>&larr;</button>\r\n    @for (step of steps; track step; let i = $index) {\r\n      <button\r\n        class=\"example-step\"\r\n        [class.example-active]=\"selectedIndex === i\"\r\n        (click)=\"selectStepByIndex(i)\">Step {{ i + 1 }}</button>\r\n    }\r\n    <button class=\"example-nav-button\" cdkStepperNext>&rarr;</button>\r\n  </footer>\r\n</section>\r\n", styles: [".example-container {\r\n  border: 1px solid;\r\n  padding: 10px;\r\n  margin: 10px;\r\n}\r\n\r\n.example-step-navigation-bar {\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  margin-top: 10px;\r\n}\r\n\r\n.example-step {\r\n  background: transparent;\r\n  border: 0;\r\n  margin: 0 10px;\r\n  padding: 10px;\r\n  color: inherit;\r\n}\r\n\r\n.example-step.example-active {\r\n  border-bottom: 1px solid;\r\n  font-weight: 600;\r\n}\r\n\r\n.example-nav-button {\r\n  background: transparent;\r\n  border: 0;\r\n  color: inherit;\r\n}\r\n"] }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2RrLWN1c3RvbS1zdGVwcGVyLXdpdGhvdXQtZm9ybS1leGFtcGxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMtZXhhbXBsZXMvY2RrL3N0ZXBwZXIvY2RrLWN1c3RvbS1zdGVwcGVyLXdpdGhvdXQtZm9ybS9jZGstY3VzdG9tLXN0ZXBwZXItd2l0aG91dC1mb3JtLWV4YW1wbGUudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9zcmMvY29tcG9uZW50cy1leGFtcGxlcy9jZGsvc3RlcHBlci9jZGstY3VzdG9tLXN0ZXBwZXItd2l0aG91dC1mb3JtL2Nkay1jdXN0b20tc3RlcHBlci13aXRob3V0LWZvcm0tZXhhbXBsZS5odG1sIiwiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMtZXhhbXBsZXMvY2RrL3N0ZXBwZXIvY2RrLWN1c3RvbS1zdGVwcGVyLXdpdGhvdXQtZm9ybS9leGFtcGxlLWN1c3RvbS1zdGVwcGVyLmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFDLFNBQVMsRUFBRSxVQUFVLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDcEQsT0FBTyxFQUFDLFVBQVUsRUFBRSxnQkFBZ0IsRUFBQyxNQUFNLHNCQUFzQixDQUFDO0FBQ2xFLE9BQU8sRUFBQyxnQkFBZ0IsRUFBQyxNQUFNLGlCQUFpQixDQUFDOzs7QUFFakQsaURBQWlEO0FBUWpELE1BQU0sT0FBTyxrQ0FBa0M7OEdBQWxDLGtDQUFrQztrR0FBbEMsa0NBQWtDLG1HQ1ovQyxxTUFJQSw4RURtQmEsYUFBYSx1RkFibUIsZ0JBQWdCOzsyRkFFaEQsa0NBQWtDO2tCQVA5QyxTQUFTOytCQUNFLHlDQUF5QyxjQUd2QyxJQUFJLFdBQ1AsQ0FBQyxVQUFVLENBQUMsR0FBRyxFQUFFLENBQUMsYUFBYSxDQUFDLEVBQUUsZ0JBQWdCLENBQUM7O0FBSTlELG1DQUFtQztBQVNuQyxNQUFNLE9BQU8sYUFBYyxTQUFRLFVBQVU7SUFDM0MsaUJBQWlCLENBQUMsS0FBYTtRQUM3QixJQUFJLENBQUMsYUFBYSxHQUFHLEtBQUssQ0FBQztJQUM3QixDQUFDOzhHQUhVLGFBQWE7a0dBQWIsYUFBYSxxRUFKYixDQUFDLEVBQUMsT0FBTyxFQUFFLFVBQVUsRUFBRSxXQUFXLEVBQUUsYUFBYSxFQUFDLENBQUMsaURFbkJoRSw0ckJBa0JBLDRsQkZHWSxnQkFBZ0IsbUpBQUUsZ0JBQWdCOzsyRkFFakMsYUFBYTtrQkFSekIsU0FBUzsrQkFDRSx3QkFBd0IsYUFHdkIsQ0FBQyxFQUFDLE9BQU8sRUFBRSxVQUFVLEVBQUUsV0FBVyxlQUFlLEVBQUMsQ0FBQyxjQUNsRCxJQUFJLFdBQ1AsQ0FBQyxnQkFBZ0IsRUFBRSxnQkFBZ0IsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q29tcG9uZW50LCBmb3J3YXJkUmVmfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHtDZGtTdGVwcGVyLCBDZGtTdGVwcGVyTW9kdWxlfSBmcm9tICdAYW5ndWxhci9jZGsvc3RlcHBlcic7XHJcbmltcG9ydCB7TmdUZW1wbGF0ZU91dGxldH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcclxuXHJcbi8qKiBAdGl0bGUgQSBjdXN0b20gQ0RLIHN0ZXBwZXIgd2l0aG91dCBhIGZvcm0gKi9cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdjZGstY3VzdG9tLXN0ZXBwZXItd2l0aG91dC1mb3JtLWV4YW1wbGUnLFxyXG4gIHRlbXBsYXRlVXJsOiAnLi9jZGstY3VzdG9tLXN0ZXBwZXItd2l0aG91dC1mb3JtLWV4YW1wbGUuaHRtbCcsXHJcbiAgc3R5bGVVcmxzOiBbJy4vY2RrLWN1c3RvbS1zdGVwcGVyLXdpdGhvdXQtZm9ybS1leGFtcGxlLmNzcyddLFxyXG4gIHN0YW5kYWxvbmU6IHRydWUsXHJcbiAgaW1wb3J0czogW2ZvcndhcmRSZWYoKCkgPT4gQ3VzdG9tU3RlcHBlciksIENka1N0ZXBwZXJNb2R1bGVdLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgQ2RrQ3VzdG9tU3RlcHBlcldpdGhvdXRGb3JtRXhhbXBsZSB7fVxyXG5cclxuLyoqIEN1c3RvbSBDREsgc3RlcHBlciBjb21wb25lbnQgKi9cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdleGFtcGxlLWN1c3RvbS1zdGVwcGVyJyxcclxuICB0ZW1wbGF0ZVVybDogJy4vZXhhbXBsZS1jdXN0b20tc3RlcHBlci5odG1sJyxcclxuICBzdHlsZVVybHM6IFsnLi9leGFtcGxlLWN1c3RvbS1zdGVwcGVyLmNzcyddLFxyXG4gIHByb3ZpZGVyczogW3twcm92aWRlOiBDZGtTdGVwcGVyLCB1c2VFeGlzdGluZzogQ3VzdG9tU3RlcHBlcn1dLFxyXG4gIHN0YW5kYWxvbmU6IHRydWUsXHJcbiAgaW1wb3J0czogW05nVGVtcGxhdGVPdXRsZXQsIENka1N0ZXBwZXJNb2R1bGVdLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgQ3VzdG9tU3RlcHBlciBleHRlbmRzIENka1N0ZXBwZXIge1xyXG4gIHNlbGVjdFN0ZXBCeUluZGV4KGluZGV4OiBudW1iZXIpOiB2b2lkIHtcclxuICAgIHRoaXMuc2VsZWN0ZWRJbmRleCA9IGluZGV4O1xyXG4gIH1cclxufVxyXG4iLCI8ZXhhbXBsZS1jdXN0b20tc3RlcHBlcj5cclxuICA8Y2RrLXN0ZXA+IDxwPlRoaXMgaXMgYW55IGNvbnRlbnQgb2YgXCJTdGVwIDFcIjwvcD4gPC9jZGstc3RlcD5cclxuICA8Y2RrLXN0ZXA+IDxwPlRoaXMgaXMgYW55IGNvbnRlbnQgb2YgXCJTdGVwIDJcIjwvcD4gPC9jZGstc3RlcD5cclxuPC9leGFtcGxlLWN1c3RvbS1zdGVwcGVyPlxyXG4iLCI8c2VjdGlvbiBjbGFzcz1cImV4YW1wbGUtY29udGFpbmVyXCI+XHJcbiAgPGhlYWRlcj5cclxuICAgIDxoMj5TdGVwIHt7IHNlbGVjdGVkSW5kZXggKyAxIH19L3t7IHN0ZXBzLmxlbmd0aCB9fTwvaDI+XHJcbiAgPC9oZWFkZXI+XHJcblxyXG4gIDxkaXYgW25nVGVtcGxhdGVPdXRsZXRdPVwic2VsZWN0ZWQgPyBzZWxlY3RlZC5jb250ZW50IDogbnVsbFwiPjwvZGl2PlxyXG5cclxuICA8Zm9vdGVyIGNsYXNzPVwiZXhhbXBsZS1zdGVwLW5hdmlnYXRpb24tYmFyXCI+XHJcbiAgICA8YnV0dG9uIGNsYXNzPVwiZXhhbXBsZS1uYXYtYnV0dG9uXCIgY2RrU3RlcHBlclByZXZpb3VzPiZsYXJyOzwvYnV0dG9uPlxyXG4gICAgQGZvciAoc3RlcCBvZiBzdGVwczsgdHJhY2sgc3RlcDsgbGV0IGkgPSAkaW5kZXgpIHtcclxuICAgICAgPGJ1dHRvblxyXG4gICAgICAgIGNsYXNzPVwiZXhhbXBsZS1zdGVwXCJcclxuICAgICAgICBbY2xhc3MuZXhhbXBsZS1hY3RpdmVdPVwic2VsZWN0ZWRJbmRleCA9PT0gaVwiXHJcbiAgICAgICAgKGNsaWNrKT1cInNlbGVjdFN0ZXBCeUluZGV4KGkpXCI+U3RlcCB7eyBpICsgMSB9fTwvYnV0dG9uPlxyXG4gICAgfVxyXG4gICAgPGJ1dHRvbiBjbGFzcz1cImV4YW1wbGUtbmF2LWJ1dHRvblwiIGNka1N0ZXBwZXJOZXh0PiZyYXJyOzwvYnV0dG9uPlxyXG4gIDwvZm9vdGVyPlxyXG48L3NlY3Rpb24+XHJcbiJdfQ==