import { Component, Inject } from '@angular/core';
import { Dialog, DialogRef, DIALOG_DATA, DialogModule } from '@angular/cdk/dialog';
import { FormsModule } from '@angular/forms';
import * as i0 from "@angular/core";
import * as i1 from "@angular/cdk/dialog";
import * as i2 from "@angular/forms";
/**
 * @title CDK Dialog Overview
 */
export class CdkDialogOverviewExample {
    constructor(dialog) {
        this.dialog = dialog;
    }
    openDialog() {
        const dialogRef = this.dialog.open(CdkDialogOverviewExampleDialog, {
            width: '250px',
            data: { name: this.name, animal: this.animal },
        });
        dialogRef.closed.subscribe(result => {
            console.log('The dialog was closed');
            this.animal = result;
        });
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.0.4", ngImport: i0, type: CdkDialogOverviewExample, deps: [{ token: i1.Dialog }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.0.0", version: "17.0.4", type: CdkDialogOverviewExample, isStandalone: true, selector: "cdk-dialog-overview-example", ngImport: i0, template: "<ol>\r\n  <li>\r\n    <label id=\"dialog-user-name\">What's your name?</label>\r\n    <input for=\"dialog-user-name\" [(ngModel)]=\"name\">\r\n  </li>\r\n  <li>\r\n    <button (click)=\"openDialog()\">Pick one</button>\r\n  </li>\r\n  @if (animal) {\r\n    <li>\r\n      You chose: <em>{{animal}}</em>\r\n    </li>\r\n  }\r\n</ol>\r\n", dependencies: [{ kind: "ngmodule", type: FormsModule }, { kind: "directive", type: i2.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { kind: "directive", type: i2.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i2.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }, { kind: "ngmodule", type: DialogModule }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.0.4", ngImport: i0, type: CdkDialogOverviewExample, decorators: [{
            type: Component,
            args: [{ selector: 'cdk-dialog-overview-example', standalone: true, imports: [FormsModule, DialogModule], template: "<ol>\r\n  <li>\r\n    <label id=\"dialog-user-name\">What's your name?</label>\r\n    <input for=\"dialog-user-name\" [(ngModel)]=\"name\">\r\n  </li>\r\n  <li>\r\n    <button (click)=\"openDialog()\">Pick one</button>\r\n  </li>\r\n  @if (animal) {\r\n    <li>\r\n      You chose: <em>{{animal}}</em>\r\n    </li>\r\n  }\r\n</ol>\r\n" }]
        }], ctorParameters: () => [{ type: i1.Dialog }] });
export class CdkDialogOverviewExampleDialog {
    constructor(dialogRef, data) {
        this.dialogRef = dialogRef;
        this.data = data;
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.0.4", ngImport: i0, type: CdkDialogOverviewExampleDialog, deps: [{ token: i1.DialogRef }, { token: DIALOG_DATA }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "17.0.4", type: CdkDialogOverviewExampleDialog, isStandalone: true, selector: "cdk-dialog-overview-example-dialog", ngImport: i0, template: "<h1>Hi {{data.name}}</h1>\r\n<div>\r\n  <label id=\"favorite-animal\">What's your favorite animal?</label>\r\n  <input for=\"favorite-animal\" [(ngModel)]=\"data.animal\" placeholder=\"Enter your name\">\r\n</div>\r\n<div>\r\n  <button (click)=\"dialogRef.close(data.animal)\">OK</button>\r\n  <button (click)=\"dialogRef.close()\">Cancel</button>\r\n</div>\r\n", styles: [":host {\r\n  display: block;\r\n  background: #fff;\r\n  border-radius: 8px;\r\n  padding: 8px 16px 16px;\r\n}\r\n\r\ninput {\r\n  margin: 8px 0;\r\n}\r\n\r\nbutton + button {\r\n  margin-left: 8px;\r\n}\r\n"], dependencies: [{ kind: "ngmodule", type: FormsModule }, { kind: "directive", type: i2.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { kind: "directive", type: i2.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i2.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.0.4", ngImport: i0, type: CdkDialogOverviewExampleDialog, decorators: [{
            type: Component,
            args: [{ selector: 'cdk-dialog-overview-example-dialog', standalone: true, imports: [FormsModule], template: "<h1>Hi {{data.name}}</h1>\r\n<div>\r\n  <label id=\"favorite-animal\">What's your favorite animal?</label>\r\n  <input for=\"favorite-animal\" [(ngModel)]=\"data.animal\" placeholder=\"Enter your name\">\r\n</div>\r\n<div>\r\n  <button (click)=\"dialogRef.close(data.animal)\">OK</button>\r\n  <button (click)=\"dialogRef.close()\">Cancel</button>\r\n</div>\r\n", styles: [":host {\r\n  display: block;\r\n  background: #fff;\r\n  border-radius: 8px;\r\n  padding: 8px 16px 16px;\r\n}\r\n\r\ninput {\r\n  margin: 8px 0;\r\n}\r\n\r\nbutton + button {\r\n  margin-left: 8px;\r\n}\r\n"] }]
        }], ctorParameters: () => [{ type: i1.DialogRef }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [DIALOG_DATA]
                }] }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2RrLWRpYWxvZy1vdmVydmlldy1leGFtcGxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMtZXhhbXBsZXMvY2RrL2RpYWxvZy9jZGstZGlhbG9nLW92ZXJ2aWV3L2Nkay1kaWFsb2ctb3ZlcnZpZXctZXhhbXBsZS50cyIsIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzLWV4YW1wbGVzL2Nkay9kaWFsb2cvY2RrLWRpYWxvZy1vdmVydmlldy9jZGstZGlhbG9nLW92ZXJ2aWV3LWV4YW1wbGUuaHRtbCIsIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzLWV4YW1wbGVzL2Nkay9kaWFsb2cvY2RrLWRpYWxvZy1vdmVydmlldy9jZGstZGlhbG9nLW92ZXJ2aWV3LWV4YW1wbGUtZGlhbG9nLmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFDLFNBQVMsRUFBRSxNQUFNLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDaEQsT0FBTyxFQUFDLE1BQU0sRUFBRSxTQUFTLEVBQUUsV0FBVyxFQUFFLFlBQVksRUFBQyxNQUFNLHFCQUFxQixDQUFDO0FBQ2pGLE9BQU8sRUFBQyxXQUFXLEVBQUMsTUFBTSxnQkFBZ0IsQ0FBQzs7OztBQU8zQzs7R0FFRztBQU9ILE1BQU0sT0FBTyx3QkFBd0I7SUFJbkMsWUFBbUIsTUFBYztRQUFkLFdBQU0sR0FBTixNQUFNLENBQVE7SUFBRyxDQUFDO0lBRXJDLFVBQVU7UUFDUixNQUFNLFNBQVMsR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBUyw4QkFBOEIsRUFBRTtZQUN6RSxLQUFLLEVBQUUsT0FBTztZQUNkLElBQUksRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLENBQUMsSUFBSSxFQUFFLE1BQU0sRUFBRSxJQUFJLENBQUMsTUFBTSxFQUFDO1NBQzdDLENBQUMsQ0FBQztRQUVILFNBQVMsQ0FBQyxNQUFNLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxFQUFFO1lBQ2xDLE9BQU8sQ0FBQyxHQUFHLENBQUMsdUJBQXVCLENBQUMsQ0FBQztZQUNyQyxJQUFJLENBQUMsTUFBTSxHQUFHLE1BQU0sQ0FBQztRQUN2QixDQUFDLENBQUMsQ0FBQztJQUNMLENBQUM7OEdBaEJVLHdCQUF3QjtrR0FBeEIsd0JBQXdCLHVGQ2xCckMsZ1ZBY0EsMkNERVksV0FBVyw4bUJBQUUsWUFBWTs7MkZBRXhCLHdCQUF3QjtrQkFOcEMsU0FBUzsrQkFDRSw2QkFBNkIsY0FFM0IsSUFBSSxXQUNQLENBQUMsV0FBVyxFQUFFLFlBQVksQ0FBQzs7QUE0QnRDLE1BQU0sT0FBTyw4QkFBOEI7SUFDekMsWUFDUyxTQUE0QixFQUNQLElBQWdCO1FBRHJDLGNBQVMsR0FBVCxTQUFTLENBQW1CO1FBQ1AsU0FBSSxHQUFKLElBQUksQ0FBWTtJQUMzQyxDQUFDOzhHQUpPLDhCQUE4QiwyQ0FHL0IsV0FBVztrR0FIViw4QkFBOEIsOEZFNUMzQywyV0FTQSx3UUZpQ1ksV0FBVzs7MkZBRVYsOEJBQThCO2tCQVAxQyxTQUFTOytCQUNFLG9DQUFvQyxjQUdsQyxJQUFJLFdBQ1AsQ0FBQyxXQUFXLENBQUM7OzBCQUtuQixNQUFNOzJCQUFDLFdBQVciLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0NvbXBvbmVudCwgSW5qZWN0fSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHtEaWFsb2csIERpYWxvZ1JlZiwgRElBTE9HX0RBVEEsIERpYWxvZ01vZHVsZX0gZnJvbSAnQGFuZ3VsYXIvY2RrL2RpYWxvZyc7XHJcbmltcG9ydCB7Rm9ybXNNb2R1bGV9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgRGlhbG9nRGF0YSB7XHJcbiAgYW5pbWFsOiBzdHJpbmc7XHJcbiAgbmFtZTogc3RyaW5nO1xyXG59XHJcblxyXG4vKipcclxuICogQHRpdGxlIENESyBEaWFsb2cgT3ZlcnZpZXdcclxuICovXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnY2RrLWRpYWxvZy1vdmVydmlldy1leGFtcGxlJyxcclxuICB0ZW1wbGF0ZVVybDogJ2Nkay1kaWFsb2ctb3ZlcnZpZXctZXhhbXBsZS5odG1sJyxcclxuICBzdGFuZGFsb25lOiB0cnVlLFxyXG4gIGltcG9ydHM6IFtGb3Jtc01vZHVsZSwgRGlhbG9nTW9kdWxlXSxcclxufSlcclxuZXhwb3J0IGNsYXNzIENka0RpYWxvZ092ZXJ2aWV3RXhhbXBsZSB7XHJcbiAgYW5pbWFsOiBzdHJpbmcgfCB1bmRlZmluZWQ7XHJcbiAgbmFtZTogc3RyaW5nO1xyXG5cclxuICBjb25zdHJ1Y3RvcihwdWJsaWMgZGlhbG9nOiBEaWFsb2cpIHt9XHJcblxyXG4gIG9wZW5EaWFsb2coKTogdm9pZCB7XHJcbiAgICBjb25zdCBkaWFsb2dSZWYgPSB0aGlzLmRpYWxvZy5vcGVuPHN0cmluZz4oQ2RrRGlhbG9nT3ZlcnZpZXdFeGFtcGxlRGlhbG9nLCB7XHJcbiAgICAgIHdpZHRoOiAnMjUwcHgnLFxyXG4gICAgICBkYXRhOiB7bmFtZTogdGhpcy5uYW1lLCBhbmltYWw6IHRoaXMuYW5pbWFsfSxcclxuICAgIH0pO1xyXG5cclxuICAgIGRpYWxvZ1JlZi5jbG9zZWQuc3Vic2NyaWJlKHJlc3VsdCA9PiB7XHJcbiAgICAgIGNvbnNvbGUubG9nKCdUaGUgZGlhbG9nIHdhcyBjbG9zZWQnKTtcclxuICAgICAgdGhpcy5hbmltYWwgPSByZXN1bHQ7XHJcbiAgICB9KTtcclxuICB9XHJcbn1cclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnY2RrLWRpYWxvZy1vdmVydmlldy1leGFtcGxlLWRpYWxvZycsXHJcbiAgdGVtcGxhdGVVcmw6ICdjZGstZGlhbG9nLW92ZXJ2aWV3LWV4YW1wbGUtZGlhbG9nLmh0bWwnLFxyXG4gIHN0eWxlVXJsczogWydjZGstZGlhbG9nLW92ZXJ2aWV3LWV4YW1wbGUtZGlhbG9nLmNzcyddLFxyXG4gIHN0YW5kYWxvbmU6IHRydWUsXHJcbiAgaW1wb3J0czogW0Zvcm1zTW9kdWxlXSxcclxufSlcclxuZXhwb3J0IGNsYXNzIENka0RpYWxvZ092ZXJ2aWV3RXhhbXBsZURpYWxvZyB7XHJcbiAgY29uc3RydWN0b3IoXHJcbiAgICBwdWJsaWMgZGlhbG9nUmVmOiBEaWFsb2dSZWY8c3RyaW5nPixcclxuICAgIEBJbmplY3QoRElBTE9HX0RBVEEpIHB1YmxpYyBkYXRhOiBEaWFsb2dEYXRhLFxyXG4gICkge31cclxufVxyXG4iLCI8b2w+XHJcbiAgPGxpPlxyXG4gICAgPGxhYmVsIGlkPVwiZGlhbG9nLXVzZXItbmFtZVwiPldoYXQncyB5b3VyIG5hbWU/PC9sYWJlbD5cclxuICAgIDxpbnB1dCBmb3I9XCJkaWFsb2ctdXNlci1uYW1lXCIgWyhuZ01vZGVsKV09XCJuYW1lXCI+XHJcbiAgPC9saT5cclxuICA8bGk+XHJcbiAgICA8YnV0dG9uIChjbGljayk9XCJvcGVuRGlhbG9nKClcIj5QaWNrIG9uZTwvYnV0dG9uPlxyXG4gIDwvbGk+XHJcbiAgQGlmIChhbmltYWwpIHtcclxuICAgIDxsaT5cclxuICAgICAgWW91IGNob3NlOiA8ZW0+e3thbmltYWx9fTwvZW0+XHJcbiAgICA8L2xpPlxyXG4gIH1cclxuPC9vbD5cclxuIiwiPGgxPkhpIHt7ZGF0YS5uYW1lfX08L2gxPlxyXG48ZGl2PlxyXG4gIDxsYWJlbCBpZD1cImZhdm9yaXRlLWFuaW1hbFwiPldoYXQncyB5b3VyIGZhdm9yaXRlIGFuaW1hbD88L2xhYmVsPlxyXG4gIDxpbnB1dCBmb3I9XCJmYXZvcml0ZS1hbmltYWxcIiBbKG5nTW9kZWwpXT1cImRhdGEuYW5pbWFsXCIgcGxhY2Vob2xkZXI9XCJFbnRlciB5b3VyIG5hbWVcIj5cclxuPC9kaXY+XHJcbjxkaXY+XHJcbiAgPGJ1dHRvbiAoY2xpY2spPVwiZGlhbG9nUmVmLmNsb3NlKGRhdGEuYW5pbWFsKVwiPk9LPC9idXR0b24+XHJcbiAgPGJ1dHRvbiAoY2xpY2spPVwiZGlhbG9nUmVmLmNsb3NlKClcIj5DYW5jZWw8L2J1dHRvbj5cclxuPC9kaXY+XHJcbiJdfQ==