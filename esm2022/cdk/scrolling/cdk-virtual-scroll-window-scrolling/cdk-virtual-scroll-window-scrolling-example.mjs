import { ChangeDetectionStrategy, Component, Input } from '@angular/core';
import { ScrollingModule } from '@angular/cdk/scrolling';
import * as i0 from "@angular/core";
import * as i1 from "@angular/cdk/scrolling";
/** @title Virtual scrolling window */
export class CdkVirtualScrollWindowScrollingExample {
    constructor() {
        this.shouldRun = /(^|.)(stackblitz|webcontainer).(io|com)$/.test(window.location.host);
        this.items = Array.from({ length: 100000 }).map((_, i) => `Item #${i}`);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.0.4", ngImport: i0, type: CdkVirtualScrollWindowScrollingExample, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.0.0", version: "17.0.4", type: CdkVirtualScrollWindowScrollingExample, isStandalone: true, selector: "cdk-virtual-scroll-window-scrolling-example", inputs: { shouldRun: "shouldRun" }, ngImport: i0, template: "@if (shouldRun) {\r\n  <div class=\"example-header\">Content before</div>\r\n  <cdk-virtual-scroll-viewport scrollWindow itemSize=\"50\">\r\n    <div *cdkVirtualFor=\"let item of items\" class=\"example-item\">{{item}}</div>\r\n  </cdk-virtual-scroll-viewport>\r\n  <div class=\"example-footer\">Content after</div>\r\n}\r\n\r\n@if (!shouldRun) {\r\n  <div>Please open on StackBlitz to see result</div>\r\n}\r\n", styles: [".example-item {\r\n  height: 50px;\r\n}\r\n\r\n.example-header,\r\n.example-footer {\r\n  height: 100px;\r\n  background: lightgray;\r\n}\r\n"], dependencies: [{ kind: "ngmodule", type: ScrollingModule }, { kind: "directive", type: i1.CdkFixedSizeVirtualScroll, selector: "cdk-virtual-scroll-viewport[itemSize]", inputs: ["itemSize", "minBufferPx", "maxBufferPx"] }, { kind: "directive", type: i1.CdkVirtualForOf, selector: "[cdkVirtualFor][cdkVirtualForOf]", inputs: ["cdkVirtualForOf", "cdkVirtualForTrackBy", "cdkVirtualForTemplate", "cdkVirtualForTemplateCacheSize"] }, { kind: "component", type: i1.CdkVirtualScrollViewport, selector: "cdk-virtual-scroll-viewport", inputs: ["orientation", "appendOnly"], outputs: ["scrolledIndexChange"] }, { kind: "directive", type: i1.CdkVirtualScrollableWindow, selector: "cdk-virtual-scroll-viewport[scrollWindow]" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.0.4", ngImport: i0, type: CdkVirtualScrollWindowScrollingExample, decorators: [{
            type: Component,
            args: [{ selector: 'cdk-virtual-scroll-window-scrolling-example', changeDetection: ChangeDetectionStrategy.OnPush, standalone: true, imports: [ScrollingModule], template: "@if (shouldRun) {\r\n  <div class=\"example-header\">Content before</div>\r\n  <cdk-virtual-scroll-viewport scrollWindow itemSize=\"50\">\r\n    <div *cdkVirtualFor=\"let item of items\" class=\"example-item\">{{item}}</div>\r\n  </cdk-virtual-scroll-viewport>\r\n  <div class=\"example-footer\">Content after</div>\r\n}\r\n\r\n@if (!shouldRun) {\r\n  <div>Please open on StackBlitz to see result</div>\r\n}\r\n", styles: [".example-item {\r\n  height: 50px;\r\n}\r\n\r\n.example-header,\r\n.example-footer {\r\n  height: 100px;\r\n  background: lightgray;\r\n}\r\n"] }]
        }], propDecorators: { shouldRun: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2RrLXZpcnR1YWwtc2Nyb2xsLXdpbmRvdy1zY3JvbGxpbmctZXhhbXBsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzLWV4YW1wbGVzL2Nkay9zY3JvbGxpbmcvY2RrLXZpcnR1YWwtc2Nyb2xsLXdpbmRvdy1zY3JvbGxpbmcvY2RrLXZpcnR1YWwtc2Nyb2xsLXdpbmRvdy1zY3JvbGxpbmctZXhhbXBsZS50cyIsIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzLWV4YW1wbGVzL2Nkay9zY3JvbGxpbmcvY2RrLXZpcnR1YWwtc2Nyb2xsLXdpbmRvdy1zY3JvbGxpbmcvY2RrLXZpcnR1YWwtc2Nyb2xsLXdpbmRvdy1zY3JvbGxpbmctZXhhbXBsZS5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBQyx1QkFBdUIsRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQ3hFLE9BQU8sRUFBQyxlQUFlLEVBQUMsTUFBTSx3QkFBd0IsQ0FBQzs7O0FBRXZELHNDQUFzQztBQVN0QyxNQUFNLE9BQU8sc0NBQXNDO0lBUm5EO1FBU1csY0FBUyxHQUFHLDBDQUEwQyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBRTNGLFVBQUssR0FBRyxLQUFLLENBQUMsSUFBSSxDQUFDLEVBQUMsTUFBTSxFQUFFLE1BQU0sRUFBQyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUMsU0FBUyxDQUFDLEVBQUUsQ0FBQyxDQUFDO0tBQ2xFOzhHQUpZLHNDQUFzQztrR0FBdEMsc0NBQXNDLDJJQ1puRCw2WkFXQSxzTUREWSxlQUFlOzsyRkFFZCxzQ0FBc0M7a0JBUmxELFNBQVM7K0JBQ0UsNkNBQTZDLG1CQUd0Qyx1QkFBdUIsQ0FBQyxNQUFNLGNBQ25DLElBQUksV0FDUCxDQUFDLGVBQWUsQ0FBQzs4QkFHakIsU0FBUztzQkFBakIsS0FBSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIENvbXBvbmVudCwgSW5wdXR9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQge1Njcm9sbGluZ01vZHVsZX0gZnJvbSAnQGFuZ3VsYXIvY2RrL3Njcm9sbGluZyc7XHJcblxyXG4vKiogQHRpdGxlIFZpcnR1YWwgc2Nyb2xsaW5nIHdpbmRvdyAqL1xyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ2Nkay12aXJ0dWFsLXNjcm9sbC13aW5kb3ctc2Nyb2xsaW5nLWV4YW1wbGUnLFxyXG4gIHN0eWxlVXJsczogWydjZGstdmlydHVhbC1zY3JvbGwtd2luZG93LXNjcm9sbGluZy1leGFtcGxlLmNzcyddLFxyXG4gIHRlbXBsYXRlVXJsOiAnY2RrLXZpcnR1YWwtc2Nyb2xsLXdpbmRvdy1zY3JvbGxpbmctZXhhbXBsZS5odG1sJyxcclxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcclxuICBzdGFuZGFsb25lOiB0cnVlLFxyXG4gIGltcG9ydHM6IFtTY3JvbGxpbmdNb2R1bGVdLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgQ2RrVmlydHVhbFNjcm9sbFdpbmRvd1Njcm9sbGluZ0V4YW1wbGUge1xyXG4gIEBJbnB1dCgpIHNob3VsZFJ1biA9IC8oXnwuKShzdGFja2JsaXR6fHdlYmNvbnRhaW5lcikuKGlvfGNvbSkkLy50ZXN0KHdpbmRvdy5sb2NhdGlvbi5ob3N0KTtcclxuXHJcbiAgaXRlbXMgPSBBcnJheS5mcm9tKHtsZW5ndGg6IDEwMDAwMH0pLm1hcCgoXywgaSkgPT4gYEl0ZW0gIyR7aX1gKTtcclxufVxyXG4iLCJAaWYgKHNob3VsZFJ1bikge1xyXG4gIDxkaXYgY2xhc3M9XCJleGFtcGxlLWhlYWRlclwiPkNvbnRlbnQgYmVmb3JlPC9kaXY+XHJcbiAgPGNkay12aXJ0dWFsLXNjcm9sbC12aWV3cG9ydCBzY3JvbGxXaW5kb3cgaXRlbVNpemU9XCI1MFwiPlxyXG4gICAgPGRpdiAqY2RrVmlydHVhbEZvcj1cImxldCBpdGVtIG9mIGl0ZW1zXCIgY2xhc3M9XCJleGFtcGxlLWl0ZW1cIj57e2l0ZW19fTwvZGl2PlxyXG4gIDwvY2RrLXZpcnR1YWwtc2Nyb2xsLXZpZXdwb3J0PlxyXG4gIDxkaXYgY2xhc3M9XCJleGFtcGxlLWZvb3RlclwiPkNvbnRlbnQgYWZ0ZXI8L2Rpdj5cclxufVxyXG5cclxuQGlmICghc2hvdWxkUnVuKSB7XHJcbiAgPGRpdj5QbGVhc2Ugb3BlbiBvbiBTdGFja0JsaXR6IHRvIHNlZSByZXN1bHQ8L2Rpdj5cclxufVxyXG4iXX0=