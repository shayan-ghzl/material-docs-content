import { DataSource } from '@angular/cdk/collections';
import { Component } from '@angular/core';
import { FormsModule } from '@angular/forms';
import { BehaviorSubject } from 'rxjs';
import { CdkPopoverEditModule } from '@angular/cdk-experimental/popover-edit';
import { CdkTableModule } from '@angular/cdk/table';
import * as i0 from "@angular/core";
import * as i1 from "@angular/cdk/table";
import * as i2 from "@angular/cdk-experimental/popover-edit";
import * as i3 from "@angular/forms";
const ELEMENT_DATA = [
    { position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H' },
    { position: 2, name: 'Helium', weight: 4.0026, symbol: 'He' },
    { position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li' },
    { position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be' },
    { position: 5, name: 'Boron', weight: 10.811, symbol: 'B' },
    { position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C' },
    { position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N' },
    { position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O' },
    { position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F' },
    { position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne' },
    { position: 11, name: 'Sodium', weight: 22.9897, symbol: 'Na' },
    { position: 12, name: 'Magnesium', weight: 24.305, symbol: 'Mg' },
    { position: 13, name: 'Aluminum', weight: 26.9815, symbol: 'Al' },
    { position: 14, name: 'Silicon', weight: 28.0855, symbol: 'Si' },
    { position: 15, name: 'Phosphorus', weight: 30.9738, symbol: 'P' },
    { position: 16, name: 'Sulfur', weight: 32.065, symbol: 'S' },
    { position: 17, name: 'Chlorine', weight: 35.453, symbol: 'Cl' },
    { position: 18, name: 'Argon', weight: 39.948, symbol: 'Ar' },
    { position: 19, name: 'Potassium', weight: 39.0983, symbol: 'K' },
    { position: 20, name: 'Calcium', weight: 40.078, symbol: 'Ca' },
];
/**
 * @title CDK Popover Edit on a flex cdk-table.
 */
export class CdkPopoverEditCdkTableFlexExample {
    constructor() {
        this.displayedColumns = ['position', 'name', 'weight', 'symbol'];
        this.dataSource = new ExampleDataSource();
        this.preservedNameValues = new WeakMap();
        this.preservedWeightValues = new WeakMap();
    }
    onSubmitName(element, f) {
        if (!f.valid) {
            return;
        }
        element.name = f.value.name;
    }
    onSubmitWeight(element, f) {
        if (!f.valid) {
            return;
        }
        element.weight = f.value.weight;
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.0.4", ngImport: i0, type: CdkPopoverEditCdkTableFlexExample, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "17.0.4", type: CdkPopoverEditCdkTableFlexExample, isStandalone: true, selector: "cdk-popover-edit-cdk-table-flex-example", ngImport: i0, template: "<cdk-table class=\"example-table\" editable [dataSource]=\"dataSource\">\r\n  <!--\r\n    This edit lens is specified outside of the cell and must explicitly declare\r\n    its context. It could be reused in multiple cells.\r\n  -->\r\n  <ng-template #weightEdit let-element>\r\n    <div style=\"background-color: white;\">\r\n      <form #f=\"ngForm\"\r\n          cdkEditControl\r\n          (ngSubmit)=\"onSubmitWeight(element, f)\"\r\n          [cdkEditControlPreservedFormValue]=\"preservedWeightValues.get(element)\"\r\n          (cdkEditControlPreservedFormValueChange)=\"preservedWeightValues.set(element, $event)\">\r\n        Edit b:\r\n        <input type=\"number\" [ngModel]=\"element.weight\" name=\"weight\" required>\r\n        <br>\r\n        <button type=\"submit\">Confirm</button>\r\n        <button cdkEditRevert>Revert</button>\r\n        <button cdkEditClose>Close</button>\r\n      </form>\r\n    </div>\r\n  </ng-template>\r\n\r\n  <!-- Position Column -->\r\n  <ng-container cdkColumnDef=\"position\">\r\n    <cdk-header-cell *cdkHeaderCellDef> No. </cdk-header-cell>\r\n    <cdk-cell *cdkCellDef=\"let element\"> {{element.position}} </cdk-cell>\r\n  </ng-container>\r\n\r\n  <!-- Name Column -->\r\n  <ng-container cdkColumnDef=\"name\">\r\n    <cdk-header-cell *cdkHeaderCellDef> Name </cdk-header-cell>\r\n    <cdk-cell *cdkCellDef=\"let element\"\r\n        [cdkPopoverEdit]=\"nameEdit\">\r\n      {{element.name}}\r\n      \r\n      <!-- This edit is defined in the cell and can implicitly access element -->\r\n      <ng-template #nameEdit>\r\n        <div style=\"background-color: white;\">\r\n          <form #f=\"ngForm\"\r\n              cdkEditControl\r\n              (ngSubmit)=\"onSubmitName(element, f)\"\r\n              [cdkEditControlPreservedFormValue]=\"preservedNameValues.get(element)\"\r\n              (cdkEditControlPreservedFormValueChange)=\"preservedNameValues.set(element, $event)\">\r\n            Edit a:\r\n            <input [ngModel]=\"element.name\" name=\"name\" required>\r\n            <br>\r\n            <button type=\"submit\">Confirm</button>\r\n            <button cdkEditRevert>Revert</button>\r\n            <button cdkEditClose>Close</button>\r\n          </form>\r\n        </div>\r\n      </ng-template>\r\n\r\n      <span *cdkRowHoverContent>\r\n        <button cdkEditOpen>Edit</button>\r\n      </span>\r\n    </cdk-cell>\r\n  </ng-container>\r\n\r\n  <!-- Weight Column -->\r\n  <ng-container cdkColumnDef=\"weight\">\r\n    <cdk-header-cell *cdkHeaderCellDef> Weight </cdk-header-cell>\r\n    <cdk-cell *cdkCellDef=\"let element\"\r\n        [cdkPopoverEdit]=\"weightEdit\" [cdkPopoverEditContext]=\"element\">\r\n      {{element.weight}}\r\n      \r\n      <span *cdkRowHoverContent>\r\n        <button cdkEditOpen>Edit</button>\r\n      </span>\r\n    </cdk-cell>\r\n  </ng-container>\r\n\r\n  <!-- Symbol Column -->\r\n  <ng-container cdkColumnDef=\"symbol\">\r\n    <cdk-header-cell *cdkHeaderCellDef> Symbol </cdk-header-cell>\r\n    <cdk-cell *cdkCellDef=\"let element\"> {{element.symbol}} </cdk-cell>\r\n  </ng-container>\r\n\r\n  <cdk-header-row *cdkHeaderRowDef=\"displayedColumns\"></cdk-header-row>\r\n  <cdk-row *cdkRowDef=\"let row; columns: displayedColumns;\"></cdk-row>\r\n</cdk-table>\r\n", styles: ["/**\r\n * Add basic flex styling so that the cells evenly space themselves in the row.\r\n */\r\n.example-table cdk-row, cdk-header-row, cdk-footer-row {\r\n  display: flex;\r\n}\r\n\r\n.example-table cdk-cell, cdk-header-cell, cdk-footer-cell {\r\n  flex: 1;\r\n}\r\n"], dependencies: [{ kind: "ngmodule", type: CdkTableModule }, { kind: "component", type: i1.CdkTable, selector: "cdk-table, table[cdk-table]", inputs: ["trackBy", "dataSource", "multiTemplateDataRows", "fixedLayout"], outputs: ["contentChanged"], exportAs: ["cdkTable"] }, { kind: "directive", type: i1.CdkRowDef, selector: "[cdkRowDef]", inputs: ["cdkRowDefColumns", "cdkRowDefWhen"] }, { kind: "directive", type: i1.CdkCellDef, selector: "[cdkCellDef]" }, { kind: "directive", type: i1.CdkHeaderCellDef, selector: "[cdkHeaderCellDef]" }, { kind: "directive", type: i1.CdkColumnDef, selector: "[cdkColumnDef]", inputs: ["sticky", "cdkColumnDef", "stickyEnd"] }, { kind: "directive", type: i1.CdkCell, selector: "cdk-cell, td[cdk-cell]" }, { kind: "component", type: i1.CdkRow, selector: "cdk-row, tr[cdk-row]" }, { kind: "directive", type: i1.CdkHeaderCell, selector: "cdk-header-cell, th[cdk-header-cell]" }, { kind: "component", type: i1.CdkHeaderRow, selector: "cdk-header-row, tr[cdk-header-row]" }, { kind: "directive", type: i1.CdkHeaderRowDef, selector: "[cdkHeaderRowDef]", inputs: ["cdkHeaderRowDef", "cdkHeaderRowDefSticky"] }, { kind: "ngmodule", type: CdkPopoverEditModule }, { kind: "directive", type: i2.CdkPopoverEdit, selector: "[cdkPopoverEdit]:not([cdkPopoverEditTabOut])", inputs: ["cdkPopoverEdit", "cdkPopoverEditContext", "cdkPopoverEditColspan", "cdkPopoverEditDisabled"] }, { kind: "directive", type: i2.CdkRowHoverContent, selector: "[cdkRowHoverContent]" }, { kind: "directive", type: i2.CdkEditControl, selector: "form[cdkEditControl]", inputs: ["cdkEditControlClickOutBehavior", "cdkEditControlPreservedFormValue", "cdkEditControlIgnoreSubmitUnlessValid"], outputs: ["cdkEditControlPreservedFormValueChange"] }, { kind: "directive", type: i2.CdkEditRevert, selector: "button[cdkEditRevert]", inputs: ["type"] }, { kind: "directive", type: i2.CdkEditClose, selector: "[cdkEditClose]" }, { kind: "directive", type: i2.CdkEditable, selector: "table[editable], cdk-table[editable], mat-table[editable]" }, { kind: "directive", type: i2.CdkEditOpen, selector: "[cdkEditOpen]" }, { kind: "ngmodule", type: FormsModule }, { kind: "directive", type: i3.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { kind: "directive", type: i3.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { kind: "directive", type: i3.NumberValueAccessor, selector: "input[type=number][formControlName],input[type=number][formControl],input[type=number][ngModel]" }, { kind: "directive", type: i3.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i3.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { kind: "directive", type: i3.RequiredValidator, selector: ":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]", inputs: ["required"] }, { kind: "directive", type: i3.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }, { kind: "directive", type: i3.NgForm, selector: "form:not([ngNoForm]):not([formGroup]),ng-form,[ngForm]", inputs: ["ngFormOptions"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.0.4", ngImport: i0, type: CdkPopoverEditCdkTableFlexExample, decorators: [{
            type: Component,
            args: [{ selector: 'cdk-popover-edit-cdk-table-flex-example', standalone: true, imports: [CdkTableModule, CdkPopoverEditModule, FormsModule], template: "<cdk-table class=\"example-table\" editable [dataSource]=\"dataSource\">\r\n  <!--\r\n    This edit lens is specified outside of the cell and must explicitly declare\r\n    its context. It could be reused in multiple cells.\r\n  -->\r\n  <ng-template #weightEdit let-element>\r\n    <div style=\"background-color: white;\">\r\n      <form #f=\"ngForm\"\r\n          cdkEditControl\r\n          (ngSubmit)=\"onSubmitWeight(element, f)\"\r\n          [cdkEditControlPreservedFormValue]=\"preservedWeightValues.get(element)\"\r\n          (cdkEditControlPreservedFormValueChange)=\"preservedWeightValues.set(element, $event)\">\r\n        Edit b:\r\n        <input type=\"number\" [ngModel]=\"element.weight\" name=\"weight\" required>\r\n        <br>\r\n        <button type=\"submit\">Confirm</button>\r\n        <button cdkEditRevert>Revert</button>\r\n        <button cdkEditClose>Close</button>\r\n      </form>\r\n    </div>\r\n  </ng-template>\r\n\r\n  <!-- Position Column -->\r\n  <ng-container cdkColumnDef=\"position\">\r\n    <cdk-header-cell *cdkHeaderCellDef> No. </cdk-header-cell>\r\n    <cdk-cell *cdkCellDef=\"let element\"> {{element.position}} </cdk-cell>\r\n  </ng-container>\r\n\r\n  <!-- Name Column -->\r\n  <ng-container cdkColumnDef=\"name\">\r\n    <cdk-header-cell *cdkHeaderCellDef> Name </cdk-header-cell>\r\n    <cdk-cell *cdkCellDef=\"let element\"\r\n        [cdkPopoverEdit]=\"nameEdit\">\r\n      {{element.name}}\r\n      \r\n      <!-- This edit is defined in the cell and can implicitly access element -->\r\n      <ng-template #nameEdit>\r\n        <div style=\"background-color: white;\">\r\n          <form #f=\"ngForm\"\r\n              cdkEditControl\r\n              (ngSubmit)=\"onSubmitName(element, f)\"\r\n              [cdkEditControlPreservedFormValue]=\"preservedNameValues.get(element)\"\r\n              (cdkEditControlPreservedFormValueChange)=\"preservedNameValues.set(element, $event)\">\r\n            Edit a:\r\n            <input [ngModel]=\"element.name\" name=\"name\" required>\r\n            <br>\r\n            <button type=\"submit\">Confirm</button>\r\n            <button cdkEditRevert>Revert</button>\r\n            <button cdkEditClose>Close</button>\r\n          </form>\r\n        </div>\r\n      </ng-template>\r\n\r\n      <span *cdkRowHoverContent>\r\n        <button cdkEditOpen>Edit</button>\r\n      </span>\r\n    </cdk-cell>\r\n  </ng-container>\r\n\r\n  <!-- Weight Column -->\r\n  <ng-container cdkColumnDef=\"weight\">\r\n    <cdk-header-cell *cdkHeaderCellDef> Weight </cdk-header-cell>\r\n    <cdk-cell *cdkCellDef=\"let element\"\r\n        [cdkPopoverEdit]=\"weightEdit\" [cdkPopoverEditContext]=\"element\">\r\n      {{element.weight}}\r\n      \r\n      <span *cdkRowHoverContent>\r\n        <button cdkEditOpen>Edit</button>\r\n      </span>\r\n    </cdk-cell>\r\n  </ng-container>\r\n\r\n  <!-- Symbol Column -->\r\n  <ng-container cdkColumnDef=\"symbol\">\r\n    <cdk-header-cell *cdkHeaderCellDef> Symbol </cdk-header-cell>\r\n    <cdk-cell *cdkCellDef=\"let element\"> {{element.symbol}} </cdk-cell>\r\n  </ng-container>\r\n\r\n  <cdk-header-row *cdkHeaderRowDef=\"displayedColumns\"></cdk-header-row>\r\n  <cdk-row *cdkRowDef=\"let row; columns: displayedColumns;\"></cdk-row>\r\n</cdk-table>\r\n", styles: ["/**\r\n * Add basic flex styling so that the cells evenly space themselves in the row.\r\n */\r\n.example-table cdk-row, cdk-header-row, cdk-footer-row {\r\n  display: flex;\r\n}\r\n\r\n.example-table cdk-cell, cdk-header-cell, cdk-footer-cell {\r\n  flex: 1;\r\n}\r\n"] }]
        }] });
/**
 * Data source to provide what data should be rendered in the table. Note that the data source
 * can retrieve its data in any way. In this case, the data source is provided a reference
 * to a common data base, ExampleDatabase. It is not the data source's responsibility to manage
 * the underlying data. Instead, it only needs to take the data and send the table exactly what
 * should be rendered.
 */
export class ExampleDataSource extends DataSource {
    constructor() {
        super(...arguments);
        /** Stream of data that is provided to the table. */
        this.data = new BehaviorSubject(ELEMENT_DATA);
    }
    /** Connect function called by the table to retrieve one stream containing the data to render. */
    connect() {
        return this.data;
    }
    disconnect() { }
}
//# sourceMappingURL=data:application/json;base64,