import { Component } from '@angular/core';
import { FormsModule } from '@angular/forms';
import { CdkPopoverEditModule } from '@angular/cdk-experimental/popover-edit';
import * as i0 from "@angular/core";
import * as i1 from "@angular/cdk-experimental/popover-edit";
import * as i2 from "@angular/forms";
const PERSON_DATA = [
    { id: 1, firstName: 'Terra', middleName: 'Maduin', lastName: 'Branford' },
    { id: 2, firstName: 'Locke', middleName: '', lastName: 'Cole' },
    { id: 3, firstName: 'Celes', middleName: 'Gestahl', lastName: 'Chere' },
    { id: 4, firstName: 'Edgar', middleName: 'Roni', lastName: 'Figaro' },
    { id: 5, firstName: 'Sabin', middleName: 'Rene', lastName: 'Figaro' },
    { id: 6, firstName: 'Clyde', middleName: '"Shadow"', lastName: 'Arrowny' },
    { id: 7, firstName: 'Setzer', middleName: '', lastName: 'Gabbiani' },
    { id: 8, firstName: 'Cid', middleName: 'Del Norte', lastName: 'Marquez' },
    { id: 9, firstName: 'Mog', middleName: '', lastName: 'McMoogle' },
];
/**
 * @title CDK Popover Edit spanning multiple columns on an HTML data-table
 */
export class CdkPopoverEditCellSpanVanillaTableExample {
    constructor() {
        this.preservedValues = new WeakMap();
        this.persons = PERSON_DATA;
    }
    onSubmit(person, f) {
        if (!f.valid) {
            return;
        }
        person.firstName = f.value['firstName'];
        person.middleName = f.value['middleName'];
        person.lastName = f.value['lastName'];
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.0.4", ngImport: i0, type: CdkPopoverEditCellSpanVanillaTableExample, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.0.0", version: "17.0.4", type: CdkPopoverEditCellSpanVanillaTableExample, isStandalone: true, selector: "cdk-popover-edit-cell-span-vanilla-table-example", ngImport: i0, template: "<table editable class=\"example-table\">\r\n  <!--\r\n    This edit lens is specified outside of the cell and must explicitly declare\r\n    its context. It could be reused in multiple cells.\r\n  -->\r\n  <ng-template #nameEdit let-ctx>\r\n    <div style=\"background-color: #ddd; width: 100%\">\r\n      <form #f=\"ngForm\"\r\n          cdkEditControl\r\n          (ngSubmit)=\"onSubmit(ctx.person, f)\"\r\n          [cdkEditControlPreservedFormValue]=\"preservedValues.get(ctx.person)\"\r\n          (cdkEditControlPreservedFormValueChange)=\"preservedValues.set(ctx.person, $event)\">\r\n        <div class=\"example-input-container\">\r\n          <input [ngModel]=\"ctx.person.firstName\" name=\"firstName\" required\r\n              [attr.cdkFocusInitial]=\"ctx.focus === 'firstName' || null\">\r\n          <input [ngModel]=\"ctx.person.middleName\" name=\"middleName\"\r\n              [attr.cdkFocusInitial]=\"ctx.focus === 'middleName' || null\">\r\n          <input [ngModel]=\"ctx.person.lastName\" name=\"lastName\" required\r\n              [attr.cdkFocusInitial]=\"ctx.focus === 'lastName' || null\">\r\n        </div>\r\n        <br>\r\n        <br>\r\n        <button type=\"submit\">Confirm</button>\r\n        <button cdkEditRevert>Revert</button>\r\n        <button cdkEditClose>Close</button>\r\n      </form>\r\n    </div>\r\n  </ng-template>\r\n\r\n  <tr>\r\n    <th> No. </th>\r\n    <th> First name </th>\r\n    <th> Middle name </th>\r\n    <th> Last name </th>\r\n  </tr>\r\n\r\n  @for (person of persons; track person) {\r\n    <tr>\r\n      <td> {{person.id}} </td>\r\n\r\n      <td [cdkPopoverEdit]=\"nameEdit\"\r\n          [cdkPopoverEditContext]=\"{person: person, focus: 'firstName'}\"\r\n          [cdkPopoverEditColspan]=\"{after: 2}\">\r\n        {{person.firstName}}\r\n\r\n        <span *cdkRowHoverContent>\r\n          <button cdkEditOpen>Edit</button>\r\n        </span>\r\n      </td>\r\n\r\n      <td [cdkPopoverEdit]=\"nameEdit\"\r\n          [cdkPopoverEditContext]=\"{person: person, focus: 'middleName'}\"\r\n          [cdkPopoverEditColspan]=\"{before: 1, after: 1}\">\r\n        {{person.middleName}}\r\n\r\n        <span *cdkRowHoverContent>\r\n          <button cdkEditOpen>Edit</button>\r\n        </span>\r\n      </td>\r\n\r\n      <td [cdkPopoverEdit]=\"nameEdit\"\r\n          [cdkPopoverEditContext]=\"{person: person, focus: 'lastName'}\"\r\n          [cdkPopoverEditColspan]=\"{before: 2}\">\r\n        {{person.lastName}}\r\n\r\n        <span *cdkRowHoverContent>\r\n          <button cdkEditOpen>Edit</button>\r\n        </span>\r\n      </td>\r\n    </tr>\r\n  }\r\n</table>\r\n", styles: [".example-table {\r\n  width: 100%;\r\n}\r\n\r\n.example-table th {\r\n  text-align: left;\r\n}\r\n\r\n.example-table td,\r\n.example-table th {\r\n  min-width: 300px;\r\n  width: 25%;\r\n}\r\n\r\n.example-input-container {\r\n  display: flex;\r\n  justify-content: stretch;\r\n}\r\n\r\n.example-input-container input {\r\n  flex: 1;\r\n  font-size: 14px;\r\n}\r\n"], dependencies: [{ kind: "ngmodule", type: CdkPopoverEditModule }, { kind: "directive", type: i1.CdkPopoverEdit, selector: "[cdkPopoverEdit]:not([cdkPopoverEditTabOut])", inputs: ["cdkPopoverEdit", "cdkPopoverEditContext", "cdkPopoverEditColspan", "cdkPopoverEditDisabled"] }, { kind: "directive", type: i1.CdkRowHoverContent, selector: "[cdkRowHoverContent]" }, { kind: "directive", type: i1.CdkEditControl, selector: "form[cdkEditControl]", inputs: ["cdkEditControlClickOutBehavior", "cdkEditControlPreservedFormValue", "cdkEditControlIgnoreSubmitUnlessValid"], outputs: ["cdkEditControlPreservedFormValueChange"] }, { kind: "directive", type: i1.CdkEditRevert, selector: "button[cdkEditRevert]", inputs: ["type"] }, { kind: "directive", type: i1.CdkEditClose, selector: "[cdkEditClose]" }, { kind: "directive", type: i1.CdkEditable, selector: "table[editable], cdk-table[editable], mat-table[editable]" }, { kind: "directive", type: i1.CdkEditOpen, selector: "[cdkEditOpen]" }, { kind: "ngmodule", type: FormsModule }, { kind: "directive", type: i2.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { kind: "directive", type: i2.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { kind: "directive", type: i2.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i2.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { kind: "directive", type: i2.RequiredValidator, selector: ":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]", inputs: ["required"] }, { kind: "directive", type: i2.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }, { kind: "directive", type: i2.NgForm, selector: "form:not([ngNoForm]):not([formGroup]),ng-form,[ngForm]", inputs: ["ngFormOptions"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.0.4", ngImport: i0, type: CdkPopoverEditCellSpanVanillaTableExample, decorators: [{
            type: Component,
            args: [{ selector: 'cdk-popover-edit-cell-span-vanilla-table-example', standalone: true, imports: [CdkPopoverEditModule, FormsModule], template: "<table editable class=\"example-table\">\r\n  <!--\r\n    This edit lens is specified outside of the cell and must explicitly declare\r\n    its context. It could be reused in multiple cells.\r\n  -->\r\n  <ng-template #nameEdit let-ctx>\r\n    <div style=\"background-color: #ddd; width: 100%\">\r\n      <form #f=\"ngForm\"\r\n          cdkEditControl\r\n          (ngSubmit)=\"onSubmit(ctx.person, f)\"\r\n          [cdkEditControlPreservedFormValue]=\"preservedValues.get(ctx.person)\"\r\n          (cdkEditControlPreservedFormValueChange)=\"preservedValues.set(ctx.person, $event)\">\r\n        <div class=\"example-input-container\">\r\n          <input [ngModel]=\"ctx.person.firstName\" name=\"firstName\" required\r\n              [attr.cdkFocusInitial]=\"ctx.focus === 'firstName' || null\">\r\n          <input [ngModel]=\"ctx.person.middleName\" name=\"middleName\"\r\n              [attr.cdkFocusInitial]=\"ctx.focus === 'middleName' || null\">\r\n          <input [ngModel]=\"ctx.person.lastName\" name=\"lastName\" required\r\n              [attr.cdkFocusInitial]=\"ctx.focus === 'lastName' || null\">\r\n        </div>\r\n        <br>\r\n        <br>\r\n        <button type=\"submit\">Confirm</button>\r\n        <button cdkEditRevert>Revert</button>\r\n        <button cdkEditClose>Close</button>\r\n      </form>\r\n    </div>\r\n  </ng-template>\r\n\r\n  <tr>\r\n    <th> No. </th>\r\n    <th> First name </th>\r\n    <th> Middle name </th>\r\n    <th> Last name </th>\r\n  </tr>\r\n\r\n  @for (person of persons; track person) {\r\n    <tr>\r\n      <td> {{person.id}} </td>\r\n\r\n      <td [cdkPopoverEdit]=\"nameEdit\"\r\n          [cdkPopoverEditContext]=\"{person: person, focus: 'firstName'}\"\r\n          [cdkPopoverEditColspan]=\"{after: 2}\">\r\n        {{person.firstName}}\r\n\r\n        <span *cdkRowHoverContent>\r\n          <button cdkEditOpen>Edit</button>\r\n        </span>\r\n      </td>\r\n\r\n      <td [cdkPopoverEdit]=\"nameEdit\"\r\n          [cdkPopoverEditContext]=\"{person: person, focus: 'middleName'}\"\r\n          [cdkPopoverEditColspan]=\"{before: 1, after: 1}\">\r\n        {{person.middleName}}\r\n\r\n        <span *cdkRowHoverContent>\r\n          <button cdkEditOpen>Edit</button>\r\n        </span>\r\n      </td>\r\n\r\n      <td [cdkPopoverEdit]=\"nameEdit\"\r\n          [cdkPopoverEditContext]=\"{person: person, focus: 'lastName'}\"\r\n          [cdkPopoverEditColspan]=\"{before: 2}\">\r\n        {{person.lastName}}\r\n\r\n        <span *cdkRowHoverContent>\r\n          <button cdkEditOpen>Edit</button>\r\n        </span>\r\n      </td>\r\n    </tr>\r\n  }\r\n</table>\r\n", styles: [".example-table {\r\n  width: 100%;\r\n}\r\n\r\n.example-table th {\r\n  text-align: left;\r\n}\r\n\r\n.example-table td,\r\n.example-table th {\r\n  min-width: 300px;\r\n  width: 25%;\r\n}\r\n\r\n.example-input-container {\r\n  display: flex;\r\n  justify-content: stretch;\r\n}\r\n\r\n.example-input-container input {\r\n  flex: 1;\r\n  font-size: 14px;\r\n}\r\n"] }]
        }] });
//# sourceMappingURL=data:application/json;base64,